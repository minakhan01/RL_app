[{"/Users/shriramchenniappa/Desktop/personal/RL_app/src/index.js":"1","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/StroopScreen/index.jsx":"2","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/onboarding.reducer.js":"3","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/onboarding.action.js":"4","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/PersonalInformation.jsx":"5","/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/EventHandler/index.js":"6","/Users/shriramchenniappa/Desktop/personal/RL_app/src/services/awclient.service.js":"7","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/PopupScreen/index.jsx":"8","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/test.reducer.js":"9","/Users/shriramchenniappa/Desktop/personal/RL_app/src/utils/dates.js":"10","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/RegularBreaks.jsx":"11","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Toolbar.js":"12","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/index.js":"13","/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/scheduled.break.js":"14","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/past.action.js":"15","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/break.action.js":"16","/Users/shriramchenniappa/Desktop/personal/RL_app/src/reportWebVitals.js":"17","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Timer.js":"18","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/CalendarScreen/index.jsx":"19","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/BreakScreen/index.jsx":"20","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/FinishingUp.jsx":"21","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/HomeScreen/index.jsx":"22","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/AdHocBreaks.jsx":"23","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/types/break.types.js":"24","/Users/shriramchenniappa/Desktop/personal/RL_app/src/App.js":"25","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/index.jsx":"26","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/types/onboarding.types.js":"27","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/break.reducer.js":"28","/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/index.js":"29","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/stroop_test/index.jsx":"30","/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/activityrule.break.js":"31"},{"size":500,"mtime":1631710461205,"results":"32","hashOfConfig":"33"},{"size":1585,"mtime":1631710811015,"results":"34","hashOfConfig":"33"},{"size":2056,"mtime":1631710811012,"results":"35","hashOfConfig":"33"},{"size":1145,"mtime":1631710811011,"results":"36","hashOfConfig":"33"},{"size":3536,"mtime":1631710811014,"results":"37","hashOfConfig":"33"},{"size":2108,"mtime":1631711406278,"results":"38","hashOfConfig":"33"},{"size":6707,"mtime":1631710461215,"results":"39","hashOfConfig":"33"},{"size":1613,"mtime":1631710811015,"results":"40","hashOfConfig":"33"},{"size":290,"mtime":1631710461209,"results":"41","hashOfConfig":"33"},{"size":3686,"mtime":1631710461216,"results":"42","hashOfConfig":"33"},{"size":2594,"mtime":1631710461213,"results":"43","hashOfConfig":"33"},{"size":2112,"mtime":1631710811010,"results":"44","hashOfConfig":"33"},{"size":211,"mtime":1631710461207,"results":"45","hashOfConfig":"33"},{"size":2115,"mtime":1631710811010,"results":"46","hashOfConfig":"33"},{"size":413,"mtime":1631710461207,"results":"47","hashOfConfig":"33"},{"size":867,"mtime":1631710811011,"results":"48","hashOfConfig":"33"},{"size":362,"mtime":1631710461211,"results":"49","hashOfConfig":"33"},{"size":1031,"mtime":1631710461204,"results":"50","hashOfConfig":"33"},{"size":4198,"mtime":1631710811013,"results":"51","hashOfConfig":"33"},{"size":5728,"mtime":1631711984818,"results":"52","hashOfConfig":"33"},{"size":3171,"mtime":1631712012395,"results":"53","hashOfConfig":"33"},{"size":3034,"mtime":1631712024712,"results":"54","hashOfConfig":"33"},{"size":11693,"mtime":1631710461213,"results":"55","hashOfConfig":"33"},{"size":371,"mtime":1631710811013,"results":"56","hashOfConfig":"33"},{"size":560,"mtime":1631710811009,"results":"57","hashOfConfig":"33"},{"size":2964,"mtime":1631710811015,"results":"58","hashOfConfig":"33"},{"size":546,"mtime":1631710811013,"results":"59","hashOfConfig":"33"},{"size":1740,"mtime":1631710811012,"results":"60","hashOfConfig":"33"},{"size":346,"mtime":1631710811009,"results":"61","hashOfConfig":"33"},{"size":3226,"mtime":1631710811011,"results":"62","hashOfConfig":"33"},{"size":2892,"mtime":1631710461202,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"tn93fm",{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/shriramchenniappa/Desktop/personal/RL_app/src/index.js",[],["139","140"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/StroopScreen/index.jsx",["141","142","143"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BreakActions, PastActions } from \"../../redux/actions\";\nimport { Button } from \"antd\";\nimport { store } from \"../../redux\";\nimport StroopTest from \"../../components/stroop_test\";\n\nvar s1 = {\n  height: \"100vh\",\n  width: \"100vw\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n//TO-DO: add style\nconst StroopScreen = () => {\n  const [complte, setComplete] = useState(false);\n  const [scores, setScore] = useState([]);\n  let dispatch = useDispatch();\n  console.log(\"sc\", scores);\n  if (complte) {\n    return (\n      <div style={{ backgroundColor: \"white\", padding: \"3%\" }}>\n        {scores.length < 3 ? (\n          <Button\n            onClick={() => {\n              setComplete(false);\n            }}\n          >\n            Continue\n          </Button>\n        ) : (\n          <Button\n            onClick={() => {\n              dispatch(BreakActions.startBreak());\n            }}\n          >\n            Take Break\n          </Button>\n        )}\n      </div>\n    );\n  } else {\n    return (\n      <div style={{ backgroundColor: \"white\", padding: \"3%\" }}>\n        <StroopTest\n          len={4}\n          style={s1}\n          onComplete={(score) => {\n            //   setStage({ ...stage, stroop: 2, scores: [...stage.scores, score] });\n            let tempArray = [...scores];\n            tempArray.push(score);\n            setScore(tempArray);\n            setComplete(true);\n          }}\n        />\n      </div>\n    );\n  }\n};\nexport default StroopScreen;\n",["144","145"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/onboarding.reducer.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/onboarding.action.js",[],["146","147"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/PersonalInformation.jsx",["148","149","150","151","152","153","154"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/EventHandler/index.js",["155","156","157"],"import { BreakActions, PastActions } from \"../../redux/actions\";\nimport { store } from \"../../redux\";\nvar electron = window.require(\"electron\");\nvar curWindow = electron.remote.getCurrentWindow();\nconst isDev = window.require(\"electron-is-dev\");\nconst path = window.require(\"path\");\n\n//handles window and route changes when break-state changes\nexport default function eventHandler(history) {\n  //sets screen back to normal if no break\n  if (\n    store.getState().break.breakState === \"no-break\" &&\n    !store.getState().break.windowChanged\n  ) {\n    curWindow.setOpacity(1);\n    curWindow.unmaximize();\n    curWindow.setSize(1200, 1000);\n    curWindow.minimize();\n    history.push(\"/\");\n    store.dispatch(BreakActions.setWindowChanged());\n    curWindow.setAlwaysOnTop(false);\n  }\n\n  //sets screen to popup window size if break-popup\n  else if (\n    store.getState().break.breakState === \"break-popup\" &&\n    !store.getState().break.windowChanged\n  ) {\n    curWindow.restore();\n    history.push(\"/popup\");\n    //curWindow.maximize()\n    curWindow.unmaximize();\n    curWindow.setSize(800, 600);\n    curWindow.center();\n    curWindow.setAlwaysOnTop(true, \"pop-up-menu\");\n\n    store.dispatch(BreakActions.setWindowChanged());\n  } else if (store.getState().break.breakState === \"break-stroop\") {\n    history.push(\"/stroop\");\n  }\n\n  //sets window to full screen if break, and also ends the break after break time is over\n  else if (\n    store.getState().break.breakState === \"break\" &&\n    !store.getState().break.windowChanged\n  ) {\n    curWindow.setOpacity(0.8);\n    curWindow.maximize();\n\n    history.push(\"/break\");\n    store.dispatch(BreakActions.setWindowChanged());\n    let s1 = store.getState().break.breakStartTime;\n    setTimeout(() => {\n      if (\n        store.getState().break.breakState === \"break\" &&\n        s1 === store.getState().break.breakStartTime\n      )\n        store.dispatch(\n          BreakActions.endBreak(store.getState().break.breakEndTime)\n        );\n      curWindow.setAlwaysOnTop(false);\n      curWindow.setMovable(true);\n    }, store.getState().break.breakDuration * 1000);\n  }\n}\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/services/awclient.service.js",["158","159"],"import { AWClient } from \"aw-client\";\n\nclass AWClientService {\n  constructor() {\n    this.client = new AWClient(\"test-client\");\n    this.todayDate = new Date();\n    this.tmrwDate = new Date();\n    this.todayDate.setHours(0, 0, 0, 0);\n    this.tmrwDate.setHours(23, 59, 59, 999);\n    this.todayDate = this.todayDate.toISOString();\n    this.tmrwDate = this.tmrwDate.toISOString();\n    this.client.getBuckets().then((buckets) => {\n      this.bucketMap = {};\n      for (var bucketid in buckets) {\n        this.bucketMap[buckets[bucketid].client] = bucketid;\n      }\n    });\n  }\n\n  createBucketMap() {\n    return this.client.getBuckets().then((buckets) => {\n      this.bucketMap = {};\n      for (var bucketid in buckets) {\n        this.bucketMap[buckets[bucketid].client] = bucketid;\n      }\n    });\n  }\n\n  updateDate() {\n    this.todayDate = new Date();\n    this.tmrwDate = new Date();\n    this.todayDate.setHours(0, 0, 0, 0);\n    this.tmrwDate.setHours(23, 59, 59, 999);\n    this.todayDate = this.todayDate.toISOString();\n    this.tmrwDate = this.tmrwDate.toISOString();\n  }\n\n  //get today's active windows in order\n  async getActiveWindows() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n      const query = [\n        \"RETURN=query_bucket('\" + this.bucketMap[\"aw-watcher-window\"] + \"')\",\n      ];\n      const activeWindows = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n      return activeWindows[0];\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  //get all active windows since the beginning\n  async getActiveWindowsSinceBeginning() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n      const query = [\n        \"RETURN=query_bucket('\" + this.bucketMap[\"aw-watcher-window\"] + \"')\",\n      ];\n      const activeWindows = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n      return activeWindows[0];\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  //get today's afk in order\n  async getAFK() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n\n      var query = [\n        \"bucket='\" + this.bucketMap[\"aw-watcher-afk\"] + \"';\",\n        \"RETURN=query_bucket(bucket);\",\n      ];\n      const afk = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n      return afk[0];\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getAppTotals() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n\n      var query = [\n        \"window_events = query_bucket('\" +\n          this.bucketMap[\"aw-watcher-window\"] +\n          \"');\",\n        \"events = merge_events_by_keys(window_events, ['app','title']);\",\n        \"events = sort_by_duration(events);\",\n        \"RETURN = events;\",\n      ];\n      const queryWindows = [\n        \"window_events = query_bucket('\" + \"aw-watcher-web-chrome\" + \"');\",\n        \"events = merge_events_by_keys(window_events, ['title','url']);\",\n        \"events = sort_by_duration(events);\",\n        \"RETURN = events;\",\n      ];\n      const appTotalWithoutAudio = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n      const websiteTotals = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        queryWindows\n      );\n      return {\n        appTotal: appTotalWithoutAudio[0],\n        websiteTotals: websiteTotals[0],\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  //find total time per app in the day excluding video streaming AFK\n  async getAppTotalsIntersectAFKWithoutAudio() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n\n      var query = [\n        \"window_events = query_bucket('\" +\n          this.bucketMap[\"aw-watcher-window\"] +\n          \"');\",\n        \"not_afk_events = query_bucket('\" +\n          this.bucketMap[\"aw-watcher-afk\"] +\n          \"');\",\n        \"not_afk_events = filter_keyvals(not_afk_events, 'status', ['not-afk']);\",\n        \"window_events = filter_period_intersect(window_events, not_afk_events);\",\n        \"events = merge_events_by_keys(window_events, ['app']);\",\n        \"events = sort_by_duration(events);\",\n        \"RETURN = events;\",\n      ];\n      const appTotalWithoutAudio = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n      return appTotalWithoutAudio[0];\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  //find total time per app in the day including video streaming AFK\n  async getAppTotalIntersectAFKWithAudio() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n\n      var query = [\n        \"window_events = query_bucket('\" +\n          this.bucketMap[\"aw-watcher-window\"] +\n          \"');\",\n        \"not_afk_events = query_bucket('\" +\n          this.bucketMap[\"aw-watcher-afk\"] +\n          \"');\",\n        \"not_afk_events = filter_keyvals(not_afk_events, 'status', ['not-afk']);\",\n        \"web_events = query_bucket('\" + this.bucketMap[\"aw-client-web\"] + \"');\",\n        \"audible_events = filter_keyvals(web_events, 'audible', [true]);\",\n        \"afk_events = query_bucket('\" +\n          this.bucketMap[\"aw-watcher-afk\"] +\n          \"');\",\n        \"afk_events = filter_keyvals(afk_events, 'status', ['afk']);\",\n        \"audible_afk_events = filter_period_intersect(audible_events,afk_events);\",\n        \"not_afk_events = concat(not_afk_events, audible_afk_events);\",\n        \"window_events = filter_period_intersect(window_events, not_afk_events);\",\n        \"events = merge_events_by_keys(window_events, ['app','url']);\",\n        \"events = sort_by_duration(events);\",\n        \"RETURN = events;\",\n      ];\n\n      const appTotalWithAudio = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n      return appTotalWithAudio[0];\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  //find currently active window\n  async getCurrentlyActiveWindow() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n\n      var query = [\n        \"RETURN=query_bucket('\" + this.bucketMap[\"aw-watcher-window\"] + \"')\",\n      ];\n\n      const activeWindows = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n      return activeWindows[0][0];\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\nexport default AWClientService;\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/PopupScreen/index.jsx",["160","161","162"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/test.reducer.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/utils/dates.js",["163","164","165","166","167"],"import * as dates from 'date-arithmetic'\n\nexport {\n  milliseconds,\n  seconds,\n  minutes,\n  hours,\n  month,\n  startOf,\n  endOf,\n  add,\n  eq,\n  gte,\n  gt,\n  lte,\n  lt,\n  inRange,\n  min,\n  max,\n} from 'date-arithmetic'\n\nconst MILLI = {\n  seconds: 1000,\n  minutes: 1000 * 60,\n  hours: 1000 * 60 * 60,\n  day: 1000 * 60 * 60 * 24,\n}\n\nconst MONTHS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n\nexport function monthsInYear(year) {\n  let date = new Date(year, 0, 1)\n\n  return MONTHS.map(i => dates.month(date, i))\n}\n\nexport function firstVisibleDay(date, localizer) {\n  let firstOfMonth = dates.startOf(date, 'month')\n\n  return dates.startOf(firstOfMonth, 'week', localizer.startOfWeek())\n}\n\nexport function lastVisibleDay(date, localizer) {\n  let endOfMonth = dates.endOf(date, 'month')\n\n  return dates.endOf(endOfMonth, 'week', localizer.startOfWeek())\n}\n\nexport function visibleDays(date, localizer) {\n  let current = firstVisibleDay(date, localizer),\n    last = lastVisibleDay(date, localizer),\n    days = []\n\n  while (dates.lte(current, last, 'day')) {\n    days.push(current)\n    current = dates.add(current, 1, 'day')\n  }\n\n  return days\n}\n\nexport function ceil(date, unit) {\n  let floor = dates.startOf(date, unit)\n\n  return dates.eq(floor, date) ? floor : dates.add(floor, 1, unit)\n}\n\nexport function range(start, end, unit = 'day') {\n  let current = start,\n    days = []\n\n  while (dates.lte(current, end, unit)) {\n    days.push(current)\n    current = dates.add(current, 1, unit)\n  }\n\n  return days\n}\n\nexport function merge(date, time) {\n  if (time == null && date == null) return null\n\n  if (time == null) time = new Date()\n  if (date == null) date = new Date()\n\n  date = dates.startOf(date, 'day')\n  date = dates.hours(date, dates.hours(time))\n  date = dates.minutes(date, dates.minutes(time))\n  date = dates.seconds(date, dates.seconds(time))\n  return dates.milliseconds(date, dates.milliseconds(time))\n}\n\nexport function eqTime(dateA, dateB) {\n  return (\n    dates.hours(dateA) === dates.hours(dateB) &&\n    dates.minutes(dateA) === dates.minutes(dateB) &&\n    dates.seconds(dateA) === dates.seconds(dateB)\n  )\n}\n\nexport function isJustDate(date) {\n  return (\n    dates.hours(date) === 0 &&\n    dates.minutes(date) === 0 &&\n    dates.seconds(date) === 0 &&\n    dates.milliseconds(date) === 0\n  )\n}\n\nexport function duration(start, end, unit, firstOfWeek) {\n  if (unit === 'day') unit = 'date'\n  return Math.abs(\n    dates[unit](start, undefined, firstOfWeek) -\n      dates[unit](end, undefined, firstOfWeek)\n  )\n}\n\nexport function diff(dateA, dateB, unit) {\n  if (!unit || unit === 'milliseconds') return Math.abs(+dateA - +dateB)\n\n  // the .round() handles an edge case\n  // with DST where the total won't be exact\n  // since one day in the range may be shorter/longer by an hour\n  return Math.round(\n    Math.abs(\n      +dates.startOf(dateA, unit) / MILLI[unit] -\n        +dates.startOf(dateB, unit) / MILLI[unit]\n    )\n  )\n}\n\nexport function total(date, unit) {\n  let ms = date.getTime(),\n    div = 1\n\n  switch (unit) {\n    case 'week':\n      div *= 7\n    case 'day':\n      div *= 24\n    case 'hours':\n      div *= 60\n    case 'minutes':\n      div *= 60\n    case 'seconds':\n      div *= 1000\n  }\n\n  return ms / div\n}\n\nexport function week(date) {\n  var d = new Date(date)\n  d.setHours(0, 0, 0)\n  d.setDate(d.getDate() + 4 - (d.getDay() || 7))\n  return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7)\n}\n\nexport function today() {\n  return dates.startOf(new Date(), 'day')\n}\n\nexport function yesterday() {\n  return dates.add(dates.startOf(new Date(), 'day'), -1, 'day')\n}\n\nexport function tomorrow() {\n  return dates.add(dates.startOf(new Date(), 'day'), 1, 'day')\n}","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/RegularBreaks.jsx",["168","169"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Input } from \"antd\";\n\nimport { OnboardingActions } from \"../../redux/actions\";\n\nimport \"./styles.css\";\n\nconst RegularBreakScreen = (props) => {\n  return (\n    <div className=\"step-container\">\n      <h1>Regular Breaks</h1>\n      <div style={{ marginTop: \"3%\" }}>\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\n          How long would you like your breaks to be?\n        </p>\n        <div\n          style={{\n            marginTop: \"1%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Input\n            size=\"large\"\n            style={{ width: \"10%\", borderRadius: 5, verticalAlign: \"center\" }}\n            placeholder=\"Length\"\n            type=\"number\"\n            value={props.onboarding.regularBreakLength}\n            onChange={(e) => {\n              if (e.target.value > 0)\n                props.setRegularBreakLength(e.target.value);\n            }}\n          />\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\n            minutes\n          </p>\n        </div>\n      </div>\n      <div style={{ marginTop: \"3%\" }}>\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\n          After how long would you like to take regular breaks?\n        </p>\n        <div\n          style={{\n            marginTop: \"1%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Input\n            size=\"large\"\n            style={{ width: \"10%\", borderRadius: 5, verticalAlign: \"center\" }}\n            placeholder=\"Interval\"\n            type=\"number\"\n            value={props.onboarding.regularBreakInterval}\n            onChange={(e) => {\n              if (e.target.value > 0 && e.target.value < 61)\n                props.setRegularBreakInterval(e.target.value);\n            }}\n          />\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\n            minutes\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setRegularBreakInterval: OnboardingActions.setRegularBreakInterval,\n      setRegularBreakLength: OnboardingActions.setRegularBreakLength,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegularBreakScreen);\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Toolbar.js",["170","171","172"],"import \"./styles.css\";\nimport { BreakActions, PastActions } from \"../redux/actions\";\nimport exitFullscreen from \"../assets/exit-fullscreen.png\";\nimport fullscreen from \"../assets/fullscreen.png\";\nimport { store } from \"../redux\";\nimport { useEffect, useState } from \"react\";\n\nexport default function Toolbar(props) {\n  let mounted = true;\n  useEffect(() => {\n    return () => {\n      mounted = false;\n    };\n  });\n\n  const [minsRem, setMinsRem] = useState(Math.ceil(props.totaltime / 60));\n  setTimeout(() => {\n    setMinsRem(minsRem - 1);\n  }, 60000);\n  let str;\n  if (minsRem != 1) str = minsRem + \" Minutes remaining\";\n  else str = minsRem + \" Minute remaining\";\n  if (props.type === \"minimize\")\n    return (\n      <div className=\"toolbar\">\n        <div className=\"minutes-remaining\">{str}</div>\n        <button\n          className=\"minimize-break2\"\n          onClick={() => {\n            if (mounted) props.minimize(true);\n          }}\n        >\n          <img\n            src={exitFullscreen}\n            alt=\"Mountains\"\n            width=\"70\"\n            height=\"70\"\n          ></img>\n        </button>\n        <button\n          className=\"close-break2\"\n          onClick={() => {\n            store.dispatch(BreakActions.endBreak(store.getState().break.breakEndTime));\n          }}\n        >\n          &#10006;\n        </button>\n      </div>\n    );\n  else\n    return (\n      <div className=\"toolbar2\">\n        <div className=\"minutes-remaining2\">{str}</div>\n        <div className=\"break-text-min\">{props.message}</div>\n        <div>\n          <button\n            className=\"minimize-break3\"\n            onClick={() => {\n              if (mounted) props.minimize(false);\n            }}\n          >\n            <img src={fullscreen} alt=\"Mountains\" width=\"70\" height=\"70\"></img>\n          </button>\n        </div>\n        <div>\n          <button\n            className=\"close-break3\"\n            onClick={() => {\n              store.dispatch(BreakActions.endBreak(store.getState().break.breakEndTime));\n            }}\n          >\n            &#10006;\n          </button>\n        </div>\n      </div>\n    );\n}\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/index.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/scheduled.break.js",["173"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/past.action.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/break.action.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/reportWebVitals.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Timer.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/CalendarScreen/index.jsx",["174"],"import React, { useState } from \"react\";\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport { Modal, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { OnboardingActions } from \"../../redux/actions\";\nimport * as dates from \"../../utils/dates\";\nimport \"./styles.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst localizer = momentLocalizer(moment);\nconst DnDCalendar = withDragAndDrop(Calendar);\n\nconst ColoredDateCellWrapper = ({ children }) =>\n  React.cloneElement(React.Children.only(children), {\n    style: {\n      backgroundColor: \"lightblue\",\n    },\n  });\n\nconst CalendarScreen = (props) => {\n  const [events, setEvents] = useState([\n    {\n      start: moment().toDate(),\n      end: moment().add(1, \"days\").toDate(),\n      title: \"Test\",\n      id: 1,\n    },\n  ]);\n  const [draggedEvent, setDraggedEvent] = useState(null);\n  const [modalVisible, setModalVisible] = useState(null);\n  const history = useHistory();\n\n  const resizeEvent = ({ event, start, end }) => {\n    console.log(\"looi\", event);\n    const nextEvents = events.map((existingEvent) => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent;\n    });\n\n    setEvents(nextEvents);\n  };\n\n  const moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\n    let allDay = event.allDay;\n\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true;\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false;\n    }\n\n    const nextEvents = events.map((existingEvent) => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end, allDay }\n        : existingEvent;\n    });\n\n    setEvents(nextEvents);\n\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const newEvent = ({ slots, start, end }) => {\n    setModalVisible(true);\n    let idList = events.map((a) => a.id);\n    let newId = Math.max(...idList) + 1;\n    let hour = {\n      id: newId,\n      title: \"New Event\",\n      allDay: slots.length === 1,\n      start: start,\n      end: end,\n    };\n\n    setEvents(events.concat([hour]));\n  };\n\n  const onDropFromOutside = ({ start, end, allDay }) => {\n    const event = {\n      id: draggedEvent.id,\n      title: draggedEvent.title,\n      start,\n      end,\n      allDay: allDay,\n    };\n\n    setDraggedEvent(null);\n    this.moveEvent({ event, start, end });\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Modal\n        visible={modalVisible}\n        onOk={() => {\n          setModalVisible(false);\n        }}\n        onCancel={() => {\n          setModalVisible(false);\n        }}\n      >\n        Hello\n      </Modal>\n      <Button\n        onClick={() => {\n          props.resetInfo();\n          history.push(\"/\")\n        }}\n      >\n        Reset\n      </Button>\n      <DnDCalendar\n        selectable\n        resizable={true}\n        events={events}\n        views={[\"day\", \"week\", \"month\"]}\n        // step={60}\n        showMultiDayTimes\n        defaultDate={new Date()}\n        onSelectSlot={newEvent}\n        components={{\n          timeSlotWrapper: ColoredDateCellWrapper,\n        }}\n        localizer={localizer}\n        max={dates.add(dates.endOf(new Date(), \"day\"), -1, \"hours\")}\n        style={{ height: props.height ? props.height : window.innerHeight }}\n        onEventResize={resizeEvent}\n        onEventDrop={moveEvent}\n        onDropFromOutside={onDropFromOutside}\n        handleDragStart={(event) => {\n          console.log(event);\n          setDraggedEvent(event);\n        }}\n        dragFromOutsideItem={draggedEvent}\n        resizableAccessor={() => false}\n        onSelectEvent={() => {\n          //add code for editing an existing event here\n          setModalVisible(true);\n        }}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ resetInfo: OnboardingActions.reset }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarScreen);\n",["175","176"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/BreakScreen/index.jsx",["177","178","179","180","181"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/FinishingUp.jsx",["182","183","184","185"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/HomeScreen/index.jsx",["186","187","188"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Button } from \"antd\";\nimport { OnboardingActions } from \"../../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./styles.css\";\n\nconst HomeScreen = (props) => {\n  const [breakArray, setBreakArray] = useState([\"https://www.youtube.com\"]);\n  const history = useHistory();\n\n  return (\n    <div className=\"step-container\">\n      <div style={{ marginTop: \"3%\", width: \"70%\", margin: \"5%\" }}>\n        <div style={{ width: \"100%\" }}>\n          <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n            Scheduled Breaks :{\" \"}\n          </p>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              width: \"50%\",\n            }}\n          >\n            <p style={{ flex: 1 }}>Day</p>\n            <p style={{ flex: 1 }}>Start Time</p>\n            <p style={{ flex: 1 }}>End Time</p>\n          </div>\n          <div>\n            {props.onboarding.scheduledBreaks.map((item, index) => {\n              return (\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    width: \"50%\",\n                    marginTop: index !== 0 ? \"1%\" : \"0%\",\n                  }}\n                >\n                  <p style={{ flex: 1 }}>{item.day}</p>\n                  <p style={{ flex: 1 }}>\n                    {new Date(item.start).getHours() +\n                      \":\" +\n                      new Date(item.start).getMinutes()}\n                  </p>\n                  <p style={{ flex: 1 }}>\n                    {new Date(item.end).getHours() +\n                      \":\" +\n                      new Date(item.end).getMinutes()}\n                  </p>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        {/* <div style={{ width: \"100%\" }}>\n          <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n            Regular Breaks :{\" \"}\n          </p>\n          <p>\n            How often you want to take regular breaks :{\" \"}\n            {props.onboarding.regularBreakInterval} minute(s)\n          </p>\n          <p>\n            How long you want these breaks to be :{\" \"}\n            {props.onboarding.regularBreakLength} minute(s)\n          </p>\n        </div> */}\n        <Button>My Settings</Button>\n        <Button\n          onClick={() => {\n            props.resetInfo();\n            history.push(\"/\");\n          }}\n        >\n          Reset\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding, break: state.break };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ resetInfo: OnboardingActions.reset }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/AdHocBreaks.jsx",["189","190","191","192","193"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Input, Menu, Dropdown, Button, Modal, message } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\n\nimport { OnboardingActions } from \"../../redux/actions\";\n\nimport \"./styles.css\";\n\nconst AdHocBreakScreen = (props) => {\n  const [siteName, setSiteName] = useState(\"\");\n  const [siteUrl, setSiteUrl] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [sites, setSites] = useState([\n    { name: \"Youtube\", url: \"https://www.youtube.com\", key: \"1\" },\n  ]);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setSiteName(\"\");\n    setSiteUrl(\"\");\n  };\n\n  const menu = (mainIndex) => (\n    <Menu\n      onClick={({ key }) => {\n        if (key === (props.onboarding.overRideSites.length + 1).toString()) {\n          setIsModalVisible(true);\n        } else {\n          let keyInt = parseInt(key);\n          let tempArray = props.onboarding.allOverRides;\n          let tempObj = tempArray[mainIndex];\n          let siteObject = props.onboarding.overRideSites[keyInt - 1];\n          tempObj.name = siteObject.name;\n          tempObj.url = siteObject.url;\n          tempArray[mainIndex] = tempObj;\n          props.setAllOverrides(tempArray);\n        }\n      }}\n    >\n      {props.onboarding.overRideSites.map((item, index) => {\n        return <Menu.Item key={item.key}>{item.name}</Menu.Item>;\n      })}\n      <Menu.Item key={(props.onboarding.overRideSites.length + 1).toString()}>\n        +ADD ANOTHER\n      </Menu.Item>\n    </Menu>\n  );\n\n  const Capitalize = (str) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <div className=\"step-container\" style={{ marginBottom: \"10px\" }}>\n      <Modal\n        title=\"\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        centered\n        footer={null}\n        width={700}\n      >\n        <div style={{ margin: \"7%\" }}>\n          <h2>Add a Site</h2>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Input\n              size=\"large\"\n              style={{\n                width: \"45%\",\n                borderRadius: 5,\n                verticalAlign: \"center\",\n                marginRight: \"2.5%\",\n              }}\n              placeholder=\"Site Name\"\n              value={siteName}\n              onChange={(e) => {\n                setSiteName(e.target.value);\n              }}\n            />\n            <Input\n              size=\"large\"\n              style={{\n                width: \"45%\",\n                borderRadius: 5,\n                verticalAlign: \"center\",\n                marginLeft: \"2.5%\",\n              }}\n              placeholder=\"Site URL\"\n              value={siteUrl}\n              onChange={(e) => {\n                setSiteUrl(e.target.value);\n              }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              marginTop: \"8%\",\n            }}\n          >\n            <Button\n              style={{ marginRight: \"2.5%\" }}\n              onClick={() => {\n                setIsModalVisible(false);\n              }}\n            >\n              CANCEL\n            </Button>\n            <Button\n              type=\"primary\"\n              style={{ marginLeft: \"2.5%\" }}\n              onClick={() => {\n                let key = (\n                  props.onboarding.overRideSites.length + 1\n                ).toString();\n                let tempArray = props.onboarding.overRideSites;\n                let finalSiteName = Capitalize(siteName);\n                tempArray.push({ url: siteUrl, name: finalSiteName, key });\n                props.setOverrideSites(tempArray);\n                setIsModalVisible(false);\n              }}\n            >\n              ADD SITE\n            </Button>\n          </div>\n        </div>\n      </Modal>\n      <h1>Break Overrides</h1>\n\n      <div style={{ marginTop: \"2%\" }}>\n        <p style={{ fontSize: \"15px\", color: \"#696969\", width: \"60%\" }}>\n          This section is to set up any specific breaks that you want to take.\n          For example you can set the app up to start some breaks every time you\n          open a specific app like Facebook.\n        </p>\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <div\n            style={{\n              marginTop: \"1%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              width: \"60%\",\n            }}\n          >\n            <p style={{ flex: 2, fontSize: \"18px\" }}>Site Name</p>\n            <p style={{ flex: 1, fontSize: \"18px\" }}>After Every</p>\n            <p style={{ flex: 1, fontSize: \"18px\" }}>take a Break For</p>\n          </div>\n          {props.onboarding.allOverRides.map((item, index) => {\n            return (\n              <div style={{ marginTop: \"1%\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    width: \"60%\",\n                  }}\n                >\n                  <div style={{ flex: 2 }}>\n                    <Dropdown overlay={menu(index)} trigger={[\"click\"]}>\n                      <Button\n                        size=\"large\"\n                        style={{\n                          borderRadius: 5,\n                          width: \"80%\",\n                        }}\n                      >\n                        {item.name.length !== 0 ? (\n                          <div\n                            style={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            {item.name}\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\n                          </div>\n                        ) : (\n                          <div\n                            style={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            Select Site\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\n                          </div>\n                        )}\n                      </Button>\n                    </Dropdown>\n                  </div>\n                  <div\n                    style={{\n                      flex: 1,\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Input\n                      size=\"large\"\n                      style={{\n                        borderRadius: 5,\n                        verticalAlign: \"center\",\n                        width: \"45%\",\n                      }}\n                      placeholder=\"First Name\"\n                      type=\"number\"\n                      value={item.interval}\n                      onChange={(e) => {\n                        if (e.target.value > 0 && e.target.value < 61) {\n                          let tempArray = props.onboarding.allOverRides;\n                          let tempObj = tempArray[index];\n                          tempObj.interval = e.target.value;\n                          tempArray[index] = tempObj;\n                          props.setAllOverrides(tempArray);\n                        }\n                      }}\n                    />\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100%\",\n                      }}\n                    >\n                      <p\n                        style={{\n                          paddingTop: \"20%\",\n                          marginLeft: \"7%\",\n                          fontSize: \"15px\",\n                          flex: 1,\n                          height: \"100%\",\n                        }}\n                      >\n                        minutes\n                      </p>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      flex: 1,\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Input\n                      size=\"large\"\n                      style={{\n                        borderRadius: 5,\n                        verticalAlign: \"center\",\n                        width: \"45%\",\n                      }}\n                      placeholder=\"First Name\"\n                      type=\"number\"\n                      value={item.breakLength}\n                      onChange={(e) => {\n                        if (e.target.value > 0) {\n                          let tempArray = props.onboarding.allOverRides;\n                          let tempObj = tempArray[index];\n                          tempObj.breakLength = e.target.value;\n                          tempArray[index] = tempObj;\n                          props.setAllOverrides(tempArray);\n                        }\n                      }}\n                    />\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100%\",\n                      }}\n                    >\n                      <p\n                        style={{\n                          paddingTop: \"20%\",\n                          marginLeft: \"7%\",\n                          fontSize: \"15px\",\n                          flex: 1,\n                          height: \"100%\",\n                        }}\n                      >\n                        minutes\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          <p\n            style={{\n              textDecorationLine: \"underline\",\n              marginTop: \"2%\",\n              fontSize: \"17px\",\n              cursor: \"pointer\",\n              width: \"15%\",\n            }}\n            onClick={() => {\n              let tempArray = props.onboarding.allOverRides;\n              tempArray.push({ name: \"\", url: \"\", interval: 60, breakLength: 1 });\n              props.setAllOverrides(tempArray);\n            }}\n          >\n            +Add Override\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setAllOverrides: OnboardingActions.setAllOverrides,\n      setOverrideSites: OnboardingActions.setOverrideSites,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdHocBreakScreen);\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/types/break.types.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/App.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/index.jsx",["194","195","196","197"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/types/onboarding.types.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/break.reducer.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/index.js",["198","199"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/stroop_test/index.jsx",["200","201","202","203","204","205","206","207","208"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/activityrule.break.js",["209","210"],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":2,"column":23,"nodeType":"217","messageId":"218","endLine":2,"endColumn":34},{"ruleId":"215","severity":1,"message":"219","line":3,"column":24,"nodeType":"217","messageId":"218","endLine":3,"endColumn":35},{"ruleId":"215","severity":1,"message":"220","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":15},{"ruleId":"211","replacedBy":"221"},{"ruleId":"213","replacedBy":"222"},{"ruleId":"211","replacedBy":"223"},{"ruleId":"213","replacedBy":"224"},{"ruleId":"215","severity":1,"message":"225","line":4,"column":17,"nodeType":"217","messageId":"218","endLine":4,"endColumn":23},{"ruleId":"215","severity":1,"message":"226","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":22},{"ruleId":"215","severity":1,"message":"227","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":19},{"ruleId":"215","severity":1,"message":"228","line":12,"column":9,"nodeType":"217","messageId":"218","endLine":12,"endColumn":14},{"ruleId":"215","severity":1,"message":"229","line":15,"column":10,"nodeType":"217","messageId":"218","endLine":15,"endColumn":17},{"ruleId":"215","severity":1,"message":"230","line":15,"column":19,"nodeType":"217","messageId":"218","endLine":15,"endColumn":29},{"ruleId":"215","severity":1,"message":"231","line":18,"column":9,"nodeType":"217","messageId":"218","endLine":18,"endColumn":18},{"ruleId":"215","severity":1,"message":"219","line":1,"column":24,"nodeType":"217","messageId":"218","endLine":1,"endColumn":35},{"ruleId":"215","severity":1,"message":"232","line":5,"column":7,"nodeType":"217","messageId":"218","endLine":5,"endColumn":12},{"ruleId":"215","severity":1,"message":"233","line":6,"column":7,"nodeType":"217","messageId":"218","endLine":6,"endColumn":11},{"ruleId":"234","severity":1,"message":"235","line":108,"column":42,"nodeType":"236","messageId":"237","endLine":108,"endColumn":43},{"ruleId":"234","severity":1,"message":"235","line":108,"column":68,"nodeType":"236","messageId":"237","endLine":108,"endColumn":69},{"ruleId":"215","severity":1,"message":"216","line":3,"column":23,"nodeType":"217","messageId":"218","endLine":3,"endColumn":34},{"ruleId":"215","severity":1,"message":"219","line":4,"column":24,"nodeType":"217","messageId":"218","endLine":4,"endColumn":35},{"ruleId":"215","severity":1,"message":"238","line":12,"column":7,"nodeType":"217","messageId":"218","endLine":12,"endColumn":14},{"ruleId":"239","severity":1,"message":"240","line":136,"column":3,"nodeType":"241","messageId":"242","endLine":147,"endColumn":4},{"ruleId":"243","severity":1,"message":"244","line":139,"column":5,"nodeType":"245","messageId":"246","endLine":140,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":141,"column":5,"nodeType":"245","messageId":"246","endLine":142,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":143,"column":5,"nodeType":"245","messageId":"246","endLine":144,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":145,"column":5,"nodeType":"245","messageId":"246","endLine":146,"endColumn":18},{"ruleId":"215","severity":1,"message":"247","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"248","line":1,"column":28,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"215","severity":1,"message":"219","line":2,"column":24,"nodeType":"217","messageId":"218","endLine":2,"endColumn":35},{"ruleId":"249","severity":1,"message":"250","line":12,"column":17,"nodeType":"251","endLine":12,"endColumn":22},{"ruleId":"252","severity":1,"message":"253","line":21,"column":15,"nodeType":"236","messageId":"254","endLine":21,"endColumn":17},{"ruleId":"215","severity":1,"message":"219","line":1,"column":24,"nodeType":"217","messageId":"218","endLine":1,"endColumn":35},{"ruleId":"215","severity":1,"message":"255","line":2,"column":37,"nodeType":"217","messageId":"218","endLine":2,"endColumn":42},{"ruleId":"211","replacedBy":"256"},{"ruleId":"213","replacedBy":"257"},{"ruleId":"215","severity":1,"message":"258","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":20},{"ruleId":"215","severity":1,"message":"259","line":7,"column":8,"nodeType":"217","messageId":"218","endLine":7,"endColumn":13},{"ruleId":"249","severity":1,"message":"250","line":33,"column":17,"nodeType":"251","endLine":33,"endColumn":22},{"ruleId":"260","severity":1,"message":"261","line":159,"column":3,"nodeType":"262","messageId":"263","endLine":159,"endColumn":15},{"ruleId":"252","severity":1,"message":"264","line":163,"column":14,"nodeType":"236","messageId":"254","endLine":163,"endColumn":16},{"ruleId":"215","severity":1,"message":"247","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"265","line":4,"column":10,"nodeType":"217","messageId":"218","endLine":4,"endColumn":15},{"ruleId":"215","severity":1,"message":"266","line":9,"column":10,"nodeType":"217","messageId":"218","endLine":9,"endColumn":20},{"ruleId":"215","severity":1,"message":"267","line":9,"column":22,"nodeType":"217","messageId":"218","endLine":9,"endColumn":35},{"ruleId":"215","severity":1,"message":"247","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"266","line":11,"column":10,"nodeType":"217","messageId":"218","endLine":11,"endColumn":20},{"ruleId":"215","severity":1,"message":"267","line":11,"column":22,"nodeType":"217","messageId":"218","endLine":11,"endColumn":35},{"ruleId":"215","severity":1,"message":"247","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"268","line":4,"column":48,"nodeType":"217","messageId":"218","endLine":4,"endColumn":55},{"ruleId":"215","severity":1,"message":"269","line":15,"column":10,"nodeType":"217","messageId":"218","endLine":15,"endColumn":15},{"ruleId":"215","severity":1,"message":"270","line":15,"column":17,"nodeType":"217","messageId":"218","endLine":15,"endColumn":25},{"ruleId":"215","severity":1,"message":"231","line":19,"column":9,"nodeType":"217","messageId":"218","endLine":19,"endColumn":18},{"ruleId":"215","severity":1,"message":"271","line":9,"column":8,"nodeType":"217","messageId":"218","endLine":9,"endColumn":26},{"ruleId":"215","severity":1,"message":"272","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":24},{"ruleId":"215","severity":1,"message":"273","line":14,"column":10,"nodeType":"217","messageId":"218","endLine":14,"endColumn":31},{"ruleId":"249","severity":1,"message":"274","line":29,"column":6,"nodeType":"275","endLine":29,"endColumn":8,"suggestions":"276"},{"ruleId":"215","severity":1,"message":"277","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":30},{"ruleId":"215","severity":1,"message":"278","line":2,"column":8,"nodeType":"217","messageId":"218","endLine":2,"endColumn":26},{"ruleId":"252","severity":1,"message":"264","line":17,"column":29,"nodeType":"236","messageId":"254","endLine":17,"endColumn":31},{"ruleId":"279","severity":1,"message":"280","line":39,"column":9,"nodeType":"217","messageId":"281","endLine":39,"endColumn":14},{"ruleId":"279","severity":1,"message":"282","line":40,"column":9,"nodeType":"217","messageId":"281","endLine":40,"endColumn":15},{"ruleId":"215","severity":1,"message":"283","line":49,"column":17,"nodeType":"217","messageId":"218","endLine":49,"endColumn":23},{"ruleId":"215","severity":1,"message":"284","line":49,"column":25,"nodeType":"217","messageId":"218","endLine":49,"endColumn":34},{"ruleId":"215","severity":1,"message":"285","line":49,"column":36,"nodeType":"217","messageId":"218","endLine":49,"endColumn":41},{"ruleId":"215","severity":1,"message":"286","line":49,"column":43,"nodeType":"217","messageId":"218","endLine":49,"endColumn":49},{"ruleId":"215","severity":1,"message":"287","line":49,"column":51,"nodeType":"217","messageId":"218","endLine":49,"endColumn":67},{"ruleId":"252","severity":1,"message":"264","line":63,"column":21,"nodeType":"236","messageId":"254","endLine":63,"endColumn":23},{"ruleId":"215","severity":1,"message":"219","line":1,"column":24,"nodeType":"217","messageId":"218","endLine":1,"endColumn":35},{"ruleId":"288","severity":1,"message":"289","line":20,"column":39,"nodeType":"290","messageId":"291","endLine":20,"endColumn":41},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'PastActions' is defined but never used.","'store' is defined but never used.",["292"],["293"],["292"],["293"],"'Button' is defined but never used.","'PlusOutlined' is defined but never used.","'ApiCalendar' is defined but never used.","'shell' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'showModal' is assigned a value but never used.","'isDev' is assigned a value but never used.","'path' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'history' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'useEffect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'mounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'Views' is defined but never used.",["292"],["293"],"'useHistory' is defined but never used.","'Timer' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","Expected '===' and instead saw '=='.","'Input' is defined but never used.","'breakArray' is assigned a value but never used.","'setBreakArray' is assigned a value but never used.","'message' is defined but never used.","'sites' is assigned a value but never used.","'setSites' is assigned a value but never used.","'RegularBreakScreen' is defined but never used.","'AdHocBreakScreen' is defined but never used.","'setOnboardingComplete' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'props.break.breakState', and 'props.onboarding.complete'. Either include them or remove the dependency array.","ArrayExpression",["294"],"'checkActivityRuleBreak' is defined but never used.","'checkIntervalBreak' is defined but never used.","no-redeclare","'words' is already defined.","redeclared","'colors' is already defined.","'errors' is assigned a value but never used.","'successes' is assigned a value but never used.","'begin' is assigned a value but never used.","'finish' is assigned a value but never used.","'timeLimitReached' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},"Update the dependencies array to be: [history, props.break.breakState, props.onboarding.complete]",{"range":"297","text":"298"},[1015,1017],"[history, props.break.breakState, props.onboarding.complete]"]