[{"C:\\code\\mit\\RL_app\\src\\index.js":"1","C:\\code\\mit\\RL_app\\src\\redux\\actions\\index.js":"2","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\index.js":"3","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\break.reducer.js":"4","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx":"5","C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja_manager.jsx":"6","C:\\code\\mit\\RL_app\\src\\screens\\CBTestScreen\\index.jsx":"7","C:\\code\\mit\\RL_app\\src\\navigation\\index.js":"8","C:\\code\\mit\\RL_app\\src\\redux\\types\\onboarding.types.js":"9","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\onboarding.reducer.js":"10","C:\\code\\mit\\RL_app\\src\\redux\\actions\\onboarding.action.js":"11","C:\\code\\mit\\RL_app\\src\\screens\\AWCheckerScreen\\index.jsx":"12","C:\\code\\mit\\RL_app\\src\\screens\\WeeklyForm\\index.jsx":"13","C:\\code\\mit\\RL_app\\src\\breakmanager\\weeklyChecker.js":"14","C:\\code\\mit\\RL_app\\src\\breakmanager\\EventHandler\\index.js":"15","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\activityrule.break.js":"16","C:\\code\\mit\\RL_app\\src\\services\\index.js":"17","C:\\code\\mit\\RL_app\\src\\components\\Toolbar.js":"18","C:\\code\\mit\\RL_app\\src\\App.js":"19","C:\\code\\mit\\RL_app\\src\\redux\\store.js":"20","C:\\code\\mit\\RL_app\\src\\screens\\EditActivityBreaksScreen\\index.jsx":"21","C:\\code\\mit\\RL_app\\src\\components\\Games\\index.jsx":"22","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\AdHocBreaks.jsx":"23","C:\\code\\mit\\RL_app\\src\\redux\\sagas\\index.js":"24","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\index.js":"25","C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test\\index.jsx":"26"},{"size":517,"mtime":1609573919413,"results":"27","hashOfConfig":"28"},{"size":217,"mtime":1610597903298,"results":"29","hashOfConfig":"28"},{"size":461,"mtime":1610597903300,"results":"30","hashOfConfig":"28"},{"size":5447,"mtime":1635324261602,"results":"31","hashOfConfig":"28"},{"size":4625,"mtime":1635535385813,"results":"32","hashOfConfig":"28"},{"size":568,"mtime":1635503148087,"results":"33","hashOfConfig":"28"},{"size":2168,"mtime":1637061328347,"results":"34","hashOfConfig":"28"},{"size":4552,"mtime":1637061346717,"results":"35","hashOfConfig":"28"},{"size":859,"mtime":1637060776177,"results":"36","hashOfConfig":"28"},{"size":4083,"mtime":1637060795648,"results":"37","hashOfConfig":"28"},{"size":1959,"mtime":1637060818995,"results":"38","hashOfConfig":"28"},{"size":5491,"mtime":1637084942129,"results":"39","hashOfConfig":"28"},{"size":6201,"mtime":1637061271096,"results":"40","hashOfConfig":"28"},{"size":565,"mtime":1637061293793,"results":"41","hashOfConfig":"28"},{"size":3053,"mtime":1635539707072,"results":"42","hashOfConfig":"28"},{"size":7557,"mtime":1636397741969,"results":"43","hashOfConfig":"28"},{"size":129,"mtime":1609674823101,"results":"44","hashOfConfig":"28"},{"size":2585,"mtime":1635255816217,"results":"45","hashOfConfig":"28"},{"size":656,"mtime":1632483733427,"results":"46","hashOfConfig":"28"},{"size":587,"mtime":1610600783281,"results":"47","hashOfConfig":"28"},{"size":15279,"mtime":1635332427615,"results":"48","hashOfConfig":"28"},{"size":7340,"mtime":1635535385811,"results":"49","hashOfConfig":"28"},{"size":13719,"mtime":1635331369988,"results":"50","hashOfConfig":"28"},{"size":226,"mtime":1609573919415,"results":"51","hashOfConfig":"28"},{"size":349,"mtime":1637146906680,"results":"52","hashOfConfig":"28"},{"size":3816,"mtime":1635504590686,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"138jipk",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\code\\mit\\RL_app\\src\\index.js",[],["110","111"],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\index.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\index.js",["112"],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\break.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx",["113","114","115"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja_manager.jsx",["116"],"C:\\code\\mit\\RL_app\\src\\screens\\CBTestScreen\\index.jsx",["117","118","119","120"],"C:\\code\\mit\\RL_app\\src\\navigation\\index.js",["121","122","123","124"],"C:\\code\\mit\\RL_app\\src\\redux\\types\\onboarding.types.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\onboarding.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\onboarding.action.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\AWCheckerScreen\\index.jsx",["125","126","127","128"],"C:\\code\\mit\\RL_app\\src\\screens\\WeeklyForm\\index.jsx",["129","130","131","132","133"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\weeklyChecker.js",["134","135"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\EventHandler\\index.js",["136","137"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\activityrule.break.js",["138"],"import { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { store } from \"../../redux\";\r\nimport { AWClientService } from \"../../services\";\r\nimport psl from \"psl\";\r\nlet client = new AWClientService();\r\n\r\n//TO DO: CONNECT WITH ACTUAL USER SETTINGS. Currently hardcoded for Facebook continuous usage above 20 seconds\r\n//TO DO: SIMILAR CHECK FOR CUMULATIVE USAGE\r\n\r\n//checks whether activity rule break is to be triggered\r\nexport default function checkActivityRuleBreak() {\r\n  client\r\n    .getAppTotals()\r\n    .then((allValues) => {\r\n      let onboardingProps = store.getState().onboarding;\r\n      const activityBreaks = onboardingProps.allOverRides;\r\n      const websiteTotals = allValues.websiteTotals;\r\n      const websiteTotalsUnmerged = allValues.websiteTotalsUnmerged;\r\n      for (let indBreak of activityBreaks) {\r\n        if (indBreak.url.length > 0) {\r\n          let totalUsage = 0;\r\n          let tempUrl = indBreak.url.replace(/^\\/\\/|^.*?:(\\/\\/)?/, \"\");\r\n          tempUrl = tempUrl.replace(/\\/+$/, \"\");\r\n          let parsed = psl.parse(tempUrl);\r\n          let siteName = parsed.sld;\r\n          if (siteName === \"google\" && parsed.subdomain !== \"www\") {\r\n            siteName = parsed.subdomain;\r\n          }\r\n          let preGame = Math.ceil(totalUsage / (60 * indBreak.interval));\r\n          let initScheduled = store.getState().past.initScheduled;\r\n          let today = store.getState().past.initScheduled;\r\n          if (today.length === 0) {\r\n            today = new Date();\r\n            store.dispatch(PastActions.setToday(today.toISOString()));\r\n          } else {\r\n            today = new Date(today);\r\n          }\r\n          if (\r\n            today.getDate() !== new Date().getDate() ||\r\n            today.getMonth() !== new Date().getMonth()\r\n          ) {\r\n            today = new Date();\r\n            store.dispatch(PastActions.setToday(today.toISOString()));\r\n          } else {\r\n            initScheduled[indBreak.url] = preGame;\r\n          }\r\n          if (initScheduled[indBreak.url]) {\r\n            preGame = initScheduled[indBreak.url];\r\n          }\r\n\r\n          initScheduled[indBreak.url] = preGame;\r\n          store.dispatch(PastActions.saveInitBreakData(initScheduled));\r\n          if (indBreak.cumulative) {\r\n            websiteTotals.map((ob, index) => {\r\n              if (\r\n                siteName.length > 0 &&\r\n                ob.data.url.includes(siteName) &&\r\n                !(store.getState().break.breakState === \"break\") &&\r\n                !(store.getState().break.breakState === \"break-feedback\") &&\r\n                !(store.getState().break.breakState === \"break-popup\") &&\r\n                !(store.getState().break.breakState === \"break-stroop\") &&\r\n                !(store.getState().break.breakState === \"break-fruit\") &&\r\n                !(store.getState().break.breakState === \"cancel-break\") &&\r\n                !(store.getState().break.breakState === \"pre-break-feedback\")\r\n              ) {\r\n                totalUsage = totalUsage + ob.duration;\r\n              }\r\n            });\r\n\r\n            if (preGame === 0) {\r\n              if (totalUsage / 60 > indBreak.interval && totalUsage > 0) {\r\n                initScheduled[indBreak.url] += 1;\r\n\r\n                store.dispatch(PastActions.saveInitBreakData(initScheduled));\r\n                let timeNow = new Date().toISOString();\r\n\r\n                let breakData = {\r\n                  breakType: \"activity-rule (continuous)\",\r\n                  breakDescription: indBreak.name,\r\n                  breakDuration: indBreak.breakLength * 60,\r\n                  breakStartTime: timeNow,\r\n                };\r\n                store.dispatch(BreakActions.startPopup(timeNow, breakData));\r\n                setTimeout(() => {\r\n                  if (\r\n                    store.getState().break.breakState === \"break-popup\" &&\r\n                    store.getState().break.popupStartTime === timeNow\r\n                  ) {\r\n                    store.dispatch(BreakActions.startPrebreakfeedback());\r\n                  }\r\n                }, 10000);\r\n              }\r\n            } else {\r\n              if (\r\n                totalUsage / 60 > indBreak.interval * preGame &&\r\n                totalUsage > 0\r\n              ) {\r\n                initScheduled[indBreak.url] += 1;\r\n\r\n                store.dispatch(PastActions.saveInitBreakData(initScheduled));\r\n                let timeNow = new Date().toISOString();\r\n\r\n                let breakData = {\r\n                  breakType: \"activity-rule (cumulative)\",\r\n                  breakDescription: indBreak.name,\r\n                  breakDuration: indBreak.breakLength * 60,\r\n                  breakStartTime: timeNow,\r\n                };\r\n                store.dispatch(BreakActions.startPopup(timeNow, breakData));\r\n                setTimeout(() => {\r\n                  if (\r\n                    store.getState().break.breakState === \"break-popup\" &&\r\n                    store.getState().break.popupStartTime === timeNow\r\n                  ) {\r\n                    store.dispatch(BreakActions.startPrebreakfeedback());\r\n                  }\r\n                }, 10000);\r\n              }\r\n            }\r\n          } else {\r\n            let lastVal =\r\n              websiteTotalsUnmerged[websiteTotalsUnmerged.length - 1];\r\n            if (lastVal.data.url.includes(siteName)) {\r\n              for (let i = websiteTotalsUnmerged.length - 1; i > 0; i--) {\r\n                if (\r\n                  siteName.length > 0 &&\r\n                  websiteTotalsUnmerged[i].data.url.includes(siteName) &&\r\n                  !(store.getState().break.breakState === \"break\") &&\r\n                  !(store.getState().break.breakState === \"break-feedback\") &&\r\n                  !(store.getState().break.breakState === \"break-popup\") &&\r\n                  !(store.getState().break.breakState === \"break-stroop\") &&\r\n                  !(store.getState().break.breakState === \"break-fruit\") &&\r\n                  !(store.getState().break.breakState === \"cancel-break\") &&\r\n                  !(store.getState().break.breakState === \"pre-break-feedback\")\r\n                ) {\r\n                  totalUsage = totalUsage + websiteTotalsUnmerged[i].duration;\r\n                } else {\r\n                  break;\r\n                }\r\n              }\r\n              if (lastVal.id !== store.getState().past.takenId) {\r\n                if (totalUsage / 60 > indBreak.interval && totalUsage > 0) {\r\n                  initScheduled[indBreak.url] += 1;\r\n\r\n                  store.dispatch(PastActions.saveInitBreakData(initScheduled));\r\n                  let timeNow = new Date().toISOString();\r\n\r\n                  let breakData = {\r\n                    breakType: \"activity-rule (non-cumulative)\",\r\n                    breakDescription: indBreak.name,\r\n                    breakDuration: indBreak.breakLength * 60,\r\n                    breakStartTime: timeNow,\r\n                  };\r\n                  store.dispatch(BreakActions.startPopup(timeNow, breakData));\r\n                  store.dispatch(PastActions.setTakenId(lastVal.id));\r\n                  setTimeout(() => {\r\n                    if (\r\n                      store.getState().break.breakState === \"break-popup\" &&\r\n                      store.getState().break.popupStartTime === timeNow\r\n                    ) {\r\n                      store.dispatch(BreakActions.startPrebreakfeedback());\r\n                    }\r\n                  }, 10000);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(console.log);\r\n}\r\n",["139","140"],"C:\\code\\mit\\RL_app\\src\\services\\index.js",[],"C:\\code\\mit\\RL_app\\src\\components\\Toolbar.js",["141","142","143"],"C:\\code\\mit\\RL_app\\src\\App.js",["144","145"],"C:\\code\\mit\\RL_app\\src\\redux\\store.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\EditActivityBreaksScreen\\index.jsx",["146","147","148","149","150"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\index.jsx",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\AdHocBreaks.jsx",["171","172","173","174","175"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Input, Menu, Dropdown, Button, Modal, message, Checkbox } from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\n\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst AdHocBreakScreen = (props) => {\r\n  const [siteName, setSiteName] = useState(\"\");\r\n  const [siteUrl, setSiteUrl] = useState(\"\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [sites, setSites] = useState([\r\n    { name: \"Youtube\", url: \"https://www.youtube.com\", key: \"1\" },\r\n  ]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    setSiteName(\"\");\r\n    setSiteUrl(\"\");\r\n  };\r\n\r\n  const menu = (mainIndex) => (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        if (key === (props.onboarding.overRideSites.length + 1).toString()) {\r\n          setIsModalVisible(true);\r\n        } else {\r\n          let keyInt = parseInt(key);\r\n          let tempArray = props.onboarding.allOverRides;\r\n          let tempObj = tempArray[mainIndex];\r\n          let siteObject = props.onboarding.overRideSites[keyInt - 1];\r\n          tempObj.name = siteObject.name;\r\n          tempObj.url = siteObject.url;\r\n          tempArray[mainIndex] = tempObj;\r\n          props.setAllOverrides(tempArray);\r\n        }\r\n      }}\r\n    >\r\n      {props.onboarding.overRideSites.map((item, index) => {\r\n        return <Menu.Item key={item.key}>{item.name}</Menu.Item>;\r\n      })}\r\n      <Menu.Item key={(props.onboarding.overRideSites.length + 1).toString()}>\r\n        +ADD ANOTHER\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const Capitalize = (str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"step-container\" style={{ marginBottom: \"10px\" }}>\r\n      <Modal\r\n        title=\"\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        centered\r\n        footer={null}\r\n        width={700}\r\n      >\r\n        <div style={{ margin: \"7%\" }}>\r\n          <h2>Add a Site</h2>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Input\r\n              size=\"large\"\r\n              style={{\r\n                width: \"45%\",\r\n                borderRadius: 5,\r\n                verticalAlign: \"center\",\r\n                marginRight: \"2.5%\",\r\n              }}\r\n              placeholder=\"Site Name\"\r\n              value={siteName}\r\n              onChange={(e) => {\r\n                setSiteName(e.target.value);\r\n              }}\r\n            />\r\n            <Input\r\n              size=\"large\"\r\n              style={{\r\n                width: \"45%\",\r\n                borderRadius: 5,\r\n                verticalAlign: \"center\",\r\n                marginLeft: \"2.5%\",\r\n              }}\r\n              placeholder=\"Site URL\"\r\n              value={siteUrl}\r\n              onChange={(e) => {\r\n                setSiteUrl(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"8%\",\r\n            }}\r\n          >\r\n            <Button\r\n              style={{ marginRight: \"2.5%\" }}\r\n              onClick={() => {\r\n                setIsModalVisible(false);\r\n              }}\r\n            >\r\n              CANCEL\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginLeft: \"2.5%\" }}\r\n              onClick={() => {\r\n                let key = (\r\n                  props.onboarding.overRideSites.length + 1\r\n                ).toString();\r\n                let tempArray = props.onboarding.overRideSites;\r\n                let finalSiteName = Capitalize(siteName);\r\n                tempArray.push({ url: siteUrl, name: finalSiteName, key });\r\n                props.setOverrideSites(tempArray);\r\n                setIsModalVisible(false);\r\n              }}\r\n            >\r\n              ADD SITE\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      <h1>Activity Based Breaks</h1>\r\n\r\n      <div style={{ marginTop: \"2%\" }}>\r\n        <p style={{ fontSize: \"15px\", color: \"#696969\", width: \"80%\" }}>\r\n          This section is to set up any specific breaks that you want to take.\r\n          For example you can set the app up to start some breaks every time you\r\n          open a specific app like Facebook.\r\n        </p>\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}\r\n        >\r\n          <div\r\n            style={{\r\n              marginTop: \"1%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <p style={{ flex: 2, fontSize: \"18px\" }}>Site Name</p>\r\n            <p style={{ flex: 1, fontSize: \"18px\" }}>After Every</p>\r\n            <p style={{ flex: 1, fontSize: \"18px\" }}>take a Break For</p>\r\n            <p style={{ flex: 1, fontSize: \"18px\" }}></p>\r\n          </div>\r\n          {props.onboarding.allOverRides.map((item, index) => {\r\n            return (\r\n              <div style={{ marginTop: \"1%\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <div style={{ flex: 2 }}>\r\n                    <Dropdown overlay={menu(index)} trigger={[\"click\"]}>\r\n                      <Button\r\n                        size=\"large\"\r\n                        style={{\r\n                          borderRadius: 5,\r\n                          width: \"80%\",\r\n                        }}\r\n                      >\r\n                        {item.name.length !== 0 ? (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              justifyContent: \"space-between\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            {item.name}\r\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\r\n                          </div>\r\n                        ) : (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              justifyContent: \"space-between\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            Select Site\r\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\r\n                          </div>\r\n                        )}\r\n                      </Button>\r\n                    </Dropdown>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Input\r\n                      size=\"large\"\r\n                      style={{\r\n                        borderRadius: 5,\r\n                        verticalAlign: \"center\",\r\n                        width: \"45%\",\r\n                      }}\r\n                      placeholder=\"First Name\"\r\n                      type=\"number\"\r\n                      value={item.interval}\r\n                      onChange={(e) => {\r\n                        if (e.target.value > 0 && e.target.value < 61) {\r\n                          let tempArray = props.onboarding.allOverRides;\r\n                          let tempObj = tempArray[index];\r\n                          tempObj.interval = e.target.value;\r\n                          tempArray[index] = tempObj;\r\n                          props.setAllOverrides(tempArray);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    >\r\n                      <p\r\n                        style={{\r\n                          paddingTop: \"20%\",\r\n                          marginLeft: \"7%\",\r\n                          fontSize: \"15px\",\r\n                          flex: 1,\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        minutes\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Input\r\n                      size=\"large\"\r\n                      style={{\r\n                        borderRadius: 5,\r\n                        verticalAlign: \"center\",\r\n                        width: \"45%\",\r\n                      }}\r\n                      placeholder=\"First Name\"\r\n                      type=\"number\"\r\n                      value={item.breakLength}\r\n                      onChange={(e) => {\r\n                        if (e.target.value > 0) {\r\n                          let tempArray = props.onboarding.allOverRides;\r\n                          let tempObj = tempArray[index];\r\n                          tempObj.breakLength = e.target.value;\r\n                          tempArray[index] = tempObj;\r\n                          props.setAllOverrides(tempArray);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    >\r\n                      <p\r\n                        style={{\r\n                          paddingTop: \"20%\",\r\n                          marginLeft: \"7%\",\r\n                          fontSize: \"15px\",\r\n                          flex: 1,\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        minutes\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Checkbox\r\n                      checked={item.cumulative}\r\n                      onChange={(e) => {\r\n                        let tempArray = props.onboarding.allOverRides;\r\n                        let tempObj = tempArray[index];\r\n                        tempObj.cumulative = e.target.checked;\r\n                        tempArray[index] = tempObj;\r\n                        props.setAllOverrides(tempArray);\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    >\r\n                      <p\r\n                        style={{\r\n                          paddingTop: \"20%\",\r\n                          marginLeft: \"7%\",\r\n                          fontSize: \"15px\",\r\n                          flex: 1,\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        Cumulative\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <p\r\n            style={{\r\n              textDecorationLine: \"underline\",\r\n              marginTop: \"2%\",\r\n              fontSize: \"17px\",\r\n              cursor: \"pointer\",\r\n              width: \"15%\",\r\n            }}\r\n            onClick={() => {\r\n              let tempArray = props.onboarding.allOverRides;\r\n              tempArray.push({\r\n                name: \"\",\r\n                url: \"\",\r\n                interval: 60,\r\n                breakLength: 1,\r\n              });\r\n              props.setAllOverrides(tempArray);\r\n            }}\r\n          >\r\n            +Add Override\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setAllOverrides: OnboardingActions.setAllOverrides,\r\n      setOverrideSites: OnboardingActions.setOverrideSites,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdHocBreakScreen);\r\n","C:\\code\\mit\\RL_app\\src\\redux\\sagas\\index.js",["176"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\index.js",[],"C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test\\index.jsx",["177","178","179","180","181","182","183","184","185","186"],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":34},{"ruleId":"191","severity":1,"message":"195","line":15,"column":10,"nodeType":"193","messageId":"194","endLine":15,"endColumn":17},{"ruleId":"191","severity":1,"message":"196","line":15,"column":19,"nodeType":"193","messageId":"194","endLine":15,"endColumn":29},{"ruleId":"191","severity":1,"message":"197","line":19,"column":9,"nodeType":"193","messageId":"194","endLine":19,"endColumn":18},{"ruleId":"191","severity":1,"message":"198","line":1,"column":10,"nodeType":"193","messageId":"194","endLine":1,"endColumn":16},{"ruleId":"191","severity":1,"message":"199","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":22},{"ruleId":"191","severity":1,"message":"200","line":3,"column":25,"nodeType":"193","messageId":"194","endLine":3,"endColumn":32},{"ruleId":"191","severity":1,"message":"201","line":8,"column":9,"nodeType":"193","messageId":"194","endLine":8,"endColumn":17},{"ruleId":"202","severity":1,"message":"203","line":27,"column":7,"nodeType":"204","endLine":27,"endColumn":78},{"ruleId":"191","severity":1,"message":"205","line":7,"column":10,"nodeType":"193","messageId":"194","endLine":7,"endColumn":18},{"ruleId":"191","severity":1,"message":"206","line":8,"column":22,"nodeType":"193","messageId":"194","endLine":8,"endColumn":28},{"ruleId":"191","severity":1,"message":"207","line":10,"column":7,"nodeType":"193","messageId":"194","endLine":10,"endColumn":17},{"ruleId":"208","severity":1,"message":"209","line":68,"column":6,"nodeType":"210","endLine":68,"endColumn":8,"suggestions":"211"},{"ruleId":"208","severity":1,"message":"212","line":22,"column":6,"nodeType":"210","endLine":22,"endColumn":8,"suggestions":"213"},{"ruleId":"202","severity":1,"message":"203","line":112,"column":9,"nodeType":"204","endLine":112,"endColumn":59},{"ruleId":"202","severity":1,"message":"203","line":133,"column":9,"nodeType":"204","endLine":133,"endColumn":58},{"ruleId":"202","severity":1,"message":"203","line":145,"column":9,"nodeType":"204","endLine":145,"endColumn":60},{"ruleId":"191","severity":1,"message":"214","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"201","line":9,"column":9,"nodeType":"193","messageId":"194","endLine":9,"endColumn":17},{"ruleId":"191","severity":1,"message":"215","line":12,"column":10,"nodeType":"193","messageId":"194","endLine":12,"endColumn":18},{"ruleId":"191","severity":1,"message":"216","line":12,"column":20,"nodeType":"193","messageId":"194","endLine":12,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":143,"column":44,"nodeType":"219","messageId":"220","endLine":143,"endColumn":46},{"ruleId":"191","severity":1,"message":"199","line":1,"column":10,"nodeType":"193","messageId":"194","endLine":1,"endColumn":22},{"ruleId":"191","severity":1,"message":"221","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":13},{"ruleId":"191","severity":1,"message":"222","line":5,"column":7,"nodeType":"193","messageId":"194","endLine":5,"endColumn":12},{"ruleId":"191","severity":1,"message":"223","line":6,"column":7,"nodeType":"193","messageId":"194","endLine":6,"endColumn":11},{"ruleId":"224","severity":1,"message":"225","line":54,"column":43,"nodeType":"226","messageId":"227","endLine":54,"endColumn":45},{"ruleId":"187","replacedBy":"228"},{"ruleId":"189","replacedBy":"229"},{"ruleId":"191","severity":1,"message":"230","line":2,"column":24,"nodeType":"193","messageId":"194","endLine":2,"endColumn":35},{"ruleId":"208","severity":1,"message":"231","line":12,"column":17,"nodeType":"232","endLine":12,"endColumn":22},{"ruleId":"217","severity":1,"message":"218","line":21,"column":15,"nodeType":"219","messageId":"220","endLine":21,"endColumn":17},{"ruleId":"191","severity":1,"message":"233","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":20},{"ruleId":"191","severity":1,"message":"234","line":15,"column":7,"nodeType":"193","messageId":"194","endLine":15,"endColumn":14},{"ruleId":"191","severity":1,"message":"214","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"200","line":4,"column":48,"nodeType":"193","messageId":"194","endLine":4,"endColumn":55},{"ruleId":"191","severity":1,"message":"235","line":17,"column":10,"nodeType":"193","messageId":"194","endLine":17,"endColumn":15},{"ruleId":"191","severity":1,"message":"236","line":17,"column":17,"nodeType":"193","messageId":"194","endLine":17,"endColumn":25},{"ruleId":"191","severity":1,"message":"197","line":22,"column":9,"nodeType":"193","messageId":"194","endLine":22,"endColumn":18},{"ruleId":"191","severity":1,"message":"221","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":13},{"ruleId":"191","severity":1,"message":"237","line":12,"column":23,"nodeType":"193","messageId":"194","endLine":12,"endColumn":34},{"ruleId":"191","severity":1,"message":"238","line":14,"column":9,"nodeType":"193","messageId":"194","endLine":14,"endColumn":20},{"ruleId":"217","severity":1,"message":"239","line":36,"column":27,"nodeType":"219","messageId":"220","endLine":36,"endColumn":29},{"ruleId":"217","severity":1,"message":"239","line":37,"column":28,"nodeType":"219","messageId":"220","endLine":37,"endColumn":30},{"ruleId":"217","severity":1,"message":"239","line":38,"column":27,"nodeType":"219","messageId":"220","endLine":38,"endColumn":29},{"ruleId":"217","severity":1,"message":"239","line":45,"column":32,"nodeType":"219","messageId":"220","endLine":45,"endColumn":34},{"ruleId":"217","severity":1,"message":"239","line":45,"column":57,"nodeType":"219","messageId":"220","endLine":45,"endColumn":59},{"ruleId":"217","severity":1,"message":"239","line":74,"column":19,"nodeType":"219","messageId":"220","endLine":74,"endColumn":21},{"ruleId":"217","severity":1,"message":"239","line":170,"column":18,"nodeType":"219","messageId":"220","endLine":170,"endColumn":20},{"ruleId":"217","severity":1,"message":"239","line":170,"column":38,"nodeType":"219","messageId":"220","endLine":170,"endColumn":40},{"ruleId":"217","severity":1,"message":"239","line":171,"column":18,"nodeType":"219","messageId":"220","endLine":171,"endColumn":20},{"ruleId":"217","severity":1,"message":"239","line":171,"column":38,"nodeType":"219","messageId":"220","endLine":171,"endColumn":40},{"ruleId":"217","severity":1,"message":"239","line":176,"column":19,"nodeType":"219","messageId":"220","endLine":176,"endColumn":21},{"ruleId":"217","severity":1,"message":"239","line":177,"column":21,"nodeType":"219","messageId":"220","endLine":177,"endColumn":23},{"ruleId":"217","severity":1,"message":"239","line":208,"column":18,"nodeType":"219","messageId":"220","endLine":208,"endColumn":20},{"ruleId":"217","severity":1,"message":"239","line":208,"column":38,"nodeType":"219","messageId":"220","endLine":208,"endColumn":40},{"ruleId":"217","severity":1,"message":"239","line":209,"column":18,"nodeType":"219","messageId":"220","endLine":209,"endColumn":20},{"ruleId":"217","severity":1,"message":"239","line":209,"column":38,"nodeType":"219","messageId":"220","endLine":209,"endColumn":40},{"ruleId":"217","severity":1,"message":"239","line":213,"column":19,"nodeType":"219","messageId":"220","endLine":213,"endColumn":21},{"ruleId":"191","severity":1,"message":"214","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"200","line":4,"column":48,"nodeType":"193","messageId":"194","endLine":4,"endColumn":55},{"ruleId":"191","severity":1,"message":"235","line":15,"column":10,"nodeType":"193","messageId":"194","endLine":15,"endColumn":15},{"ruleId":"191","severity":1,"message":"236","line":15,"column":17,"nodeType":"193","messageId":"194","endLine":15,"endColumn":25},{"ruleId":"191","severity":1,"message":"197","line":19,"column":9,"nodeType":"193","messageId":"194","endLine":19,"endColumn":18},{"ruleId":"191","severity":1,"message":"240","line":1,"column":15,"nodeType":"193","messageId":"194","endLine":1,"endColumn":19},{"ruleId":"208","severity":1,"message":"241","line":30,"column":6,"nodeType":"210","endLine":30,"endColumn":8,"suggestions":"242"},{"ruleId":"217","severity":1,"message":"239","line":32,"column":27,"nodeType":"219","messageId":"220","endLine":32,"endColumn":29},{"ruleId":"243","severity":1,"message":"244","line":71,"column":7,"nodeType":"193","messageId":"245","endLine":71,"endColumn":12},{"ruleId":"243","severity":1,"message":"246","line":72,"column":7,"nodeType":"193","messageId":"245","endLine":72,"endColumn":13},{"ruleId":"191","severity":1,"message":"247","line":83,"column":13,"nodeType":"193","messageId":"194","endLine":83,"endColumn":19},{"ruleId":"191","severity":1,"message":"248","line":83,"column":21,"nodeType":"193","messageId":"194","endLine":83,"endColumn":30},{"ruleId":"191","severity":1,"message":"249","line":83,"column":32,"nodeType":"193","messageId":"194","endLine":83,"endColumn":37},{"ruleId":"191","severity":1,"message":"250","line":83,"column":39,"nodeType":"193","messageId":"194","endLine":83,"endColumn":45},{"ruleId":"191","severity":1,"message":"251","line":83,"column":47,"nodeType":"193","messageId":"194","endLine":83,"endColumn":63},{"ruleId":"217","severity":1,"message":"239","line":113,"column":19,"nodeType":"219","messageId":"220","endLine":113,"endColumn":21},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-unused-vars","'Reducer' is defined but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'showModal' is assigned a value but never used.","'Button' is defined but never used.","'BreakActions' is defined but never used.","'message' is defined but never used.","'TextArea' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Provider' is defined but never used.","'remote' is assigned a value but never used.","'HomeScreen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["254"],"React Hook useEffect has a missing dependency: 'awcheck'. Either include it or remove the dependency array.",["255"],"'useEffect' is defined but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'axios' is defined but never used.","'isDev' is assigned a value but never used.","'path' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["252"],["253"],"'PastActions' is defined but never used.","Assignments to the 'mounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'BreakManager' is defined but never used.","'history' is assigned a value but never used.","'sites' is assigned a value but never used.","'setSites' is assigned a value but never used.","'useSelector' is defined but never used.","'ipcRenderer' is assigned a value but never used.","Expected '===' and instead saw '=='.","'fork' is defined but never used.","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",["256"],"no-redeclare","'words' is already defined.","redeclared","'colors' is already defined.","'errors' is assigned a value but never used.","'successes' is assigned a value but never used.","'begin' is assigned a value but never used.","'finish' is assigned a value but never used.","'timeLimitReached' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},"Update the dependencies array to be: [dispatch, history]",{"range":"263","text":"264"},"Update the dependencies array to be: [awcheck]",{"range":"265","text":"266"},"Update the dependencies array to be: [count]",{"range":"267","text":"268"},[2998,3000],"[dispatch, history]",[796,798],"[awcheck]",[752,754],"[count]"]