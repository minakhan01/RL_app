[{"C:\\code\\mit\\RL_app\\src\\reportWebVitals.js":"1","C:\\code\\mit\\RL_app\\src\\screens\\BreakScreen\\index.jsx":"2","C:\\code\\mit\\RL_app\\src\\screens\\CalendarScreen\\index.jsx":"3","C:\\code\\mit\\RL_app\\src\\breakmanager\\DatabaseUpdater\\index.js":"4","C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test\\index.jsx":"5","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\index.jsx":"6","C:\\code\\mit\\RL_app\\src\\screens\\HomeScreen\\index.jsx":"7","C:\\code\\mit\\RL_app\\src\\screens\\NewHomeScreen\\index.jsx":"8","C:\\code\\mit\\RL_app\\src\\navigation\\index.js":"9","C:\\code\\mit\\RL_app\\src\\index.js":"10","C:\\code\\mit\\RL_app\\src\\screens\\FruitNinjaScreen\\index.jsx":"11","C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja\\index.jsx":"12","C:\\code\\mit\\RL_app\\src\\screens\\StroopScreen\\index.jsx":"13","C:\\code\\mit\\RL_app\\src\\redux\\types\\break.types.js":"14","C:\\code\\mit\\RL_app\\src\\redux\\actions\\break.action.js":"15","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\break.reducer.js":"16","C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info.jsx":"17","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\index.js":"18","C:\\code\\mit\\RL_app\\src\\breakmanager\\EventHandler\\index.js":"19","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\activityrule.break.js":"20","C:\\code\\mit\\RL_app\\src\\components\\Calendar.jsx":"21","C:\\code\\mit\\RL_app\\src\\components\\Games\\index.jsx":"22","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx":"23","C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info_end.js":"24","C:\\code\\mit\\RL_app\\src\\App.js":"25","C:\\code\\mit\\RL_app\\src\\screens\\LoginScreen\\index.jsx":"26","C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja_manager.jsx":"27","C:\\code\\mit\\RL_app\\src\\screens\\BreakFeedbackScreen\\index.jsx":"28","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\index.js":"29","C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test_manager.jsx":"30","C:\\code\\mit\\RL_app\\src\\redux\\sagas\\index.js":"31","C:\\code\\mit\\RL_app\\src\\redux\\actions\\index.js":"32","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\FinishingUp.jsx":"33","C:\\code\\mit\\RL_app\\src\\screens\\PopupScreen\\index.jsx":"34","C:\\code\\mit\\RL_app\\src\\screens\\AnalyticsScreen\\index.jsx":"35","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\interval.break.js":"36","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\scheduled.break.js":"37","C:\\code\\mit\\RL_app\\src\\services\\awclient.service.js":"38","C:\\code\\mit\\RL_app\\src\\screens\\AWCheckerScreen\\index.jsx":"39","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\past.reducer.js":"40","C:\\code\\mit\\RL_app\\src\\breakmanager\\index.js":"41","C:\\code\\mit\\RL_app\\src\\screens\\CancelScreen\\index.jsx":"42","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\onboarding.reducer.js":"43","C:\\code\\mit\\RL_app\\src\\redux\\actions\\onboarding.action.js":"44","C:\\code\\mit\\RL_app\\src\\components\\Timer.js":"45","C:\\code\\mit\\RL_app\\src\\services\\index.js":"46","C:\\code\\mit\\RL_app\\src\\redux\\types\\index.js":"47","C:\\code\\mit\\RL_app\\src\\screens\\SuddenScreen\\index.jsx":"48","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\AdHocBreaks.jsx":"49","C:\\code\\mit\\RL_app\\src\\redux\\actions\\past.action.js":"50","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\test.reducer.js":"51","C:\\code\\mit\\RL_app\\src\\components\\Toolbar.js":"52","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\RegularBreaks.jsx":"53","C:\\code\\mit\\RL_app\\src\\utils\\dates.js":"54","C:\\code\\mit\\RL_app\\src\\redux\\types\\past.types.js":"55","C:\\code\\mit\\RL_app\\src\\redux\\types\\onboarding.types.js":"56","C:\\code\\mit\\RL_app\\src\\screens\\EditScheduledBreaks\\index.jsx":"57","C:\\code\\mit\\RL_app\\src\\screens\\EditRegularBreaksScreen\\index.jsx":"58","C:\\code\\mit\\RL_app\\src\\screens\\EditActivityBreaksScreen\\index.jsx":"59","C:\\code\\mit\\RL_app\\src\\redux\\index.js":"60","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\ScheduledBreaks.jsx":"61","C:\\code\\mit\\RL_app\\src\\screens\\AWScreen\\index.jsx":"62"},{"size":375,"mtime":1609573919416,"results":"63","hashOfConfig":"64"},{"size":2726,"mtime":1633956159641,"results":"65","hashOfConfig":"64"},{"size":4290,"mtime":1632818583075,"results":"66","hashOfConfig":"64"},{"size":2051,"mtime":1633437730988,"results":"67","hashOfConfig":"64"},{"size":3483,"mtime":1633765744198,"results":"68","hashOfConfig":"64"},{"size":3792,"mtime":1633000551884,"results":"69","hashOfConfig":"64"},{"size":6144,"mtime":1634045544677,"results":"70","hashOfConfig":"64"},{"size":1437,"mtime":1634042039680,"results":"71","hashOfConfig":"64"},{"size":3620,"mtime":1634041947964,"results":"72","hashOfConfig":"64"},{"size":517,"mtime":1609573919413,"results":"73","hashOfConfig":"64"},{"size":933,"mtime":1632819052562,"results":"74","hashOfConfig":"64"},{"size":2394,"mtime":1632818570694,"results":"75","hashOfConfig":"64"},{"size":927,"mtime":1632819062790,"results":"76","hashOfConfig":"64"},{"size":685,"mtime":1634044108609,"results":"77","hashOfConfig":"64"},{"size":1651,"mtime":1634044134427,"results":"78","hashOfConfig":"64"},{"size":4493,"mtime":1634044156467,"results":"79","hashOfConfig":"64"},{"size":1063,"mtime":1633947380081,"results":"80","hashOfConfig":"64"},{"size":349,"mtime":1632817649632,"results":"81","hashOfConfig":"64"},{"size":2523,"mtime":1634045733288,"results":"82","hashOfConfig":"64"},{"size":4646,"mtime":1633437723089,"results":"83","hashOfConfig":"64"},{"size":7245,"mtime":1632998706582,"results":"84","hashOfConfig":"64"},{"size":5470,"mtime":1634044088476,"results":"85","hashOfConfig":"64"},{"size":3693,"mtime":1633958108082,"results":"86","hashOfConfig":"64"},{"size":1127,"mtime":1633947377214,"results":"87","hashOfConfig":"64"},{"size":656,"mtime":1632483733427,"results":"88","hashOfConfig":"64"},{"size":2913,"mtime":1633959420323,"results":"89","hashOfConfig":"64"},{"size":1579,"mtime":1626085976390,"results":"90","hashOfConfig":"64"},{"size":8841,"mtime":1634043303512,"results":"91","hashOfConfig":"64"},{"size":461,"mtime":1610597903300,"results":"92","hashOfConfig":"64"},{"size":1398,"mtime":1626085976392,"results":"93","hashOfConfig":"64"},{"size":226,"mtime":1609573919415,"results":"94","hashOfConfig":"64"},{"size":217,"mtime":1610597903298,"results":"95","hashOfConfig":"64"},{"size":4885,"mtime":1634045609127,"results":"96","hashOfConfig":"64"},{"size":2183,"mtime":1632921680702,"results":"97","hashOfConfig":"64"},{"size":6729,"mtime":1634045044269,"results":"98","hashOfConfig":"64"},{"size":1470,"mtime":1632914979560,"results":"99","hashOfConfig":"64"},{"size":2348,"mtime":1632915171406,"results":"100","hashOfConfig":"64"},{"size":9013,"mtime":1633003493112,"results":"101","hashOfConfig":"64"},{"size":5073,"mtime":1633956660822,"results":"102","hashOfConfig":"64"},{"size":3439,"mtime":1633005865129,"results":"103","hashOfConfig":"64"},{"size":447,"mtime":1633439271874,"results":"104","hashOfConfig":"64"},{"size":2642,"mtime":1632920627918,"results":"105","hashOfConfig":"64"},{"size":3557,"mtime":1633946838272,"results":"106","hashOfConfig":"64"},{"size":1860,"mtime":1633002513521,"results":"107","hashOfConfig":"64"},{"size":1081,"mtime":1610597903297,"results":"108","hashOfConfig":"64"},{"size":129,"mtime":1609674823101,"results":"109","hashOfConfig":"64"},{"size":144,"mtime":1610597903301,"results":"110","hashOfConfig":"64"},{"size":2107,"mtime":1632921891710,"results":"111","hashOfConfig":"64"},{"size":12169,"mtime":1633947051142,"results":"112","hashOfConfig":"64"},{"size":757,"mtime":1633005849926,"results":"113","hashOfConfig":"64"},{"size":306,"mtime":1609847029298,"results":"114","hashOfConfig":"64"},{"size":2123,"mtime":1633956136977,"results":"115","hashOfConfig":"64"},{"size":2723,"mtime":1632575489987,"results":"116","hashOfConfig":"64"},{"size":3854,"mtime":1610597903306,"results":"117","hashOfConfig":"64"},{"size":334,"mtime":1633004346489,"results":"118","hashOfConfig":"64"},{"size":824,"mtime":1633002486221,"results":"119","hashOfConfig":"64"},{"size":5648,"mtime":1633942951914,"results":"120","hashOfConfig":"64"},{"size":4072,"mtime":1633002189368,"results":"121","hashOfConfig":"64"},{"size":13605,"mtime":1633947115687,"results":"122","hashOfConfig":"64"},{"size":669,"mtime":1631884843872,"results":"123","hashOfConfig":"64"},{"size":5092,"mtime":1633946947424,"results":"124","hashOfConfig":"64"},{"size":1057,"mtime":1634042715157,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"138jipk",{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"143"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"154"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"143"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"154"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"151"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"232"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"232"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\code\\mit\\RL_app\\src\\reportWebVitals.js",[],["282","283"],"C:\\code\\mit\\RL_app\\src\\screens\\BreakScreen\\index.jsx",["284","285","286","287","288","289","290","291"],"C:\\code\\mit\\RL_app\\src\\screens\\CalendarScreen\\index.jsx",["292"],"import React, { useState } from \"react\";\r\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport * as dates from \"../../utils/dates\";\r\nimport \"./styles.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\nconst ColoredDateCellWrapper = ({ children }) =>\r\n  React.cloneElement(React.Children.only(children), {\r\n    style: {\r\n      backgroundColor: \"lightblue\",\r\n    },\r\n  });\r\n\r\nconst CalendarScreen = (props) => {\r\n  const [events, setEvents] = useState([\r\n    {\r\n      start: moment().toDate(),\r\n      end: moment().add(1, \"days\").toDate(),\r\n      title: \"Test\",\r\n      id: 1,\r\n    },\r\n  ]);\r\n  const [draggedEvent, setDraggedEvent] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const resizeEvent = ({ event, start, end }) => {\r\n    const nextEvents = events.map((existingEvent) => {\r\n      return existingEvent.id === event.id\r\n        ? { ...existingEvent, start, end }\r\n        : existingEvent;\r\n    });\r\n\r\n    setEvents(nextEvents);\r\n  };\r\n\r\n  const moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\r\n    let allDay = event.allDay;\r\n\r\n    if (!event.allDay && droppedOnAllDaySlot) {\r\n      allDay = true;\r\n    } else if (event.allDay && !droppedOnAllDaySlot) {\r\n      allDay = false;\r\n    }\r\n\r\n    const nextEvents = events.map((existingEvent) => {\r\n      return existingEvent.id === event.id\r\n        ? { ...existingEvent, start, end, allDay }\r\n        : existingEvent;\r\n    });\r\n\r\n    setEvents(nextEvents);\r\n\r\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\r\n  };\r\n\r\n  const newEvent = ({ slots, start, end }) => {\r\n    setModalVisible(true);\r\n    let idList = events.map((a) => a.id);\r\n    let newId = Math.max(...idList) + 1;\r\n    let hour = {\r\n      id: newId,\r\n      title: \"New Event\",\r\n      allDay: slots.length === 1,\r\n      start: start,\r\n      end: end,\r\n    };\r\n\r\n    setEvents(events.concat([hour]));\r\n  };\r\n\r\n  const onDropFromOutside = ({ start, end, allDay }) => {\r\n    const event = {\r\n      id: draggedEvent.id,\r\n      title: draggedEvent.title,\r\n      start,\r\n      end,\r\n      allDay: allDay,\r\n    };\r\n\r\n    setDraggedEvent(null);\r\n    this.moveEvent({ event, start, end });\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      <Modal\r\n        visible={modalVisible}\r\n        onOk={() => {\r\n          setModalVisible(false);\r\n        }}\r\n        onCancel={() => {\r\n          setModalVisible(false);\r\n        }}\r\n      >\r\n        Hello\r\n      </Modal>\r\n      <Button\r\n        onClick={() => {\r\n          props.resetInfo();\r\n          history.push(\"/\")\r\n        }}\r\n      >\r\n        Reset\r\n      </Button>\r\n      <DnDCalendar\r\n        selectable\r\n        resizable={true}\r\n        events={events}\r\n        views={[\"day\", \"week\", \"month\"]}\r\n        // step={60}\r\n        showMultiDayTimes\r\n        defaultDate={new Date()}\r\n        onSelectSlot={newEvent}\r\n        components={{\r\n          timeSlotWrapper: ColoredDateCellWrapper,\r\n        }}\r\n        localizer={localizer}\r\n        max={dates.add(dates.endOf(new Date(), \"day\"), -1, \"hours\")}\r\n        style={{ height: props.height ? props.height : window.innerHeight }}\r\n        onEventResize={resizeEvent}\r\n        onEventDrop={moveEvent}\r\n        onDropFromOutside={onDropFromOutside}\r\n        handleDragStart={(event) => {\r\n          setDraggedEvent(event);\r\n        }}\r\n        dragFromOutsideItem={draggedEvent}\r\n        resizableAccessor={() => false}\r\n        onSelectEvent={() => {\r\n          //add code for editing an existing event here\r\n          setModalVisible(true);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ resetInfo: OnboardingActions.reset }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarScreen);\r\n",["293","294"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\DatabaseUpdater\\index.js",["295","296"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test\\index.jsx",["297","298","299","300","301","302","303","304","305","306"],"import React from \"react\";\r\nimport Stroop from \"@orcatech/react-neuropsych-stroop\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n\r\nfunction StroopTest(props) {\r\n  const [count, setCount] = useState({\r\n    total: 0,\r\n    score: 0,\r\n    lastResult: \"\",\r\n    words: [],\r\n    colors: [],\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     props.onComplete(count.score);\r\n  //     return <>Test completed. The score is {count.score}</>;\r\n  //   }, 10000);\r\n  // }, []);\r\n\r\n  if (count.colors.length == 0) {\r\n    var words = [\r\n      \"purple\",\r\n      \"black\",\r\n      \"green\",\r\n      \"red\",\r\n      \"blue\",\r\n      \"orange\",\r\n      \"pink\",\r\n      \"yellow\",\r\n    ];\r\n    var words2 = [...words];\r\n    var colors = [\r\n      \"9370D8\",\r\n      \"000000\",\r\n      \"009900\",\r\n      \"ff0000\",\r\n      \"000099\",\r\n      \"EE7600\",\r\n      \"FF69B4\",\r\n      \"FFFF00\",\r\n    ];\r\n    var colors2 = [...colors];\r\n\r\n    words2 = words.slice(0, props.len || 4);\r\n    colors2 = colors.slice(0, props.len || 4);\r\n\r\n    words = [...words2];\r\n    colors = [...colors];\r\n\r\n    shuffleArray(words2);\r\n    colors2 = [];\r\n    words2.forEach((word) => {\r\n      colors2.push(colors[words.indexOf(word)]);\r\n    });\r\n\r\n    setCount({ ...count, words: words2, colors: colors2 });\r\n  }\r\n\r\n  var words = count.words;\r\n  var colors = count.colors;\r\n\r\n  const combos = [\r\n    {\r\n      word: Math.floor(Math.random() * words.length),\r\n      color: Math.floor(Math.random() * words.length),\r\n    },\r\n  ];\r\n\r\n  var onComplete = (data) => {\r\n    // handle test completion\r\n    const { errors, successes, begin, finish, timeLimitReached } = data;\r\n    //setCount({ ...count, total: count.total + 1 })\r\n  };\r\n\r\n  var onSuccess = (data) => {\r\n    setCount({\r\n      ...count,\r\n      total: count.total + 1,\r\n      score: count.score + 1,\r\n      lastResult: \"Correct!\",\r\n    });\r\n    // handle each success that occurs\r\n  };\r\n\r\n  var onError = (data) => {\r\n    setCount({ ...count, total: count.total + 1, lastResult: \"Wrong!\" });\r\n    // handle each error that occurs\r\n  };\r\n  if (count.total == 3) {\r\n      props.onComplete(count.score)\r\n      return <>Test completed. The score is {count.score}</>\r\n  }\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\r\n      key={count.total}\r\n    >\r\n      <div>Question {count.total + 1}</div>\r\n      <CountdownCircleTimer\r\n        onComplete={() => {\r\n          setCount({\r\n            ...count,\r\n            total: count.total + 1,\r\n            lastResult: \"Out of time!\",\r\n          });\r\n        }}\r\n        isPlaying\r\n        duration={10}\r\n        size={100}\r\n        colors=\"#000000\"\r\n        strokeWidth={6}\r\n      >\r\n        {({ remainingTime }) => remainingTime}\r\n      </CountdownCircleTimer>\r\n\r\n      <Stroop\r\n        buttonsPerRow={words.length / 2}\r\n        colors={colors}\r\n        combos={combos}\r\n        onComplete={onComplete}\r\n        onError={onError}\r\n        onSuccess={onSuccess}\r\n        words={words}\r\n        incorrectMessage=\"Incorrect!\"\r\n        completionMessage=\"Out of time!\"\r\n        timeLimit={30000}\r\n      />\r\n      <div>{count.lastResult}</div>\r\n      <div>{count.score}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StroopTest;\r\n","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\index.jsx",["307","308"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Steps, Button } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport PersonalInformationScreen from \"./PersonalInformation\";\r\nimport ScheduledBreakScreen from \"./ScheduledBreaks\";\r\nimport RegularBreakScreen from \"./RegularBreaks\";\r\nimport AdHocBreakScreen from \"./AdHocBreaks\";\r\nimport FinishingUpScreen from \"./FinishingUp\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport \"./styles.css\";\r\nimport { setOnboardingComplete } from \"../../redux/actions/onboarding.action\";\r\nimport BreakManager from \"../../breakmanager\";\r\n\r\nconst { Step } = Steps;\r\n\r\nconst OnboardingScreen = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const addOnbInfo = async () => {\r\n    // history.push(\"/home\");\r\n    // BreakManager(history);\r\n    let body = { ...props.onboarding };\r\n    if (props.onboarding.user && props.onboarding.user._id) {\r\n      body.user = props.onboarding.user._id;\r\n      let response = await axios.post(\r\n        \"https://thepallab.com/api/user/onb\",\r\n        body\r\n      );\r\n      if (response.data.message === \"Successful Added\") {\r\n        history.push(\"/home\");\r\n        BreakManager(history);\r\n      }\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.onboarding.complete) {\r\n      history.push(\"/home\");\r\n    } else if (\r\n      props.onboarding.user &&\r\n      Object.keys(props.onboarding.user).length === 0\r\n    ) {\r\n      history.push(\"/login\");\r\n    } else if (!props.onboarding.awChecked) {\r\n      history.push(\"/aw\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Steps current={current} labelPlacement=\"vertical\">\r\n        <Step title=\"PERSONAL INFORMATION\" />\r\n        <Step title=\"SCHEDULED BREAKS\" />\r\n        <Step title=\"INTERVAL BASED BREAKS\" />\r\n        <Step title=\"ACTIVITY BASED BREAKS\" />\r\n        <Step title=\"FINISHING UP\" />\r\n      </Steps>\r\n      <div>\r\n        {current === 0 && <PersonalInformationScreen />}\r\n        {current === 1 && <ScheduledBreakScreen />}\r\n        {current === 2 && <RegularBreakScreen />}\r\n        {current === 3 && <AdHocBreakScreen />}\r\n        {current === 4 && <FinishingUpScreen />}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {current > 0 && (\r\n          <Button\r\n            style={{ margin: \"0 8px\" }}\r\n            onClick={() => {\r\n              setCurrent(current - 1);\r\n            }}\r\n          >\r\n            Back\r\n          </Button>\r\n        )}\r\n        {current < 4 && (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setCurrent(current + 1);\r\n            }}\r\n          >\r\n            Next\r\n          </Button>\r\n        )}\r\n        {current === 4 && (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              props.setOnboardingComplete();\r\n              // curWindow.minimize();\r\n              addOnbInfo();\r\n              // history.push(\"/home\");\r\n              \r\n            }}\r\n          >\r\n            Done\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding, break: state.break };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setOnboardingComplete: OnboardingActions.setOnboardingComplete,\r\n      reset: OnboardingActions.reset,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OnboardingScreen);\r\n",["309","310"],"C:\\code\\mit\\RL_app\\src\\screens\\HomeScreen\\index.jsx",["311","312","313","314","315"],"C:\\code\\mit\\RL_app\\src\\screens\\NewHomeScreen\\index.jsx",["316","317","318","319","320"],"C:\\code\\mit\\RL_app\\src\\navigation\\index.js",["321","322","323","324"],"import React, { Suspense, lazy, useEffect } from \"react\";\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\nimport Loading from \"../components/Loading\";\r\nimport BreakManager from \"../breakmanager\";\r\nimport { store } from \"../redux\";\r\nimport { BreakActions } from \"../redux/actions\";\r\nimport { Provider, useDispatch } from \"react-redux\";\r\nconst { ipcRenderer, remote } = window.require(\"electron\");\r\nconst BreakScreen = lazy(() => import(\"../screens/BreakScreen\"));\r\nconst HomeScreen = lazy(() => import(\"../screens/HomeScreen\"));\r\nconst OnboardingScreen = lazy(() => import(\"../screens/OnboardingScreen\"));\r\nconst CalendarScreen = lazy(() => import(\"../screens/CalendarScreen\"));\r\nconst PopupScreen = lazy(() => import(\"../screens/PopupScreen\"));\r\nconst StroopScreen = lazy(() => import(\"../screens/StroopScreen\"));\r\nconst FruitNinjaScreen = lazy(() => import(\"../screens/FruitNinjaScreen\"));\r\nconst LoginScreen = lazy(() => import(\"../screens/LoginScreen\"));\r\nconst AWCheckerScreen = lazy(() => import(\"../screens/AWCheckerScreen\"));\r\nconst AnalyticsScreen = lazy(() => import(\"../screens/AnalyticsScreen\"));\r\nconst NewHomeScreen = lazy(() => import(\"../screens/NewHomeScreen\"));\r\nconst BreakFeedbackScreen = lazy(() =>\r\n  import(\"../screens/BreakFeedbackScreen\")\r\n);\r\nconst CancelScreen = lazy(() => import(\"../screens/CancelScreen\"));\r\nconst SuddenScreen = lazy(() => import(\"../screens/SuddenScreen\"));\r\nconst EditScheduledBreakScreen = lazy(() =>\r\n  import(\"../screens/EditScheduledBreaks\")\r\n);\r\nconst EditRegularBreakScreen = lazy(() =>\r\n  import(\"../screens/EditRegularBreaksScreen\")\r\n);\r\nconst EditAdHocBreakScreen = lazy(() =>\r\n  import(\"../screens/EditActivityBreaksScreen\")\r\n);\r\n\r\nconst AWScreen = lazy(() => import(\"../screens/AWScreen\"));\r\n\r\nconst Main = () => {\r\n  let history = useHistory();\r\n  //script to manage break triggers is called here\r\n  let dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (store.getState().onboarding.complete) {\r\n      BreakManager(history);\r\n      if (store.getState().break.breakState !== \"break\") {\r\n        dispatch(BreakActions.resetBreak());\r\n      }\r\n    }\r\n    if (store.getState().break.breakState === \"break-popup\") {\r\n    } else if (store.getState().break.breakState === \"break\") {\r\n      dispatch(BreakActions.startBreak());\r\n    }\r\n    ipcRenderer.on(\"asynchronous-message\", function (evt, message) {\r\n      history.push(\"/sud\");\r\n    });\r\n  }, []);\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <Switch>\r\n        <Route exact path=\"/calendar\" component={CalendarScreen} />\r\n        <Route exact path=\"/login\" component={LoginScreen} />\r\n        <Route exact path=\"/\" component={OnboardingScreen} />\r\n        <Route path=\"/break\" component={BreakScreen} />\r\n        <Route path=\"/popup\" component={PopupScreen} />\r\n        <Route path=\"/home\" component={NewHomeScreen} />\r\n        <Route path=\"/stroop\" component={StroopScreen} />\r\n        <Route path=\"/fruit\" component={FruitNinjaScreen} />\r\n        <Route path=\"/aw\" component={AWCheckerScreen} />\r\n        <Route path=\"/ana\" component={AnalyticsScreen} />\r\n        <Route path=\"/feedback\" component={BreakFeedbackScreen} />\r\n        <Route path=\"/cancel\" component={CancelScreen} />\r\n        <Route path=\"/sud\" component={SuddenScreen} />\r\n        <Route path=\"/edit-sched\" component={EditScheduledBreakScreen} />\r\n        <Route path=\"/edit-reg\" component={EditRegularBreakScreen} />\r\n        <Route path=\"/edit-act\" component={EditAdHocBreakScreen} />\r\n        <Route path=\"/awviz\" component={AWScreen} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n",["325","326"],"C:\\code\\mit\\RL_app\\src\\index.js",[],["327","328"],"C:\\code\\mit\\RL_app\\src\\screens\\FruitNinjaScreen\\index.jsx",["329","330","331","332","333","334","335","336","337","338","339","340","341","342"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport Games from \"../../components/Games\";\r\n\r\nconst { ipcRenderer, remote } = window.require(\"electron\");\r\n\r\nvar s1 = {\r\n  height: \"100vh\",\r\n  width: \"100vw\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n//TO-DO: add style\r\nconst FruitNinjaScreen = () => {\r\n  const [complte, setComplete] = useState(false);\r\n  const [scores, setScore] = useState([]);\r\n  let dispatch = useDispatch();\r\n  var order = Math.floor(Math.random() * 2);\r\n  return (\r\n    <Games\r\n      order={0}\r\n      status={\"end\"}\r\n      onComplete={() => {\r\n        //remove in mobile app\r\n        // remote.getCurrentWindow().close();\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default FruitNinjaScreen;\r\n","C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja\\index.jsx",["343","344","345","346"],"import React, { useEffect } from \"react\";\r\nimport ScriptTag from 'react-script-tag';\r\nimport InnerHTML from 'dangerously-set-html-content'\r\n\r\nfunction FruitNinja(props) {\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n\r\n        if ((props.version || 1) == 1) {\r\n            script.src = \"scripts/all3.js\";\r\n            //replace in mobile app\r\n            //script.src = \"scripts/all1.js\";\r\n        }\r\n        else {\r\n            script.src = \"scripts/all4.js\";\r\n            //replace in mobile app\r\n            //script.src = \"scripts/all2.js\";\r\n        }\r\n            \r\n\r\n        script.async = true;\r\n\r\n        document.body.appendChild(script);\r\n\r\n\r\n\r\n        const targetNode = document.getElementById('fruit_ninja_score')\r\n        const config = { attributes: true, childList: true, subtree: true };\r\n        const callback = function (mutationsList, observer) {\r\n            for (const mutation of mutationsList) {\r\n                if (mutation.type === 'childList') {\r\n                    props.onComplete(parseInt(targetNode.innerHTML))\r\n                }\r\n            }\r\n        };\r\n\r\n        const observer = new MutationObserver(callback);\r\n        observer.observe(targetNode, config);\r\n        return () => {\r\n            observer.disconnect();\r\n\r\n            document.body.removeChild(script);\r\n        }\r\n    }, []);\r\n\r\n    var r=1\r\n    //replace in mobile app\r\n    //var r = document.documentElement.clientHeight * parseFloat(document.getElementById('height_ratio').innerHTML) / 420\r\n    var w = 640 * r \r\n    var h = 420 * r\r\n    return <div id='fruit_ninja_container_container' style={{display: 'flex', justifyContent: 'center' }}>\r\n    <span id='fruit_ninja_container'>\r\n            <div id=\"fruit_ninja_extra\" width={w} height={h}></div>\r\n            <canvas id=\"fruit_ninja_view\" width={w} height={h}></canvas>\r\n        <div id=\"fruit_ninja_desc\">\r\n\t            <div id='fruit_ninja_score'></div>\r\n                <div id=\"fruit_ninja_browser\"></div>\r\n                <div id='fruit_ninja_bombprob_inverse' style={{ display: 'none' }}>{props.bpi || 8}</div>\r\n                <div id='height_ratio' style={{ display: 'none' }}>{1}</div>\r\n                <div id='fruit_ninja_time_limit' style={{ display: 'none' }}>{props.timelimit||3600}</div>\r\n\r\n           </div>\r\n        </span >\r\n        </div>\r\n\r\n}\r\n\r\nexport default FruitNinja;\r\n","C:\\code\\mit\\RL_app\\src\\screens\\StroopScreen\\index.jsx",["347","348","349","350","351","352","353","354","355","356","357","358","359","360"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport Games from \"../../components/Games\";\r\n\r\nconst { ipcRenderer, remote } = window.require(\"electron\");\r\n\r\nvar s1 = {\r\n  height: \"100vh\",\r\n  width: \"100vw\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n//TO-DO: add style\r\nconst StroopScreen = () => {\r\n  const [complte, setComplete] = useState(false);\r\n  const [scores, setScore] = useState([]);\r\n  let dispatch = useDispatch();\r\n  var order = Math.floor(Math.random() * 2);\r\n  return (\r\n    <Games\r\n      order={0}\r\n      status={\"start\"}\r\n      onComplete={() => {\r\n        //remove in mobile app\r\n        // remote.getCurrentWindow().close();\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default StroopScreen;\r\n","C:\\code\\mit\\RL_app\\src\\redux\\types\\break.types.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\break.action.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\break.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info.jsx",["361","362","363","364","365"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\index.js",[],["366","367"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\EventHandler\\index.js",["368","369","370"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\activityrule.break.js",["371"],"import { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { store } from \"../../redux\";\r\nimport { AWClientService } from \"../../services\";\r\nimport psl from \"psl\";\r\nlet client = new AWClientService();\r\n\r\n//TO DO: CONNECT WITH ACTUAL USER SETTINGS. Currently hardcoded for Facebook continuous usage above 20 seconds\r\n//TO DO: SIMILAR CHECK FOR CUMULATIVE USAGE\r\n\r\n//checks whether activity rule break is to be triggered\r\nexport default function checkActivityRuleBreak() {\r\n  client\r\n    .getAppTotals()\r\n    .then((allValues) => {\r\n      let onboardingProps = store.getState().onboarding;\r\n      const activityBreaks = onboardingProps.allOverRides;\r\n      const websiteTotals = allValues.websiteTotals;\r\n      for (let indBreak of activityBreaks) {\r\n        if (indBreak.url.length > 0) {\r\n          let totalUsage = 0;\r\n          let parsed = psl.parse(indBreak.url);\r\n          let siteName = parsed.sld;\r\n          websiteTotals.map((ob, index) => {\r\n            if (\r\n              siteName.length > 0 &&\r\n              ob.data.url.includes(siteName) &&\r\n              !(store.getState().break.breakState === \"break\") &&\r\n              !(store.getState().break.breakState === \"break-feedback\") &&\r\n              !(store.getState().break.breakState === \"break-popup\") &&\r\n              !(store.getState().break.breakState === \"break-stroop\") &&\r\n              !(store.getState().break.breakState === \"break-fruit\") &&\r\n              !(store.getState().break.breakState === \"cancel-break\")\r\n            ) {\r\n              totalUsage = totalUsage + ob.duration;\r\n            }\r\n          });\r\n          let preGame = Math.ceil(totalUsage / (60 * indBreak.interval));\r\n          let initScheduled = store.getState().past.initScheduled;\r\n          let today = store.getState().past.initScheduled;\r\n          if (today.length === 0) {\r\n            today = new Date();\r\n            store.dispatch(PastActions.setToday(today.toISOString()));\r\n          } else {\r\n            today = new Date(today);\r\n          }\r\n          if (\r\n            today.getDate() !== new Date().getDate() ||\r\n            today.getMonth() !== new Date().getMonth()\r\n          ) {\r\n            today = new Date();\r\n            store.dispatch(PastActions.setToday(today.toISOString()));\r\n          } else {\r\n            initScheduled[indBreak.url] = preGame;\r\n          }\r\n          if (initScheduled[indBreak.url]) {\r\n            preGame = initScheduled[indBreak.url];\r\n          }\r\n\r\n          initScheduled[indBreak.url] = preGame;\r\n          store.dispatch(PastActions.saveInitBreakData(initScheduled));\r\n          if (preGame === 0) {\r\n            if (totalUsage / 60 > indBreak.interval && totalUsage > 0) {\r\n              initScheduled[indBreak.url] += 1;\r\n\r\n              store.dispatch(PastActions.saveInitBreakData(initScheduled));\r\n              let timeNow = new Date().toISOString();\r\n\r\n              let breakData = {\r\n                breakType: \"activity-rule (continuous)\",\r\n                breakDescription: indBreak.name,\r\n                breakDuration: indBreak.breakLength * 60,\r\n                breakStartTime: timeNow,\r\n              };\r\n              store.dispatch(BreakActions.startPopup(timeNow, breakData));\r\n              setTimeout(() => {\r\n                if (\r\n                  store.getState().break.breakState === \"break-popup\" &&\r\n                  store.getState().break.popupStartTime === timeNow\r\n                ) {\r\n                  store.dispatch(BreakActions.startStroop());\r\n                }\r\n              }, 10000);\r\n            }\r\n          } else {\r\n            if (\r\n              totalUsage / 60 > indBreak.interval * preGame &&\r\n              totalUsage > 0\r\n            ) {\r\n              initScheduled[indBreak.url] += 1;\r\n\r\n              store.dispatch(PastActions.saveInitBreakData(initScheduled));\r\n              let timeNow = new Date().toISOString();\r\n\r\n              let breakData = {\r\n                breakType: \"activity-rule (continuous)\",\r\n                breakDescription: indBreak.name,\r\n                breakDuration: indBreak.breakLength * 60,\r\n                breakStartTime: timeNow,\r\n              };\r\n              store.dispatch(BreakActions.startPopup(timeNow, breakData));\r\n              setTimeout(() => {\r\n                if (\r\n                  store.getState().break.breakState === \"break-popup\" &&\r\n                  store.getState().break.popupStartTime === timeNow\r\n                ) {\r\n                  store.dispatch(BreakActions.startStroop());\r\n                }\r\n              }, 10000);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(console.log);\r\n}\r\n","C:\\code\\mit\\RL_app\\src\\components\\Calendar.jsx",["372","373","374","375","376","377","378"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\index.jsx",["379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx",["404","405","406","407","408","409","410"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info_end.js",["411","412","413","414","415","416"],"C:\\code\\mit\\RL_app\\src\\App.js",["417","418"],"import React, { useEffect } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter, useHistory } from \"react-router-dom\";\r\nimport BreakManager from \"./breakmanager\";\r\n\r\n\r\nimport { store } from \"./redux\";\r\nimport Main from \"./navigation\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nfunction App() {\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    \r\n  }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <Main />\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["419","420"],"C:\\code\\mit\\RL_app\\src\\screens\\LoginScreen\\index.jsx",[],"C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja_manager.jsx",["421","422","423","424","425"],"C:\\code\\mit\\RL_app\\src\\screens\\BreakFeedbackScreen\\index.jsx",["426","427","428","429","430","431","432"],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\index.js",["433"],"import { combineReducers, Reducer } from \"redux\";\r\nimport TestReducer from \"./test.reducer\";\r\nimport OnboardingReducer from \"./onboarding.reducer\";\r\nimport BreakReducer from \"./break.reducer\";\r\nimport PastReducer from \"./past.reducer\";\r\n\r\n\r\nconst allReducers = {\r\n  onboarding: OnboardingReducer,\r\n  test: TestReducer,\r\n  break: BreakReducer,\r\n  past: PastReducer,\r\n};\r\n\r\nconst rootReducer = combineReducers({ ...allReducers });\r\n\r\nexport default rootReducer;\r\n",["434","435"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test_manager.jsx",["436","437","438","439","440"],"C:\\code\\mit\\RL_app\\src\\redux\\sagas\\index.js",["441"],"import { all, fork } from \"redux-saga/effects\";\r\n\r\n// Sagas\r\n// import adminSaga from \"./admin.saga\";\r\n\r\n// Connect types to sagas\r\nexport const rootSaga = function* root() {\r\n  yield all([\r\n    // fork(adminSaga)\r\n  ]);\r\n};\r\n",["442","443"],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\index.js",[],["444","445"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\FinishingUp.jsx",["446","447","448","449","450","451"],"C:\\code\\mit\\RL_app\\src\\screens\\PopupScreen\\index.jsx",["452","453"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//TO-DO: add style\r\nconst PopupScreen = () => {\r\n  let dispatch = useDispatch();\r\n  let history = useHistory();\r\n  return (\r\n    <div style={{ backgroundColor: \"white\", padding: \"3%\" }}>\r\n      <div\r\n        style={{\r\n          color: \"#7DCAB6\",\r\n          fontSize: \"22px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        It's time to break!\r\n      </div>\r\n      <div style={{ paddingTop: \"3%\", fontSize: \"15px\" }}>\r\n        Should we get started? This break will start automatically if you ignore\r\n        this pop up\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n          marginTop: \"10%\",\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={() => {\r\n            let breakInfo = store.getState().break;\r\n            let pastInfo = store.getState().past;\r\n            let endtime = breakInfo.breakEndTime;\r\n            if (breakInfo.breakEndTime.length === 0) {\r\n              endtime = new Date().toISOString();\r\n            }\r\n            let data = {\r\n              endtime: endtime,\r\n              intervalBreakData: pastInfo.intervalBreakData,\r\n              initScheduled: pastInfo.initScheduled,\r\n              breaksTriggered: breakInfo.breaksTriggered,\r\n            };\r\n            dispatch(BreakActions.onCancelBreak(data));\r\n            history.push(\"/cancel\");\r\n          }}\r\n          style={{ color: \"#7DCAB6\", borderWidth: 0 }}\r\n        >\r\n          CANCEL\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            // dispatch(BreakActions.startBreak())\r\n            dispatch(BreakActions.startStroop());\r\n            // history.push(\"/stroop\");\r\n          }}\r\n          style={{ color: \"#7DCAB6\", borderWidth: 0 }}\r\n        >\r\n          CONTINUE\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PopupScreen;\r\n",["454","455"],"C:\\code\\mit\\RL_app\\src\\screens\\AnalyticsScreen\\index.jsx",["456","457","458"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\interval.break.js",[],["459","460"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\scheduled.break.js",["461"],"import { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { store } from \"../../redux\";\r\n\r\n//TO DO: CONNECT WITH ACTUAL USER SETTINGS. Currently not hardcoded anything\r\n\r\n//Checks whether Scheduled break is triggered\r\nexport default function checkScheduledBreak() {\r\n  //Scheduled break if condition goes here\r\n  let weekDays = [\r\n    \"sunday\",\r\n    \"monday\",\r\n    \"tuesday\",\r\n    \"wednesday\",\r\n    \"thursday\",\r\n    \"friday\",\r\n    \"saturday\",\r\n  ];\r\n  let onboardingProps = store.getState().onboarding;\r\n  for (let indBreak of onboardingProps[\"scheduledBreaks\"]) {\r\n    let timeNow = new Date();\r\n    let dayVal = weekDays[timeNow.getDay()];\r\n    if (indBreak.day === dayVal) {\r\n      let startTime = new Date(indBreak.start);\r\n      let endTime = new Date(indBreak.end);\r\n      let currentStart = new Date();\r\n      currentStart.setHours(startTime.getHours(), startTime.getMinutes(), 0, 0);\r\n      let currentEnd = new Date();\r\n      currentEnd.setHours(endTime.getHours(), endTime.getMinutes(), 0, 0);\r\n      let lastEndTime = new Date(store.getState().past.lastScheduledBreak);\r\n      if (currentStart <= timeNow && currentEnd >= timeNow) {\r\n        if (\r\n          !(store.getState().break.breakState === \"break\") &&\r\n          !(store.getState().break.breakState === \"break-feedback\") &&\r\n          !(store.getState().break.breakState === \"break-popup\") &&\r\n          !(store.getState().break.breakState === \"break-stroop\") &&\r\n          !(store.getState().break.breakState === \"break-fruit\") &&\r\n          !(store.getState().break.breakState === \"cancel-break\") &&\r\n          !(lastEndTime > currentStart)\r\n        ) {\r\n          let timeNowNew = new Date();\r\n          let breakData = {\r\n            breakType: \"scheduled\",\r\n            breakDescription: \"NA\",\r\n            breakStartTime: timeNowNew,\r\n            breakDuration: (currentEnd - timeNow) / 1000,\r\n            breakEndTime: indBreak.end,\r\n          };\r\n          store.dispatch(BreakActions.startPopup(timeNowNew, breakData));\r\n          setTimeout(() => {\r\n            if (\r\n              store.getState().break.breakState === \"break-popup\" &&\r\n              store.getState().break.popupStartTime === timeNowNew\r\n            ) {\r\n              store.dispatch(BreakActions.startStroop());\r\n            }\r\n          }, 10000);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","C:\\code\\mit\\RL_app\\src\\services\\awclient.service.js",["462","463","464","465"],"import { AWClient } from \"aw-client\";\r\n\r\nclass AWClientService {\r\n  constructor() {\r\n    this.client = new AWClient(\"test-client\");\r\n    this.todayDate = new Date();\r\n    this.tmrwDate = new Date();\r\n    this.yestDate = new Date();\r\n    this.yestDate.setDate(this.yestDate.getDate() - 1);\r\n    this.yestDate.setHours(0, 0, 0, 0);\r\n    this.todayDate.setHours(0, 0, 0, 0);\r\n    this.tmrwDate.setHours(23, 59, 59, 999);\r\n    this.todayDate = this.todayDate.toISOString();\r\n    this.tmrwDate = this.tmrwDate.toISOString();\r\n    this.client.getBuckets().then((buckets) => {\r\n      this.bucketMap = {};\r\n      for (var bucketid in buckets) {\r\n        this.bucketMap[buckets[bucketid].client] = bucketid;\r\n      }\r\n    });\r\n  }\r\n\r\n  createBucketMap() {\r\n    return this.client.getBuckets().then((buckets) => {\r\n      this.bucketMap = {};\r\n      for (var bucketid in buckets) {\r\n        this.bucketMap[buckets[bucketid].client] = bucketid;\r\n      }\r\n    });\r\n  }\r\n\r\n  updateDate() {\r\n    this.todayDate = new Date();\r\n    this.tmrwDate = new Date();\r\n    this.yestDate = new Date();\r\n    this.yestDate.setDate(this.yestDate.getDate() - 1);\r\n    this.yestDate.setHours(0, 0, 0, 0);\r\n    this.todayDate.setHours(0, 0, 0, 0);\r\n    this.tmrwDate.setHours(23, 59, 59, 999);\r\n    this.todayDate = this.todayDate.toISOString();\r\n    this.tmrwDate = this.tmrwDate.toISOString();\r\n  }\r\n\r\n  //get today's active windows in order\r\n  async getActiveWindows() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n      const query = [\r\n        \"RETURN=query_bucket('\" + this.bucketMap[\"aw-watcher-window\"] + \"')\",\r\n      ];\r\n      const activeWindows = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      return activeWindows[0];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  //get all active windows since the beginning\r\n  async getActiveWindowsSinceBeginning() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n      const query = [\r\n        \"RETURN=query_bucket('\" + this.bucketMap[\"aw-watcher-window\"] + \"')\",\r\n      ];\r\n      const activeWindows = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      return activeWindows[0];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  //get today's afk in order\r\n  async getAFK() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n\r\n      var query = [\r\n        \"bucket='\" + this.bucketMap[\"aw-watcher-afk\"] + \"';\",\r\n        \"RETURN=query_bucket(bucket);\",\r\n      ];\r\n      const afk = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      return afk[0];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getAppTotals() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n\r\n      var query = [\r\n        \"window_events = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-window\"] +\r\n          \"');\",\r\n        \"events = merge_events_by_keys(window_events, ['app','title']);\",\r\n        \"events = sort_by_duration(events);\",\r\n        \"RETURN = events;\",\r\n      ];\r\n      const queryWindows = [\r\n        \"window_events = query_bucket('\" + \"aw-watcher-web-chrome\" + \"');\",\r\n        \"window_events_active = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-window\"] +\r\n          \"');\",\r\n        \"window_events_active = merge_events_by_keys(window_events_active, ['app','title']);\",\r\n        \"window_events = filter_period_intersect(window_events, window_events_active);\",\r\n        \"events = merge_events_by_keys(window_events, ['title','url']);\",\r\n        \"events = sort_by_duration(events);\",\r\n        \"RETURN = events;\",\r\n      ];\r\n      const appTotalWithoutAudio = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      const websiteTotals = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        queryWindows\r\n      );\r\n      return {\r\n        appTotal: appTotalWithoutAudio[0],\r\n        websiteTotals: websiteTotals[0],\r\n      };\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getAppTotalsTwo() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n\r\n      var query = [\r\n        \"window_events = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-window\"] +\r\n          \"');\",\r\n        \"events = merge_events_by_keys(window_events, ['app','title']);\",\r\n        \"events = sort_by_duration(events);\",\r\n        \"RETURN = events;\",\r\n      ];\r\n      const queryWindows = [\r\n        \"window_events = query_bucket('\" + \"aw-watcher-web-chrome\" + \"');\",\r\n        \"window_events_active = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-window\"] +\r\n          \"');\",\r\n        \"window_events_active = merge_events_by_keys(window_events_active, ['app','title']);\",\r\n        \"window_events = filter_period_intersect(window_events, window_events_active);\",\r\n        \"events = merge_events_by_keys(window_events, ['title','url']);\",\r\n        \"events = sort_by_duration(events);\",\r\n        \"RETURN = events;\",\r\n      ];\r\n      const appTotalWithoutAudio = await this.client.query(\r\n        [this.yestDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      const websiteTotals = await this.client.query(\r\n        [this.yestDate + \"/\" + this.tmrwDate],\r\n        queryWindows\r\n      );\r\n      return {\r\n        appTotal: appTotalWithoutAudio[0],\r\n        websiteTotals: websiteTotals[0],\r\n      };\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  //find total time per app in the day excluding video streaming AFK\r\n  async getAppTotalsIntersectAFKWithoutAudio() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n\r\n      var query = [\r\n        \"window_events = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-window\"] +\r\n          \"');\",\r\n        \"not_afk_events = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-afk\"] +\r\n          \"');\",\r\n        \"not_afk_events = filter_keyvals(not_afk_events, 'status', ['not-afk']);\",\r\n        \"window_events = filter_period_intersect(window_events, not_afk_events);\",\r\n        \"events = merge_events_by_keys(window_events, ['app']);\",\r\n        \"events = sort_by_duration(events);\",\r\n        \"RETURN = events;\",\r\n      ];\r\n      const appTotalWithoutAudio = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      return appTotalWithoutAudio[0];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  //find total time per app in the day including video streaming AFK\r\n  async getAppTotalIntersectAFKWithAudio() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n\r\n      var query = [\r\n        \"window_events = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-window\"] +\r\n          \"');\",\r\n        \"not_afk_events = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-afk\"] +\r\n          \"');\",\r\n        \"not_afk_events = filter_keyvals(not_afk_events, 'status', ['not-afk']);\",\r\n        \"web_events = query_bucket('\" + this.bucketMap[\"aw-client-web\"] + \"');\",\r\n        \"audible_events = filter_keyvals(web_events, 'audible', [true]);\",\r\n        \"afk_events = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-afk\"] +\r\n          \"');\",\r\n        \"afk_events = filter_keyvals(afk_events, 'status', ['afk']);\",\r\n        \"audible_afk_events = filter_period_intersect(audible_events,afk_events);\",\r\n        \"not_afk_events = concat(not_afk_events, audible_afk_events);\",\r\n        \"window_events = filter_period_intersect(window_events, not_afk_events);\",\r\n        \"events = merge_events_by_keys(window_events, ['app','url']);\",\r\n        \"events = sort_by_duration(events);\",\r\n        \"RETURN = events;\",\r\n      ];\r\n\r\n      const appTotalWithAudio = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      return appTotalWithAudio[0];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  //find currently active window\r\n  async getCurrentlyActiveWindow() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n\r\n      var query = [\r\n        \"RETURN=query_bucket('\" + this.bucketMap[\"aw-watcher-window\"] + \"')\",\r\n      ];\r\n\r\n      const activeWindows = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      return activeWindows[0][0];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default AWClientService;\r\n","C:\\code\\mit\\RL_app\\src\\screens\\AWCheckerScreen\\index.jsx",["466","467","468","469"],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\past.reducer.js",[],["470","471"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\index.js",[],["472","473"],"C:\\code\\mit\\RL_app\\src\\screens\\CancelScreen\\index.jsx",[],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\onboarding.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\onboarding.action.js",[],"C:\\code\\mit\\RL_app\\src\\components\\Timer.js",[],"C:\\code\\mit\\RL_app\\src\\services\\index.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\types\\index.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\SuddenScreen\\index.jsx",["474","475","476","477","478"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\AdHocBreaks.jsx",["479","480","481","482","483"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Input, Menu, Dropdown, Button, Modal, message } from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\n\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst AdHocBreakScreen = (props) => {\r\n  const [siteName, setSiteName] = useState(\"\");\r\n  const [siteUrl, setSiteUrl] = useState(\"\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [sites, setSites] = useState([\r\n    { name: \"Youtube\", url: \"https://www.youtube.com\", key: \"1\" },\r\n  ]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    setSiteName(\"\");\r\n    setSiteUrl(\"\");\r\n  };\r\n\r\n  const menu = (mainIndex) => (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        if (key === (props.onboarding.overRideSites.length + 1).toString()) {\r\n          setIsModalVisible(true);\r\n        } else {\r\n          let keyInt = parseInt(key);\r\n          let tempArray = props.onboarding.allOverRides;\r\n          let tempObj = tempArray[mainIndex];\r\n          let siteObject = props.onboarding.overRideSites[keyInt - 1];\r\n          tempObj.name = siteObject.name;\r\n          tempObj.url = siteObject.url;\r\n          tempArray[mainIndex] = tempObj;\r\n          props.setAllOverrides(tempArray);\r\n        }\r\n      }}\r\n    >\r\n      {props.onboarding.overRideSites.map((item, index) => {\r\n        return <Menu.Item key={item.key}>{item.name}</Menu.Item>;\r\n      })}\r\n      <Menu.Item key={(props.onboarding.overRideSites.length + 1).toString()}>\r\n        +ADD ANOTHER\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const Capitalize = (str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"step-container\" style={{ marginBottom: \"10px\" }}>\r\n      <Modal\r\n        title=\"\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        centered\r\n        footer={null}\r\n        width={700}\r\n      >\r\n        <div style={{ margin: \"7%\" }}>\r\n          <h2>Add a Site</h2>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Input\r\n              size=\"large\"\r\n              style={{\r\n                width: \"45%\",\r\n                borderRadius: 5,\r\n                verticalAlign: \"center\",\r\n                marginRight: \"2.5%\",\r\n              }}\r\n              placeholder=\"Site Name\"\r\n              value={siteName}\r\n              onChange={(e) => {\r\n                setSiteName(e.target.value);\r\n              }}\r\n            />\r\n            <Input\r\n              size=\"large\"\r\n              style={{\r\n                width: \"45%\",\r\n                borderRadius: 5,\r\n                verticalAlign: \"center\",\r\n                marginLeft: \"2.5%\",\r\n              }}\r\n              placeholder=\"Site URL\"\r\n              value={siteUrl}\r\n              onChange={(e) => {\r\n                setSiteUrl(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"8%\",\r\n            }}\r\n          >\r\n            <Button\r\n              style={{ marginRight: \"2.5%\" }}\r\n              onClick={() => {\r\n                setIsModalVisible(false);\r\n              }}\r\n            >\r\n              CANCEL\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginLeft: \"2.5%\" }}\r\n              onClick={() => {\r\n                let key = (\r\n                  props.onboarding.overRideSites.length + 1\r\n                ).toString();\r\n                let tempArray = props.onboarding.overRideSites;\r\n                let finalSiteName = Capitalize(siteName);\r\n                tempArray.push({ url: siteUrl, name: finalSiteName, key });\r\n                props.setOverrideSites(tempArray);\r\n                setIsModalVisible(false);\r\n              }}\r\n            >\r\n              ADD SITE\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      <h1>Break Overrides</h1>\r\n\r\n      <div style={{ marginTop: \"2%\" }}>\r\n        <p style={{ fontSize: \"15px\", color: \"#696969\", width: \"80%\" }}>\r\n          This section is to set up any specific breaks that you want to take.\r\n          For example you can set the app up to start some breaks every time you\r\n          open a specific app like Facebook.\r\n        </p>\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}\r\n        >\r\n          <div\r\n            style={{\r\n              marginTop: \"1%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <p style={{ flex: 2, fontSize: \"18px\" }}>Site Name</p>\r\n            <p style={{ flex: 1, fontSize: \"18px\" }}>After Every</p>\r\n            <p style={{ flex: 1, fontSize: \"18px\" }}>take a Break For</p>\r\n          </div>\r\n          {props.onboarding.allOverRides.map((item, index) => {\r\n            return (\r\n              <div style={{ marginTop: \"1%\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <div style={{ flex: 2 }}>\r\n                    <Dropdown overlay={menu(index)} trigger={[\"click\"]}>\r\n                      <Button\r\n                        size=\"large\"\r\n                        style={{\r\n                          borderRadius: 5,\r\n                          width: \"80%\",\r\n                        }}\r\n                      >\r\n                        {item.name.length !== 0 ? (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              justifyContent: \"space-between\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            {item.name}\r\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\r\n                          </div>\r\n                        ) : (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              justifyContent: \"space-between\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            Select Site\r\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\r\n                          </div>\r\n                        )}\r\n                      </Button>\r\n                    </Dropdown>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Input\r\n                      size=\"large\"\r\n                      style={{\r\n                        borderRadius: 5,\r\n                        verticalAlign: \"center\",\r\n                        width: \"45%\",\r\n                      }}\r\n                      placeholder=\"First Name\"\r\n                      type=\"number\"\r\n                      value={item.interval}\r\n                      onChange={(e) => {\r\n                        if (e.target.value > 0 && e.target.value < 61) {\r\n                          let tempArray = props.onboarding.allOverRides;\r\n                          let tempObj = tempArray[index];\r\n                          tempObj.interval = e.target.value;\r\n                          tempArray[index] = tempObj;\r\n                          props.setAllOverrides(tempArray);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    >\r\n                      <p\r\n                        style={{\r\n                          paddingTop: \"20%\",\r\n                          marginLeft: \"7%\",\r\n                          fontSize: \"15px\",\r\n                          flex: 1,\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        minutes\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Input\r\n                      size=\"large\"\r\n                      style={{\r\n                        borderRadius: 5,\r\n                        verticalAlign: \"center\",\r\n                        width: \"45%\",\r\n                      }}\r\n                      placeholder=\"First Name\"\r\n                      type=\"number\"\r\n                      value={item.breakLength}\r\n                      onChange={(e) => {\r\n                        if (e.target.value > 0) {\r\n                          let tempArray = props.onboarding.allOverRides;\r\n                          let tempObj = tempArray[index];\r\n                          tempObj.breakLength = e.target.value;\r\n                          tempArray[index] = tempObj;\r\n                          props.setAllOverrides(tempArray);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    >\r\n                      <p\r\n                        style={{\r\n                          paddingTop: \"20%\",\r\n                          marginLeft: \"7%\",\r\n                          fontSize: \"15px\",\r\n                          flex: 1,\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        minutes\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <p\r\n            style={{\r\n              textDecorationLine: \"underline\",\r\n              marginTop: \"2%\",\r\n              fontSize: \"17px\",\r\n              cursor: \"pointer\",\r\n              width: \"15%\",\r\n            }}\r\n            onClick={() => {\r\n              let tempArray = props.onboarding.allOverRides;\r\n              tempArray.push({\r\n                name: \"\",\r\n                url: \"\",\r\n                interval: 60,\r\n                breakLength: 1,\r\n              });\r\n              props.setAllOverrides(tempArray);\r\n            }}\r\n          >\r\n            +Add Override\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setAllOverrides: OnboardingActions.setAllOverrides,\r\n      setOverrideSites: OnboardingActions.setOverrideSites,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdHocBreakScreen);\r\n","C:\\code\\mit\\RL_app\\src\\redux\\actions\\past.action.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\test.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\components\\Toolbar.js",["484","485","486"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\RegularBreaks.jsx",["487","488"],"C:\\code\\mit\\RL_app\\src\\utils\\dates.js",["489","490","491","492","493"],"import * as dates from 'date-arithmetic'\r\n\r\nexport {\r\n  milliseconds,\r\n  seconds,\r\n  minutes,\r\n  hours,\r\n  month,\r\n  startOf,\r\n  endOf,\r\n  add,\r\n  eq,\r\n  gte,\r\n  gt,\r\n  lte,\r\n  lt,\r\n  inRange,\r\n  min,\r\n  max,\r\n} from 'date-arithmetic'\r\n\r\nconst MILLI = {\r\n  seconds: 1000,\r\n  minutes: 1000 * 60,\r\n  hours: 1000 * 60 * 60,\r\n  day: 1000 * 60 * 60 * 24,\r\n}\r\n\r\nconst MONTHS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\r\n\r\nexport function monthsInYear(year) {\r\n  let date = new Date(year, 0, 1)\r\n\r\n  return MONTHS.map(i => dates.month(date, i))\r\n}\r\n\r\nexport function firstVisibleDay(date, localizer) {\r\n  let firstOfMonth = dates.startOf(date, 'month')\r\n\r\n  return dates.startOf(firstOfMonth, 'week', localizer.startOfWeek())\r\n}\r\n\r\nexport function lastVisibleDay(date, localizer) {\r\n  let endOfMonth = dates.endOf(date, 'month')\r\n\r\n  return dates.endOf(endOfMonth, 'week', localizer.startOfWeek())\r\n}\r\n\r\nexport function visibleDays(date, localizer) {\r\n  let current = firstVisibleDay(date, localizer),\r\n    last = lastVisibleDay(date, localizer),\r\n    days = []\r\n\r\n  while (dates.lte(current, last, 'day')) {\r\n    days.push(current)\r\n    current = dates.add(current, 1, 'day')\r\n  }\r\n\r\n  return days\r\n}\r\n\r\nexport function ceil(date, unit) {\r\n  let floor = dates.startOf(date, unit)\r\n\r\n  return dates.eq(floor, date) ? floor : dates.add(floor, 1, unit)\r\n}\r\n\r\nexport function range(start, end, unit = 'day') {\r\n  let current = start,\r\n    days = []\r\n\r\n  while (dates.lte(current, end, unit)) {\r\n    days.push(current)\r\n    current = dates.add(current, 1, unit)\r\n  }\r\n\r\n  return days\r\n}\r\n\r\nexport function merge(date, time) {\r\n  if (time == null && date == null) return null\r\n\r\n  if (time == null) time = new Date()\r\n  if (date == null) date = new Date()\r\n\r\n  date = dates.startOf(date, 'day')\r\n  date = dates.hours(date, dates.hours(time))\r\n  date = dates.minutes(date, dates.minutes(time))\r\n  date = dates.seconds(date, dates.seconds(time))\r\n  return dates.milliseconds(date, dates.milliseconds(time))\r\n}\r\n\r\nexport function eqTime(dateA, dateB) {\r\n  return (\r\n    dates.hours(dateA) === dates.hours(dateB) &&\r\n    dates.minutes(dateA) === dates.minutes(dateB) &&\r\n    dates.seconds(dateA) === dates.seconds(dateB)\r\n  )\r\n}\r\n\r\nexport function isJustDate(date) {\r\n  return (\r\n    dates.hours(date) === 0 &&\r\n    dates.minutes(date) === 0 &&\r\n    dates.seconds(date) === 0 &&\r\n    dates.milliseconds(date) === 0\r\n  )\r\n}\r\n\r\nexport function duration(start, end, unit, firstOfWeek) {\r\n  if (unit === 'day') unit = 'date'\r\n  return Math.abs(\r\n    dates[unit](start, undefined, firstOfWeek) -\r\n      dates[unit](end, undefined, firstOfWeek)\r\n  )\r\n}\r\n\r\nexport function diff(dateA, dateB, unit) {\r\n  if (!unit || unit === 'milliseconds') return Math.abs(+dateA - +dateB)\r\n\r\n  // the .round() handles an edge case\r\n  // with DST where the total won't be exact\r\n  // since one day in the range may be shorter/longer by an hour\r\n  return Math.round(\r\n    Math.abs(\r\n      +dates.startOf(dateA, unit) / MILLI[unit] -\r\n        +dates.startOf(dateB, unit) / MILLI[unit]\r\n    )\r\n  )\r\n}\r\n\r\nexport function total(date, unit) {\r\n  let ms = date.getTime(),\r\n    div = 1\r\n\r\n  switch (unit) {\r\n    case 'week':\r\n      div *= 7\r\n    case 'day':\r\n      div *= 24\r\n    case 'hours':\r\n      div *= 60\r\n    case 'minutes':\r\n      div *= 60\r\n    case 'seconds':\r\n      div *= 1000\r\n  }\r\n\r\n  return ms / div\r\n}\r\n\r\nexport function week(date) {\r\n  var d = new Date(date)\r\n  d.setHours(0, 0, 0)\r\n  d.setDate(d.getDate() + 4 - (d.getDay() || 7))\r\n  return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7)\r\n}\r\n\r\nexport function today() {\r\n  return dates.startOf(new Date(), 'day')\r\n}\r\n\r\nexport function yesterday() {\r\n  return dates.add(dates.startOf(new Date(), 'day'), -1, 'day')\r\n}\r\n\r\nexport function tomorrow() {\r\n  return dates.add(dates.startOf(new Date(), 'day'), 1, 'day')\r\n}","C:\\code\\mit\\RL_app\\src\\redux\\types\\past.types.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\types\\onboarding.types.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\EditScheduledBreaks\\index.jsx",["494","495"],"C:\\code\\mit\\RL_app\\src\\screens\\EditRegularBreaksScreen\\index.jsx",["496","497"],"C:\\code\\mit\\RL_app\\src\\screens\\EditActivityBreaksScreen\\index.jsx",["498","499","500","501","502"],"C:\\code\\mit\\RL_app\\src\\redux\\index.js",[],["503","504"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\ScheduledBreaks.jsx",["505","506"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { TimePicker, Select } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst ScheduledBreakScreen = (props) => {\r\n  return (\r\n    <div className=\"step-container\">\r\n      <h1>Scheduled Breaks</h1>\r\n\r\n      <div style={{ marginTop: \"4%\" }}>\r\n        <p style={{ fontSize: \"17px\" }}>\r\n          Are there any breaks you would like to schedule on a regular basis?\r\n        </p>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          width: \"50%\",\r\n        }}\r\n      >\r\n        <p style={{ flex: 1 }}>Day</p>\r\n        <p style={{ flex: 1 }}>Start Time</p>\r\n        <p style={{ flex: 1 }}>End Time</p>\r\n      </div>\r\n      <div>\r\n        {props.onboarding.scheduledBreaks.map((item, index) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                width: \"50%\",\r\n                marginTop: index !== 0 ? \"1%\" : \"0%\",\r\n              }}\r\n            >\r\n              <Select\r\n                style={{ flex: 1 }}\r\n                placeholder=\"Select a day\"\r\n                onChange={(value) => {\r\n                  const tempObject = item;\r\n                  tempObject.day = value;\r\n                  const tempArray = props.onboarding.scheduledBreaks;\r\n                  tempArray[index] = tempObject;\r\n                  props.setScheduledBreaks(tempArray);\r\n                }}\r\n                defaultValue={item.day.length !== 0 ? item.day : null}\r\n              >\r\n                <Option value=\"monday\">Monday</Option>\r\n                <Option value=\"tuesday\">Tuesday</Option>\r\n                <Option value=\"wednesday\">Wednesday</Option>\r\n                <Option value=\"thursday\">Thursday</Option>\r\n                <Option value=\"friday\">Friday</Option>\r\n                <Option value=\"saturday\">Saturday</Option>\r\n                <Option value=\"sunday\">Sunday</Option>\r\n              </Select>\r\n              <TimePicker\r\n                format={\"HH:mm\"}\r\n                style={{ flex: 1 }}\r\n                value={item.start.length !== 0 ? moment(item.start) : null}\r\n                onChange={(e) => {\r\n                  const time = e.toString();\r\n                  const tempObject = item;\r\n                  tempObject.start = time;\r\n                  const tempArray = props.onboarding.scheduledBreaks;\r\n                  tempArray[index] = tempObject;\r\n                  props.setScheduledBreaks(tempArray);\r\n                }}\r\n                onSelect={(e) => {\r\n                  const time = e.toString();\r\n                  const tempObject = item;\r\n                  tempObject.start = time;\r\n                  const tempArray = props.onboarding.scheduledBreaks;\r\n                  tempArray[index] = tempObject;\r\n                  props.setScheduledBreaks(tempArray);\r\n                }}\r\n              />\r\n              <TimePicker\r\n                format={\"HH:mm\"}\r\n                style={{ flex: 1 }}\r\n                value={item.end.length !== 0 ? moment(item.end) : null}\r\n                onChange={(e) => {\r\n                  const time = e.toString();\r\n                  const tempObject = item;\r\n                  tempObject.end = time;\r\n                  const tempArray = props.onboarding.scheduledBreaks;\r\n                  tempArray[index] = tempObject;\r\n                  props.setScheduledBreaks(tempArray);\r\n                }}\r\n                onSelect={(e) => {\r\n                  const time = e.toString();\r\n                  const tempObject = item;\r\n                  tempObject.end = time;\r\n                  const tempArray = props.onboarding.scheduledBreaks;\r\n                  tempArray[index] = tempObject;\r\n                  props.setScheduledBreaks(tempArray);\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <p\r\n        style={{\r\n          textDecorationLine: \"underline\",\r\n          marginTop: \"2%\",\r\n          fontSize: \"17px\",\r\n          cursor: \"pointer\",\r\n          width: \"15%\",\r\n        }}\r\n        onClick={() => {\r\n          let tempArray = props.onboarding.scheduledBreaks;\r\n          tempArray.push({ start: \"\", end: \"\", day: \"\" });\r\n          props.setScheduledBreaks(tempArray);\r\n        }}\r\n      >\r\n        +Add a Break\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setScheduledBreaks: OnboardingActions.setScheduledBreaks,\r\n      setScreenTime: OnboardingActions.setScreenTime,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ScheduledBreakScreen);\r\n","C:\\code\\mit\\RL_app\\src\\screens\\AWScreen\\index.jsx",["507","508","509","510","511","512","513","514"],{"ruleId":"515","replacedBy":"516"},{"ruleId":"517","replacedBy":"518"},{"ruleId":"519","severity":1,"message":"520","line":2,"column":10,"nodeType":"521","messageId":"522","endLine":2,"endColumn":20},{"ruleId":"519","severity":1,"message":"523","line":3,"column":8,"nodeType":"521","messageId":"522","endLine":3,"endColumn":13},{"ruleId":"519","severity":1,"message":"524","line":10,"column":8,"nodeType":"521","messageId":"522","endLine":10,"endColumn":13},{"ruleId":"519","severity":1,"message":"525","line":14,"column":10,"nodeType":"521","messageId":"522","endLine":14,"endColumn":22},{"ruleId":"519","severity":1,"message":"526","line":14,"column":24,"nodeType":"521","messageId":"522","endLine":14,"endColumn":35},{"ruleId":"519","severity":1,"message":"527","line":24,"column":7,"nodeType":"521","messageId":"522","endLine":24,"endColumn":14},{"ruleId":"528","severity":1,"message":"529","line":24,"column":17,"nodeType":"530","endLine":24,"endColumn":22},{"ruleId":"519","severity":1,"message":"531","line":29,"column":9,"nodeType":"521","messageId":"522","endLine":29,"endColumn":17},{"ruleId":"519","severity":1,"message":"532","line":2,"column":37,"nodeType":"521","messageId":"522","endLine":2,"endColumn":42},{"ruleId":"515","replacedBy":"533"},{"ruleId":"517","replacedBy":"534"},{"ruleId":"519","severity":1,"message":"525","line":1,"column":10,"nodeType":"521","messageId":"522","endLine":1,"endColumn":22},{"ruleId":"519","severity":1,"message":"535","line":52,"column":11,"nodeType":"521","messageId":"522","endLine":52,"endColumn":19},{"ruleId":"519","severity":1,"message":"536","line":3,"column":20,"nodeType":"521","messageId":"522","endLine":3,"endColumn":29},{"ruleId":"537","severity":1,"message":"538","line":29,"column":27,"nodeType":"539","messageId":"540","endLine":29,"endColumn":29},{"ruleId":"541","severity":1,"message":"542","line":68,"column":7,"nodeType":"521","messageId":"543","endLine":68,"endColumn":12},{"ruleId":"541","severity":1,"message":"544","line":69,"column":7,"nodeType":"521","messageId":"543","endLine":69,"endColumn":13},{"ruleId":"519","severity":1,"message":"545","line":80,"column":13,"nodeType":"521","messageId":"522","endLine":80,"endColumn":19},{"ruleId":"519","severity":1,"message":"546","line":80,"column":21,"nodeType":"521","messageId":"522","endLine":80,"endColumn":30},{"ruleId":"519","severity":1,"message":"547","line":80,"column":32,"nodeType":"521","messageId":"522","endLine":80,"endColumn":37},{"ruleId":"519","severity":1,"message":"548","line":80,"column":39,"nodeType":"521","messageId":"522","endLine":80,"endColumn":45},{"ruleId":"519","severity":1,"message":"549","line":80,"column":47,"nodeType":"521","messageId":"522","endLine":80,"endColumn":63},{"ruleId":"537","severity":1,"message":"538","line":98,"column":19,"nodeType":"539","messageId":"540","endLine":98,"endColumn":21},{"ruleId":"519","severity":1,"message":"550","line":15,"column":10,"nodeType":"521","messageId":"522","endLine":15,"endColumn":31},{"ruleId":"528","severity":1,"message":"551","line":54,"column":6,"nodeType":"552","endLine":54,"endColumn":8,"suggestions":"553"},{"ruleId":"515","replacedBy":"554"},{"ruleId":"517","replacedBy":"555"},{"ruleId":"519","severity":1,"message":"536","line":1,"column":17,"nodeType":"521","messageId":"522","endLine":1,"endColumn":26},{"ruleId":"519","severity":1,"message":"556","line":11,"column":10,"nodeType":"521","messageId":"522","endLine":11,"endColumn":20},{"ruleId":"519","severity":1,"message":"557","line":11,"column":22,"nodeType":"521","messageId":"522","endLine":11,"endColumn":35},{"ruleId":"558","severity":1,"message":"559","line":45,"column":65,"nodeType":"560","messageId":"561","endLine":45,"endColumn":67},{"ruleId":"558","severity":1,"message":"559","line":133,"column":62,"nodeType":"560","messageId":"561","endLine":133,"endColumn":64},{"ruleId":"519","severity":1,"message":"536","line":1,"column":17,"nodeType":"521","messageId":"522","endLine":1,"endColumn":26},{"ruleId":"519","severity":1,"message":"562","line":1,"column":28,"nodeType":"521","messageId":"522","endLine":1,"endColumn":36},{"ruleId":"519","severity":1,"message":"563","line":4,"column":10,"nodeType":"521","messageId":"522","endLine":4,"endColumn":16},{"ruleId":"519","severity":1,"message":"564","line":4,"column":24,"nodeType":"521","messageId":"522","endLine":4,"endColumn":29},{"ruleId":"519","severity":1,"message":"565","line":14,"column":9,"nodeType":"521","messageId":"522","endLine":14,"endColumn":16},{"ruleId":"519","severity":1,"message":"566","line":7,"column":10,"nodeType":"521","messageId":"522","endLine":7,"endColumn":18},{"ruleId":"519","severity":1,"message":"567","line":8,"column":22,"nodeType":"521","messageId":"522","endLine":8,"endColumn":28},{"ruleId":"519","severity":1,"message":"568","line":10,"column":7,"nodeType":"521","messageId":"522","endLine":10,"endColumn":17},{"ruleId":"528","severity":1,"message":"569","line":55,"column":6,"nodeType":"552","endLine":55,"endColumn":8,"suggestions":"570"},{"ruleId":"515","replacedBy":"571"},{"ruleId":"517","replacedBy":"572"},{"ruleId":"515","replacedBy":"573"},{"ruleId":"517","replacedBy":"574"},{"ruleId":"519","severity":1,"message":"575","line":2,"column":23,"nodeType":"521","messageId":"522","endLine":2,"endColumn":34},{"ruleId":"519","severity":1,"message":"525","line":3,"column":10,"nodeType":"521","messageId":"522","endLine":3,"endColumn":22},{"ruleId":"519","severity":1,"message":"526","line":3,"column":24,"nodeType":"521","messageId":"522","endLine":3,"endColumn":35},{"ruleId":"519","severity":1,"message":"563","line":4,"column":10,"nodeType":"521","messageId":"522","endLine":4,"endColumn":16},{"ruleId":"519","severity":1,"message":"576","line":5,"column":10,"nodeType":"521","messageId":"522","endLine":5,"endColumn":15},{"ruleId":"519","severity":1,"message":"577","line":8,"column":9,"nodeType":"521","messageId":"522","endLine":8,"endColumn":20},{"ruleId":"519","severity":1,"message":"567","line":8,"column":22,"nodeType":"521","messageId":"522","endLine":8,"endColumn":28},{"ruleId":"519","severity":1,"message":"578","line":10,"column":5,"nodeType":"521","messageId":"522","endLine":10,"endColumn":7},{"ruleId":"519","severity":1,"message":"579","line":19,"column":10,"nodeType":"521","messageId":"522","endLine":19,"endColumn":17},{"ruleId":"519","severity":1,"message":"580","line":19,"column":19,"nodeType":"521","messageId":"522","endLine":19,"endColumn":30},{"ruleId":"519","severity":1,"message":"581","line":20,"column":10,"nodeType":"521","messageId":"522","endLine":20,"endColumn":16},{"ruleId":"519","severity":1,"message":"582","line":20,"column":18,"nodeType":"521","messageId":"522","endLine":20,"endColumn":26},{"ruleId":"519","severity":1,"message":"531","line":21,"column":7,"nodeType":"521","messageId":"522","endLine":21,"endColumn":15},{"ruleId":"519","severity":1,"message":"583","line":22,"column":7,"nodeType":"521","messageId":"522","endLine":22,"endColumn":12},{"ruleId":"519","severity":1,"message":"584","line":2,"column":8,"nodeType":"521","messageId":"522","endLine":2,"endColumn":17},{"ruleId":"519","severity":1,"message":"585","line":3,"column":8,"nodeType":"521","messageId":"522","endLine":3,"endColumn":17},{"ruleId":"537","severity":1,"message":"538","line":10,"column":34,"nodeType":"539","messageId":"540","endLine":10,"endColumn":36},{"ruleId":"528","severity":1,"message":"586","line":45,"column":8,"nodeType":"552","endLine":45,"endColumn":10,"suggestions":"587"},{"ruleId":"519","severity":1,"message":"575","line":2,"column":23,"nodeType":"521","messageId":"522","endLine":2,"endColumn":34},{"ruleId":"519","severity":1,"message":"525","line":3,"column":10,"nodeType":"521","messageId":"522","endLine":3,"endColumn":22},{"ruleId":"519","severity":1,"message":"526","line":3,"column":24,"nodeType":"521","messageId":"522","endLine":3,"endColumn":35},{"ruleId":"519","severity":1,"message":"563","line":4,"column":10,"nodeType":"521","messageId":"522","endLine":4,"endColumn":16},{"ruleId":"519","severity":1,"message":"576","line":5,"column":10,"nodeType":"521","messageId":"522","endLine":5,"endColumn":15},{"ruleId":"519","severity":1,"message":"577","line":8,"column":9,"nodeType":"521","messageId":"522","endLine":8,"endColumn":20},{"ruleId":"519","severity":1,"message":"567","line":8,"column":22,"nodeType":"521","messageId":"522","endLine":8,"endColumn":28},{"ruleId":"519","severity":1,"message":"578","line":10,"column":5,"nodeType":"521","messageId":"522","endLine":10,"endColumn":7},{"ruleId":"519","severity":1,"message":"579","line":19,"column":10,"nodeType":"521","messageId":"522","endLine":19,"endColumn":17},{"ruleId":"519","severity":1,"message":"580","line":19,"column":19,"nodeType":"521","messageId":"522","endLine":19,"endColumn":30},{"ruleId":"519","severity":1,"message":"581","line":20,"column":10,"nodeType":"521","messageId":"522","endLine":20,"endColumn":16},{"ruleId":"519","severity":1,"message":"582","line":20,"column":18,"nodeType":"521","messageId":"522","endLine":20,"endColumn":26},{"ruleId":"519","severity":1,"message":"531","line":21,"column":7,"nodeType":"521","messageId":"522","endLine":21,"endColumn":15},{"ruleId":"519","severity":1,"message":"583","line":22,"column":7,"nodeType":"521","messageId":"522","endLine":22,"endColumn":12},{"ruleId":"519","severity":1,"message":"523","line":2,"column":8,"nodeType":"521","messageId":"522","endLine":2,"endColumn":13},{"ruleId":"519","severity":1,"message":"576","line":4,"column":10,"nodeType":"521","messageId":"522","endLine":4,"endColumn":15},{"ruleId":"519","severity":1,"message":"575","line":6,"column":23,"nodeType":"521","messageId":"522","endLine":6,"endColumn":34},{"ruleId":"519","severity":1,"message":"577","line":7,"column":9,"nodeType":"521","messageId":"522","endLine":7,"endColumn":20},{"ruleId":"528","severity":1,"message":"588","line":22,"column":6,"nodeType":"552","endLine":22,"endColumn":8,"suggestions":"589"},{"ruleId":"515","replacedBy":"590"},{"ruleId":"517","replacedBy":"591"},{"ruleId":"519","severity":1,"message":"526","line":1,"column":24,"nodeType":"521","messageId":"522","endLine":1,"endColumn":35},{"ruleId":"519","severity":1,"message":"592","line":5,"column":7,"nodeType":"521","messageId":"522","endLine":5,"endColumn":12},{"ruleId":"519","severity":1,"message":"593","line":6,"column":7,"nodeType":"521","messageId":"522","endLine":6,"endColumn":11},{"ruleId":"558","severity":1,"message":"594","line":23,"column":41,"nodeType":"560","messageId":"595","endLine":23,"endColumn":43},{"ruleId":"519","severity":1,"message":"532","line":2,"column":37,"nodeType":"521","messageId":"522","endLine":2,"endColumn":42},{"ruleId":"519","severity":1,"message":"596","line":8,"column":13,"nodeType":"521","messageId":"522","endLine":8,"endColumn":18},{"ruleId":"519","severity":1,"message":"597","line":24,"column":7,"nodeType":"521","messageId":"522","endLine":24,"endColumn":29},{"ruleId":"528","severity":1,"message":"598","line":56,"column":6,"nodeType":"552","endLine":56,"endColumn":8,"suggestions":"599"},{"ruleId":"519","severity":1,"message":"600","line":85,"column":9,"nodeType":"521","messageId":"522","endLine":85,"endColumn":22},{"ruleId":"519","severity":1,"message":"601","line":87,"column":9,"nodeType":"521","messageId":"522","endLine":87,"endColumn":20},{"ruleId":"537","severity":1,"message":"538","line":94,"column":16,"nodeType":"539","messageId":"540","endLine":94,"endColumn":18},{"ruleId":"519","severity":1,"message":"602","line":2,"column":8,"nodeType":"521","messageId":"522","endLine":2,"endColumn":18},{"ruleId":"519","severity":1,"message":"603","line":3,"column":8,"nodeType":"521","messageId":"522","endLine":3,"endColumn":18},{"ruleId":"519","severity":1,"message":"523","line":8,"column":8,"nodeType":"521","messageId":"522","endLine":8,"endColumn":13},{"ruleId":"519","severity":1,"message":"576","line":9,"column":10,"nodeType":"521","messageId":"522","endLine":9,"endColumn":15},{"ruleId":"519","severity":1,"message":"575","line":14,"column":23,"nodeType":"521","messageId":"522","endLine":14,"endColumn":34},{"ruleId":"519","severity":1,"message":"577","line":16,"column":9,"nodeType":"521","messageId":"522","endLine":16,"endColumn":20},{"ruleId":"537","severity":1,"message":"538","line":38,"column":27,"nodeType":"539","messageId":"540","endLine":38,"endColumn":29},{"ruleId":"537","severity":1,"message":"538","line":39,"column":28,"nodeType":"539","messageId":"540","endLine":39,"endColumn":30},{"ruleId":"537","severity":1,"message":"538","line":40,"column":27,"nodeType":"539","messageId":"540","endLine":40,"endColumn":29},{"ruleId":"537","severity":1,"message":"538","line":42,"column":31,"nodeType":"539","messageId":"540","endLine":42,"endColumn":33},{"ruleId":"537","severity":1,"message":"538","line":42,"column":55,"nodeType":"539","messageId":"540","endLine":42,"endColumn":57},{"ruleId":"537","severity":1,"message":"538","line":47,"column":32,"nodeType":"539","messageId":"540","endLine":47,"endColumn":34},{"ruleId":"537","severity":1,"message":"538","line":47,"column":57,"nodeType":"539","messageId":"540","endLine":47,"endColumn":59},{"ruleId":"537","severity":1,"message":"538","line":76,"column":19,"nodeType":"539","messageId":"540","endLine":76,"endColumn":21},{"ruleId":"537","severity":1,"message":"538","line":120,"column":18,"nodeType":"539","messageId":"540","endLine":120,"endColumn":20},{"ruleId":"537","severity":1,"message":"538","line":120,"column":38,"nodeType":"539","messageId":"540","endLine":120,"endColumn":40},{"ruleId":"537","severity":1,"message":"538","line":121,"column":18,"nodeType":"539","messageId":"540","endLine":121,"endColumn":20},{"ruleId":"537","severity":1,"message":"538","line":121,"column":38,"nodeType":"539","messageId":"540","endLine":121,"endColumn":40},{"ruleId":"537","severity":1,"message":"538","line":126,"column":19,"nodeType":"539","messageId":"540","endLine":126,"endColumn":21},{"ruleId":"537","severity":1,"message":"538","line":127,"column":21,"nodeType":"539","messageId":"540","endLine":127,"endColumn":23},{"ruleId":"537","severity":1,"message":"538","line":162,"column":18,"nodeType":"539","messageId":"540","endLine":162,"endColumn":20},{"ruleId":"537","severity":1,"message":"538","line":162,"column":38,"nodeType":"539","messageId":"540","endLine":162,"endColumn":40},{"ruleId":"537","severity":1,"message":"538","line":163,"column":18,"nodeType":"539","messageId":"540","endLine":163,"endColumn":20},{"ruleId":"537","severity":1,"message":"538","line":163,"column":38,"nodeType":"539","messageId":"540","endLine":163,"endColumn":40},{"ruleId":"537","severity":1,"message":"538","line":167,"column":19,"nodeType":"539","messageId":"540","endLine":167,"endColumn":21},{"ruleId":"519","severity":1,"message":"563","line":4,"column":17,"nodeType":"521","messageId":"522","endLine":4,"endColumn":23},{"ruleId":"519","severity":1,"message":"604","line":5,"column":10,"nodeType":"521","messageId":"522","endLine":5,"endColumn":22},{"ruleId":"519","severity":1,"message":"605","line":6,"column":8,"nodeType":"521","messageId":"522","endLine":6,"endColumn":19},{"ruleId":"519","severity":1,"message":"606","line":12,"column":9,"nodeType":"521","messageId":"522","endLine":12,"endColumn":14},{"ruleId":"519","severity":1,"message":"607","line":15,"column":10,"nodeType":"521","messageId":"522","endLine":15,"endColumn":17},{"ruleId":"519","severity":1,"message":"608","line":15,"column":19,"nodeType":"521","messageId":"522","endLine":15,"endColumn":29},{"ruleId":"519","severity":1,"message":"609","line":18,"column":9,"nodeType":"521","messageId":"522","endLine":18,"endColumn":18},{"ruleId":"519","severity":1,"message":"523","line":2,"column":8,"nodeType":"521","messageId":"522","endLine":2,"endColumn":13},{"ruleId":"519","severity":1,"message":"576","line":4,"column":10,"nodeType":"521","messageId":"522","endLine":4,"endColumn":15},{"ruleId":"519","severity":1,"message":"575","line":6,"column":23,"nodeType":"521","messageId":"522","endLine":6,"endColumn":34},{"ruleId":"519","severity":1,"message":"577","line":7,"column":9,"nodeType":"521","messageId":"522","endLine":7,"endColumn":20},{"ruleId":"519","severity":1,"message":"567","line":7,"column":22,"nodeType":"521","messageId":"522","endLine":7,"endColumn":28},{"ruleId":"528","severity":1,"message":"588","line":22,"column":6,"nodeType":"552","endLine":22,"endColumn":8,"suggestions":"610"},{"ruleId":"519","severity":1,"message":"611","line":4,"column":8,"nodeType":"521","messageId":"522","endLine":4,"endColumn":20},{"ruleId":"519","severity":1,"message":"565","line":15,"column":7,"nodeType":"521","messageId":"522","endLine":15,"endColumn":14},{"ruleId":"515","replacedBy":"612"},{"ruleId":"517","replacedBy":"613"},{"ruleId":"537","severity":1,"message":"538","line":12,"column":21,"nodeType":"539","messageId":"540","endLine":12,"endColumn":23},{"ruleId":"537","severity":1,"message":"538","line":15,"column":21,"nodeType":"539","messageId":"540","endLine":15,"endColumn":23},{"ruleId":"537","severity":1,"message":"538","line":22,"column":21,"nodeType":"539","messageId":"540","endLine":22,"endColumn":23},{"ruleId":"537","severity":1,"message":"538","line":25,"column":21,"nodeType":"539","messageId":"540","endLine":25,"endColumn":23},{"ruleId":"537","severity":1,"message":"538","line":32,"column":21,"nodeType":"539","messageId":"540","endLine":32,"endColumn":23},{"ruleId":"519","severity":1,"message":"614","line":2,"column":18,"nodeType":"521","messageId":"522","endLine":2,"endColumn":23},{"ruleId":"519","severity":1,"message":"615","line":7,"column":8,"nodeType":"521","messageId":"522","endLine":7,"endColumn":15},{"ruleId":"519","severity":1,"message":"616","line":8,"column":10,"nodeType":"521","messageId":"522","endLine":8,"endColumn":25},{"ruleId":"519","severity":1,"message":"565","line":48,"column":9,"nodeType":"521","messageId":"522","endLine":48,"endColumn":16},{"ruleId":"528","severity":1,"message":"617","line":85,"column":6,"nodeType":"552","endLine":85,"endColumn":8,"suggestions":"618"},{"ruleId":"537","severity":1,"message":"538","line":88,"column":16,"nodeType":"539","messageId":"540","endLine":88,"endColumn":18},{"ruleId":"619","severity":1,"message":"620","line":197,"column":17,"nodeType":"621","endLine":197,"endColumn":74},{"ruleId":"519","severity":1,"message":"622","line":1,"column":27,"nodeType":"521","messageId":"522","endLine":1,"endColumn":34},{"ruleId":"515","replacedBy":"623"},{"ruleId":"517","replacedBy":"624"},{"ruleId":"537","severity":1,"message":"538","line":11,"column":22,"nodeType":"539","messageId":"540","endLine":11,"endColumn":24},{"ruleId":"537","severity":1,"message":"538","line":14,"column":22,"nodeType":"539","messageId":"540","endLine":14,"endColumn":24},{"ruleId":"537","severity":1,"message":"538","line":22,"column":22,"nodeType":"539","messageId":"540","endLine":22,"endColumn":24},{"ruleId":"537","severity":1,"message":"538","line":25,"column":22,"nodeType":"539","messageId":"540","endLine":25,"endColumn":24},{"ruleId":"537","severity":1,"message":"538","line":33,"column":22,"nodeType":"539","messageId":"540","endLine":33,"endColumn":24},{"ruleId":"519","severity":1,"message":"625","line":1,"column":15,"nodeType":"521","messageId":"522","endLine":1,"endColumn":19},{"ruleId":"515","replacedBy":"626"},{"ruleId":"517","replacedBy":"627"},{"ruleId":"515","replacedBy":"628"},{"ruleId":"517","replacedBy":"629"},{"ruleId":"519","severity":1,"message":"536","line":1,"column":17,"nodeType":"521","messageId":"522","endLine":1,"endColumn":26},{"ruleId":"519","severity":1,"message":"614","line":4,"column":10,"nodeType":"521","messageId":"522","endLine":4,"endColumn":15},{"ruleId":"519","severity":1,"message":"556","line":9,"column":10,"nodeType":"521","messageId":"522","endLine":9,"endColumn":20},{"ruleId":"519","severity":1,"message":"557","line":9,"column":22,"nodeType":"521","messageId":"522","endLine":9,"endColumn":35},{"ruleId":"558","severity":1,"message":"559","line":38,"column":65,"nodeType":"560","messageId":"561","endLine":38,"endColumn":67},{"ruleId":"558","severity":1,"message":"559","line":100,"column":62,"nodeType":"560","messageId":"561","endLine":100,"endColumn":64},{"ruleId":"519","severity":1,"message":"575","line":3,"column":23,"nodeType":"521","messageId":"522","endLine":3,"endColumn":34},{"ruleId":"519","severity":1,"message":"526","line":4,"column":24,"nodeType":"521","messageId":"522","endLine":4,"endColumn":35},{"ruleId":"515","replacedBy":"630"},{"ruleId":"517","replacedBy":"631"},{"ruleId":"519","severity":1,"message":"632","line":2,"column":10,"nodeType":"521","messageId":"522","endLine":2,"endColumn":27},{"ruleId":"519","severity":1,"message":"614","line":3,"column":18,"nodeType":"521","messageId":"522","endLine":3,"endColumn":23},{"ruleId":"528","severity":1,"message":"598","line":22,"column":6,"nodeType":"552","endLine":22,"endColumn":8,"suggestions":"633"},{"ruleId":"515","replacedBy":"634"},{"ruleId":"517","replacedBy":"635"},{"ruleId":"519","severity":1,"message":"526","line":1,"column":24,"nodeType":"521","messageId":"522","endLine":1,"endColumn":35},{"ruleId":"636","severity":1,"message":"637","line":114,"column":42,"nodeType":"539","messageId":"638","endLine":114,"endColumn":43},{"ruleId":"636","severity":1,"message":"637","line":114,"column":68,"nodeType":"539","messageId":"638","endLine":114,"endColumn":69},{"ruleId":"636","severity":1,"message":"637","line":156,"column":42,"nodeType":"539","messageId":"638","endLine":156,"endColumn":43},{"ruleId":"636","severity":1,"message":"637","line":156,"column":68,"nodeType":"539","messageId":"638","endLine":156,"endColumn":69},{"ruleId":"528","severity":1,"message":"639","line":22,"column":6,"nodeType":"552","endLine":22,"endColumn":8,"suggestions":"640"},{"ruleId":"619","severity":1,"message":"620","line":97,"column":9,"nodeType":"621","endLine":97,"endColumn":59},{"ruleId":"619","severity":1,"message":"620","line":118,"column":9,"nodeType":"621","endLine":118,"endColumn":58},{"ruleId":"619","severity":1,"message":"620","line":130,"column":9,"nodeType":"621","endLine":130,"endColumn":60},{"ruleId":"515","replacedBy":"641"},{"ruleId":"517","replacedBy":"642"},{"ruleId":"515","replacedBy":"643"},{"ruleId":"517","replacedBy":"644"},{"ruleId":"519","severity":1,"message":"523","line":4,"column":8,"nodeType":"521","messageId":"522","endLine":4,"endColumn":13},{"ruleId":"519","severity":1,"message":"645","line":13,"column":10,"nodeType":"521","messageId":"522","endLine":13,"endColumn":18},{"ruleId":"519","severity":1,"message":"646","line":13,"column":20,"nodeType":"521","messageId":"522","endLine":13,"endColumn":31},{"ruleId":"519","severity":1,"message":"565","line":14,"column":9,"nodeType":"521","messageId":"522","endLine":14,"endColumn":16},{"ruleId":"519","severity":1,"message":"647","line":16,"column":9,"nodeType":"521","messageId":"522","endLine":16,"endColumn":18},{"ruleId":"519","severity":1,"message":"536","line":1,"column":17,"nodeType":"521","messageId":"522","endLine":1,"endColumn":26},{"ruleId":"519","severity":1,"message":"648","line":4,"column":48,"nodeType":"521","messageId":"522","endLine":4,"endColumn":55},{"ruleId":"519","severity":1,"message":"649","line":15,"column":10,"nodeType":"521","messageId":"522","endLine":15,"endColumn":15},{"ruleId":"519","severity":1,"message":"650","line":15,"column":17,"nodeType":"521","messageId":"522","endLine":15,"endColumn":25},{"ruleId":"519","severity":1,"message":"609","line":19,"column":9,"nodeType":"521","messageId":"522","endLine":19,"endColumn":18},{"ruleId":"519","severity":1,"message":"526","line":2,"column":24,"nodeType":"521","messageId":"522","endLine":2,"endColumn":35},{"ruleId":"528","severity":1,"message":"529","line":12,"column":17,"nodeType":"530","endLine":12,"endColumn":22},{"ruleId":"537","severity":1,"message":"651","line":21,"column":15,"nodeType":"539","messageId":"540","endLine":21,"endColumn":17},{"ruleId":"519","severity":1,"message":"536","line":1,"column":17,"nodeType":"521","messageId":"522","endLine":1,"endColumn":26},{"ruleId":"519","severity":1,"message":"562","line":1,"column":28,"nodeType":"521","messageId":"522","endLine":1,"endColumn":36},{"ruleId":"652","severity":1,"message":"653","line":136,"column":3,"nodeType":"654","messageId":"655","endLine":147,"endColumn":4},{"ruleId":"656","severity":1,"message":"657","line":139,"column":5,"nodeType":"658","messageId":"659","endLine":140,"endColumn":16},{"ruleId":"656","severity":1,"message":"657","line":141,"column":5,"nodeType":"658","messageId":"659","endLine":142,"endColumn":16},{"ruleId":"656","severity":1,"message":"657","line":143,"column":5,"nodeType":"658","messageId":"659","endLine":144,"endColumn":16},{"ruleId":"656","severity":1,"message":"657","line":145,"column":5,"nodeType":"658","messageId":"659","endLine":146,"endColumn":18},{"ruleId":"519","severity":1,"message":"536","line":1,"column":17,"nodeType":"521","messageId":"522","endLine":1,"endColumn":26},{"ruleId":"519","severity":1,"message":"562","line":1,"column":28,"nodeType":"521","messageId":"522","endLine":1,"endColumn":36},{"ruleId":"519","severity":1,"message":"536","line":1,"column":17,"nodeType":"521","messageId":"522","endLine":1,"endColumn":26},{"ruleId":"519","severity":1,"message":"562","line":1,"column":28,"nodeType":"521","messageId":"522","endLine":1,"endColumn":36},{"ruleId":"519","severity":1,"message":"536","line":1,"column":17,"nodeType":"521","messageId":"522","endLine":1,"endColumn":26},{"ruleId":"519","severity":1,"message":"648","line":4,"column":48,"nodeType":"521","messageId":"522","endLine":4,"endColumn":55},{"ruleId":"519","severity":1,"message":"649","line":17,"column":10,"nodeType":"521","messageId":"522","endLine":17,"endColumn":15},{"ruleId":"519","severity":1,"message":"650","line":17,"column":17,"nodeType":"521","messageId":"522","endLine":17,"endColumn":25},{"ruleId":"519","severity":1,"message":"609","line":22,"column":9,"nodeType":"521","messageId":"522","endLine":22,"endColumn":18},{"ruleId":"515","replacedBy":"660"},{"ruleId":"517","replacedBy":"661"},{"ruleId":"519","severity":1,"message":"536","line":1,"column":17,"nodeType":"521","messageId":"522","endLine":1,"endColumn":26},{"ruleId":"519","severity":1,"message":"562","line":1,"column":28,"nodeType":"521","messageId":"522","endLine":1,"endColumn":36},{"ruleId":"519","severity":1,"message":"632","line":2,"column":10,"nodeType":"521","messageId":"522","endLine":2,"endColumn":27},{"ruleId":"519","severity":1,"message":"563","line":3,"column":10,"nodeType":"521","messageId":"522","endLine":3,"endColumn":16},{"ruleId":"519","severity":1,"message":"614","line":3,"column":18,"nodeType":"521","messageId":"522","endLine":3,"endColumn":23},{"ruleId":"519","severity":1,"message":"523","line":4,"column":8,"nodeType":"521","messageId":"522","endLine":4,"endColumn":13},{"ruleId":"519","severity":1,"message":"662","line":7,"column":10,"nodeType":"521","messageId":"522","endLine":7,"endColumn":15},{"ruleId":"519","severity":1,"message":"663","line":9,"column":5,"nodeType":"521","messageId":"522","endLine":9,"endColumn":14},{"ruleId":"519","severity":1,"message":"664","line":12,"column":10,"nodeType":"521","messageId":"522","endLine":12,"endColumn":17},{"ruleId":"519","severity":1,"message":"665","line":12,"column":19,"nodeType":"521","messageId":"522","endLine":12,"endColumn":29},"no-native-reassign",["666"],"no-negated-in-lhs",["667"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Timer' is defined but never used.","'BreakActions' is defined but never used.","'PastActions' is defined but never used.","'mounted' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'mounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'dispatch' is assigned a value but never used.","'Views' is defined but never used.",["666"],["667"],"'response' is assigned a value but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'words' is already defined.","redeclared","'colors' is already defined.","'errors' is assigned a value but never used.","'successes' is assigned a value but never used.","'begin' is assigned a value but never used.","'finish' is assigned a value but never used.","'timeLimitReached' is assigned a value but never used.","'setOnboardingComplete' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'props.onboarding.awChecked', 'props.onboarding.complete', and 'props.onboarding.user'. Either include them or remove the dependency array.","ArrayExpression",["668"],["666"],["667"],"'breakArray' is assigned a value but never used.","'setBreakArray' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'history' is assigned a value but never used.","'Provider' is defined but never used.","'remote' is assigned a value but never used.","'HomeScreen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["669"],["666"],["667"],["666"],["667"],"'useSelector' is defined but never used.","'store' is defined but never used.","'ipcRenderer' is assigned a value but never used.","'s1' is assigned a value but never used.","'complte' is assigned a value but never used.","'setComplete' is assigned a value but never used.","'scores' is assigned a value but never used.","'setScore' is assigned a value but never used.","'order' is assigned a value but never used.","'ScriptTag' is defined but never used.","'InnerHTML' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["670"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.stage.scores'. Either include them or remove the dependency array.",["671"],["666"],["667"],"'isDev' is assigned a value but never used.","'path' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'dates' is defined but never used.","'ColoredDateCellWrapper' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["672"],"'onEventResize' is assigned a value but never used.","'onEventDrop' is assigned a value but never used.","'FruitNinja' is defined but never used.","'StroopTest' is defined but never used.","'PlusOutlined' is defined but never used.","'ApiCalendar' is defined but never used.","'shell' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'showModal' is assigned a value but never used.",["673"],"'BreakManager' is defined but never used.",["666"],["667"],"'Input' is defined but never used.","'Loading' is defined but never used.","'AWClientService' is defined but never used.","React Hook useEffect has a missing dependency: 'emotions'. Either include it or remove the dependency array.",["674"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Reducer' is defined but never used.",["666"],["667"],"'fork' is defined but never used.",["666"],["667"],["666"],["667"],["666"],["667"],"'OnboardingActions' is defined but never used.",["675"],["666"],["667"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'awcheck'. Either include it or remove the dependency array.",["676"],["666"],["667"],["666"],["667"],"'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'loginUser' is assigned a value but never used.","'message' is defined but never used.","'sites' is assigned a value but never used.","'setSites' is assigned a value but never used.","Expected '!==' and instead saw '!='.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case",["666"],["667"],"'Chart' is defined but never used.","'curWindow' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},{"desc":"683","fix":"687"},{"desc":"688","fix":"689"},{"desc":"685","fix":"690"},{"desc":"691","fix":"692"},"Update the dependencies array to be: [history, props.onboarding.awChecked, props.onboarding.complete, props.onboarding.user]",{"range":"693","text":"694"},"Update the dependencies array to be: [dispatch, history]",{"range":"695","text":"696"},"Update the dependencies array to be: [props]",{"range":"697","text":"698"},"Update the dependencies array to be: [dispatch, props.stage.scores]",{"range":"699","text":"700"},"Update the dependencies array to be: [getData]",{"range":"701","text":"702"},{"range":"703","text":"700"},"Update the dependencies array to be: [emotions]",{"range":"704","text":"705"},{"range":"706","text":"702"},"Update the dependencies array to be: [awcheck]",{"range":"707","text":"708"},[1750,1752],"[history, props.onboarding.awChecked, props.onboarding.complete, props.onboarding.user]",[2422,2424],"[dispatch, history]",[1365,1367],"[props]",[697,699],"[dispatch, props.stage.scores]",[1591,1593],"[getData]",[701,703],[2994,2996],"[emotions]",[787,789],[796,798],"[awcheck]"]