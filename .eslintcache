[{"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\App.js":"1","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\index.js":"2","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\reducers\\index.js":"3","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\HomeScreen\\index.jsx":"4","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\actions\\test.action.js":"5","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\OnboardingScreen\\RegularBreaks.jsx":"6","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\types\\index.js":"7","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\types\\onboarding.types.js":"8","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\reducers\\onboarding.reducer.js":"9","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\actions\\onboarding.action.js":"10","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx":"11","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\index.js":"12","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\navigation\\index.js":"13","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\OnboardingScreen\\AdHocBreaks.jsx":"14","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\OnboardingScreen\\ScheduledBreaks.jsx":"15","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\OnboardingScreen\\index.jsx":"16","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\sagas\\index.js":"17","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\reportWebVitals.js":"18","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\configureStore.js":"19","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\reducers\\test.reducer.js":"20","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\utils\\dates.js":"21","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\OnboardingScreen\\FinishingUp.jsx":"22","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\CalendarScreen\\index.jsx":"23"},{"size":491,"mtime":1610029364034,"results":"24","hashOfConfig":"25"},{"size":589,"mtime":1610192253213,"results":"26","hashOfConfig":"25"},{"size":325,"mtime":1610083726469,"results":"27","hashOfConfig":"25"},{"size":1072,"mtime":1610029364071,"results":"28","hashOfConfig":"25"},{"size":79,"mtime":1610029364056,"results":"29","hashOfConfig":"25"},{"size":2681,"mtime":1610090765363,"results":"30","hashOfConfig":"25"},{"size":56,"mtime":1610192253219,"results":"31","hashOfConfig":"25"},{"size":458,"mtime":1610090492388,"results":"32","hashOfConfig":"25"},{"size":1446,"mtime":1610192253217,"results":"33","hashOfConfig":"25"},{"size":990,"mtime":1610192253211,"results":"34","hashOfConfig":"25"},{"size":3206,"mtime":1610192253225,"results":"35","hashOfConfig":"25"},{"size":517,"mtime":1610029364048,"results":"36","hashOfConfig":"25"},{"size":483,"mtime":1610029364052,"results":"37","hashOfConfig":"25"},{"size":11828,"mtime":1610192253222,"results":"38","hashOfConfig":"25"},{"size":4942,"mtime":1610091464150,"results":"39","hashOfConfig":"25"},{"size":2320,"mtime":1610192253229,"results":"40","hashOfConfig":"25"},{"size":226,"mtime":1610029364064,"results":"41","hashOfConfig":"25"},{"size":375,"mtime":1610029364067,"results":"42","hashOfConfig":"25"},{"size":790,"mtime":1610029364057,"results":"43","hashOfConfig":"25"},{"size":306,"mtime":1610192253218,"results":"44","hashOfConfig":"25"},{"size":3854,"mtime":1610191739346,"results":"45","hashOfConfig":"25"},{"size":1262,"mtime":1610192253223,"results":"46","hashOfConfig":"25"},{"size":3741,"mtime":1610194390693,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"jy8erf",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\App.js",["105"],"import React, { useEffect } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { store } from \"./redux\";\r\nimport Main from \"./navigation\";\r\n\r\nimport \"antd/dist/antd.css\";\r\n\r\nfunction App() {\r\n  // useEffect(() => {\r\n  //   Firebase.initializeApp(config);\r\n  // }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Main />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["106","107"],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\index.js",[],["108","109"],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\reducers\\index.js",["110"],"import { combineReducers, Reducer } from \"redux\";\r\nimport TestReducer from \"./test.reducer\";\r\nimport OnboardingReducer from \"./onboarding.reducer\";\r\n\r\nconst allReducers = {\r\n  test: TestReducer,\r\n  onboarding: OnboardingReducer,\r\n};\r\n\r\nconst rootReducer = combineReducers({ ...allReducers });\r\n\r\nexport default rootReducer;\r\n",["111","112"],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\HomeScreen\\index.jsx",["113"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { testAction } from \"../../redux/actions/test.action\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport \"./styles.css\";\r\n\r\n//import { AWClientService } from \"../../services\";\r\n//let client=new AWClientService()\r\n//client.getCurrentlyActiveWindow().then(console.log)\r\n//client.getActiveWindows().then(console.log)\r\n//client.getAFK().then(console.log)\r\n//client.getAppTotalWithoutAudio().then(console.log)\r\n//client.getAppTotalWithAudio().then(console.log)\r\n\r\nconst HomeScreen = (props) => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    // props._testAction();\r\n  }, []);\r\n  return <div>Hello world {props.test.value}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { test: state.test };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      _testAction: testAction,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);\r\n","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\actions\\test.action.js",[],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\OnboardingScreen\\RegularBreaks.jsx",["114","115"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Input } from \"antd\";\r\n\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst RegularBreakScreen = (props) => {\r\n  return (\r\n    <div className=\"step-container\">\r\n      <h1>Regular Breaks</h1>\r\n      <div style={{ marginTop: \"3%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          How long would you like your breaks to be?\r\n        </p>\r\n        <div\r\n          style={{\r\n            marginTop: \"1%\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Input\r\n            size=\"large\"\r\n            style={{ width: \"10%\", borderRadius: 5, verticalAlign: \"center\" }}\r\n            placeholder=\"Length\"\r\n            type=\"number\"\r\n            value={props.onboarding.regularBreakLength}\r\n            onChange={(e) => {\r\n              if (e.target.value > 0)\r\n                props.setRegularBreakLength(e.target.value);\r\n            }}\r\n          />\r\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\r\n            minutes\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: \"3%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          After how long would you like to take regular breaks?\r\n        </p>\r\n        <div\r\n          style={{\r\n            marginTop: \"1%\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Input\r\n            size=\"large\"\r\n            style={{ width: \"10%\", borderRadius: 5, verticalAlign: \"center\" }}\r\n            placeholder=\"Interval\"\r\n            type=\"number\"\r\n            value={props.onboarding.regularBreakInterval}\r\n            onChange={(e) => {\r\n              if (e.target.value > 0 && e.target.value < 61)\r\n                props.setRegularBreakInterval(e.target.value);\r\n            }}\r\n          />\r\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\r\n            minutes\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setRegularBreakInterval: OnboardingActions.setRegularBreakInterval,\r\n      setRegularBreakLength: OnboardingActions.setRegularBreakLength,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegularBreakScreen);\r\n","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\types\\index.js",[],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\types\\onboarding.types.js",[],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\reducers\\onboarding.reducer.js",[],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\actions\\onboarding.action.js",[],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx",["116","117","118","119"],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\index.js",[],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\navigation\\index.js",["120"],"import React, { Suspense, lazy } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst HomeScreen = lazy(() => import(\"../screens/HomeScreen\"));\r\nconst OnboardingScreen = lazy(() => import(\"../screens/OnboardingScreen\"));\r\n\r\nconst Main = () => (\r\n  <Suspense fallback={<Loading />}>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={OnboardingScreen} />\r\n    </Switch>\r\n  </Suspense>\r\n);\r\n\r\nexport default Main;\r\n","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\OnboardingScreen\\AdHocBreaks.jsx",["121","122","123","124"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Input, Menu, Dropdown, Button, Modal, message } from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\n\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst AdHocBreakScreen = (props) => {\r\n  const [siteName, setSiteName] = useState(\"\");\r\n  const [siteUrl, setSiteUrl] = useState(\"\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [sites, setSites] = useState([\r\n    { name: \"Youtube\", url: \"https://www.youtube.com\", key: \"1\" },\r\n  ]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    setSiteName(\"\");\r\n    setSiteUrl(\"\");\r\n  };\r\n\r\n  const menu = (mainIndex) => (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        if (key === (props.onboarding.overRideSites.length + 1).toString()) {\r\n          setIsModalVisible(true);\r\n        } else {\r\n          let keyInt = parseInt(key);\r\n          let tempArray = props.onboarding.allOverRides;\r\n          let tempObj = tempArray[mainIndex];\r\n          let siteObject = props.onboarding.overRideSites[keyInt - 1];\r\n          tempObj.name = siteObject.name;\r\n          tempObj.url = siteObject.url;\r\n          tempArray[mainIndex] = tempObj;\r\n          props.setAllOverrides(tempArray);\r\n        }\r\n      }}\r\n    >\r\n      {props.onboarding.overRideSites.map((item, index) => {\r\n        return <Menu.Item key={item.key}>{item.name}</Menu.Item>;\r\n      })}\r\n      <Menu.Item key={(sites.length + 1).toString()}>+ADD ANOTHER</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className=\"step-container\" style={{ marginBottom: \"10px\" }}>\r\n      <Modal\r\n        title=\"\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        centered\r\n        footer={null}\r\n        width={700}\r\n      >\r\n        <div style={{ margin: \"7%\" }}>\r\n          <h2>Add a Site</h2>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Input\r\n              size=\"large\"\r\n              style={{\r\n                width: \"45%\",\r\n                borderRadius: 5,\r\n                verticalAlign: \"center\",\r\n                marginRight: \"2.5%\",\r\n              }}\r\n              placeholder=\"Site Name\"\r\n              value={siteName}\r\n              onChange={(e) => {\r\n                setSiteName(e.target.value);\r\n              }}\r\n            />\r\n            <Input\r\n              size=\"large\"\r\n              style={{\r\n                width: \"45%\",\r\n                borderRadius: 5,\r\n                verticalAlign: \"center\",\r\n                marginLeft: \"2.5%\",\r\n              }}\r\n              placeholder=\"Site URL\"\r\n              value={siteUrl}\r\n              onChange={(e) => {\r\n                setSiteUrl(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"8%\",\r\n            }}\r\n          >\r\n            <Button\r\n              style={{ marginRight: \"2.5%\" }}\r\n              onClick={() => {\r\n                setIsModalVisible(false);\r\n              }}\r\n            >\r\n              CANCEL\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginLeft: \"2.5%\" }}\r\n              onClick={() => {\r\n                let key = (\r\n                  props.onboarding.overRideSites.length + 1\r\n                ).toString();\r\n                let tempArray = props.onboarding.overRideSites;\r\n                tempArray.push({ url: siteUrl, name: siteName, key });\r\n                props.setOverrideSites(tempArray);\r\n                setIsModalVisible(false);\r\n              }}\r\n            >\r\n              ADD SITE\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      <h1>Break Overrides</h1>\r\n\r\n      <div style={{ marginTop: \"2%\" }}>\r\n        <p style={{ fontSize: \"15px\", color: \"#696969\", width: \"60%\" }}>\r\n          This section is to set up any specific breaks that you want to take.\r\n          For example you can set the app up to start some breaks every time you\r\n          open a specific app like Facebook.\r\n        </p>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div\r\n            style={{\r\n              marginTop: \"1%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              width: \"60%\",\r\n            }}\r\n          >\r\n            <p style={{ flex: 2, fontSize: \"18px\" }}>Site Name</p>\r\n            <p style={{ flex: 1, fontSize: \"18px\" }}>After Every</p>\r\n            <p style={{ flex: 1, fontSize: \"18px\" }}>take a Break For</p>\r\n          </div>\r\n          {props.onboarding.allOverRides.map((item, index) => {\r\n            return (\r\n              <div style={{ marginTop: \"1%\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                    width: \"60%\",\r\n                  }}\r\n                >\r\n                  <div style={{ flex: 2 }}>\r\n                    <Dropdown overlay={menu(index)} trigger={[\"click\"]}>\r\n                      <Button\r\n                        size=\"large\"\r\n                        style={{\r\n                          borderRadius: 5,\r\n                          width: \"80%\",\r\n                        }}\r\n                      >\r\n                        {item.name.length !== 0 ? (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              justifyContent: \"space-between\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            {item.name}\r\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\r\n                          </div>\r\n                        ) : (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              justifyContent: \"space-between\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            Select Site\r\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\r\n                          </div>\r\n                        )}\r\n                      </Button>\r\n                    </Dropdown>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Input\r\n                      size=\"large\"\r\n                      style={{\r\n                        borderRadius: 5,\r\n                        verticalAlign: \"center\",\r\n                        width: \"45%\",\r\n                      }}\r\n                      placeholder=\"First Name\"\r\n                      type=\"number\"\r\n                      value={item.interval}\r\n                      onChange={(e) => {\r\n                        if (e.target.value > 0 && e.target.value < 61) {\r\n                          let tempArray = props.onboarding.allOverRides;\r\n                          let tempObj = tempArray[index];\r\n                          tempObj.interval = e.target.value;\r\n                          tempArray[index] = tempObj;\r\n                          props.setAllOverrides(tempArray);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    >\r\n                      <p\r\n                        style={{\r\n                          paddingTop: \"20%\",\r\n                          marginLeft: \"7%\",\r\n                          fontSize: \"15px\",\r\n                          flex: 1,\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        minutes\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Input\r\n                      size=\"large\"\r\n                      style={{\r\n                        borderRadius: 5,\r\n                        verticalAlign: \"center\",\r\n                        width: \"45%\",\r\n                      }}\r\n                      placeholder=\"First Name\"\r\n                      type=\"number\"\r\n                      value={item.length}\r\n                      onChange={(e) => {\r\n                        if (e.target.value > 0) {\r\n                          let tempArray = props.onboarding.allOverRides;\r\n                          let tempObj = tempArray[index];\r\n                          tempObj.length = e.target.value;\r\n                          tempArray[index] = tempObj;\r\n                          props.setAllOverrides(tempArray);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    >\r\n                      <p\r\n                        style={{\r\n                          paddingTop: \"20%\",\r\n                          marginLeft: \"7%\",\r\n                          fontSize: \"15px\",\r\n                          flex: 1,\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        minutes\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <p\r\n            style={{\r\n              textDecorationLine: \"underline\",\r\n              marginTop: \"2%\",\r\n              fontSize: \"17px\",\r\n              cursor: \"pointer\",\r\n              width: \"15%\",\r\n            }}\r\n            onClick={() => {\r\n              let tempArray = props.onboarding.allOverRides;\r\n              tempArray.push({ name: \"\", url: \"\", interval: 60, length: 1 });\r\n              props.setAllOverrides(tempArray);\r\n            }}\r\n          >\r\n            +Add Override\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setAllOverrides: OnboardingActions.setAllOverrides,\r\n      setOverrideSites: OnboardingActions.setOverrideSites,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdHocBreakScreen);\r\n","C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\OnboardingScreen\\ScheduledBreaks.jsx",["125","126"],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\OnboardingScreen\\index.jsx",[],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\sagas\\index.js",["127"],"import { all, fork } from \"redux-saga/effects\";\r\n\r\n// Sagas\r\n// import adminSaga from \"./admin.saga\";\r\n\r\n// Connect types to sagas\r\nexport const rootSaga = function* root() {\r\n  yield all([\r\n    // fork(adminSaga)\r\n  ]);\r\n};\r\n",["128","129"],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\reportWebVitals.js",[],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\configureStore.js",["130"],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\redux\\reducers\\test.reducer.js",[],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\utils\\dates.js",["131","132","133","134","135"],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\OnboardingScreen\\FinishingUp.jsx",["136","137","138","139"],"C:\\Users\\sethu\\shriram\\mit\\RL_app\\src\\screens\\CalendarScreen\\index.jsx",["140"],{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"145","replacedBy":"149"},{"ruleId":"147","replacedBy":"150"},{"ruleId":"141","severity":1,"message":"151","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":34},{"ruleId":"145","replacedBy":"152"},{"ruleId":"147","replacedBy":"153"},{"ruleId":"141","severity":1,"message":"154","line":18,"column":9,"nodeType":"143","messageId":"144","endLine":18,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"155","line":1,"column":28,"nodeType":"143","messageId":"144","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"156","line":12,"column":10,"nodeType":"143","messageId":"144","endLine":12,"endColumn":17},{"ruleId":"141","severity":1,"message":"157","line":12,"column":19,"nodeType":"143","messageId":"144","endLine":12,"endColumn":29},{"ruleId":"141","severity":1,"message":"158","line":15,"column":9,"nodeType":"143","messageId":"144","endLine":15,"endColumn":18},{"ruleId":"141","severity":1,"message":"159","line":5,"column":7,"nodeType":"143","messageId":"144","endLine":5,"endColumn":17},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"160","line":4,"column":48,"nodeType":"143","messageId":"144","endLine":4,"endColumn":55},{"ruleId":"141","severity":1,"message":"161","line":15,"column":17,"nodeType":"143","messageId":"144","endLine":15,"endColumn":25},{"ruleId":"141","severity":1,"message":"158","line":19,"column":9,"nodeType":"143","messageId":"144","endLine":19,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"155","line":1,"column":28,"nodeType":"143","messageId":"144","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"162","line":1,"column":15,"nodeType":"143","messageId":"144","endLine":1,"endColumn":19},{"ruleId":"145","replacedBy":"163"},{"ruleId":"147","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":5,"column":1,"nodeType":"167","endLine":29,"endColumn":3},{"ruleId":"168","severity":1,"message":"169","line":136,"column":3,"nodeType":"170","messageId":"171","endLine":147,"endColumn":4},{"ruleId":"172","severity":1,"message":"173","line":139,"column":5,"nodeType":"174","messageId":"175","endLine":140,"endColumn":16},{"ruleId":"172","severity":1,"message":"173","line":141,"column":5,"nodeType":"174","messageId":"175","endLine":142,"endColumn":16},{"ruleId":"172","severity":1,"message":"173","line":143,"column":5,"nodeType":"174","messageId":"175","endLine":144,"endColumn":16},{"ruleId":"172","severity":1,"message":"173","line":145,"column":5,"nodeType":"174","messageId":"175","endLine":146,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"176","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":15},{"ruleId":"141","severity":1,"message":"177","line":9,"column":10,"nodeType":"143","messageId":"144","endLine":9,"endColumn":20},{"ruleId":"141","severity":1,"message":"178","line":9,"column":22,"nodeType":"143","messageId":"144","endLine":9,"endColumn":35},{"ruleId":"141","severity":1,"message":"179","line":2,"column":37,"nodeType":"143","messageId":"144","endLine":2,"endColumn":42},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["180"],"no-negated-in-lhs",["181"],["180"],["181"],"'Reducer' is defined but never used.",["180"],["181"],"'history' is assigned a value but never used.","'useState' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'showModal' is assigned a value but never used.","'HomeScreen' is assigned a value but never used.","'message' is defined but never used.","'setSites' is assigned a value but never used.","'fork' is defined but never used.",["180"],["181"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Input' is defined but never used.","'breakArray' is assigned a value but never used.","'setBreakArray' is assigned a value but never used.","'Views' is defined but never used.","no-global-assign","no-unsafe-negation"]