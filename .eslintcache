[{"C:\\code\\mit\\RL_app\\src\\reportWebVitals.js":"1","C:\\code\\mit\\RL_app\\src\\screens\\BreakScreen\\index.jsx":"2","C:\\code\\mit\\RL_app\\src\\screens\\CalendarScreen\\index.jsx":"3","C:\\code\\mit\\RL_app\\src\\breakmanager\\DatabaseUpdater\\index.js":"4","C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test\\index.jsx":"5","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\index.jsx":"6","C:\\code\\mit\\RL_app\\src\\screens\\HomeScreen\\index.jsx":"7","C:\\code\\mit\\RL_app\\src\\screens\\NewHomeScreen\\index.jsx":"8","C:\\code\\mit\\RL_app\\src\\navigation\\index.js":"9","C:\\code\\mit\\RL_app\\src\\index.js":"10","C:\\code\\mit\\RL_app\\src\\screens\\FruitNinjaScreen\\index.jsx":"11","C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja\\index.jsx":"12","C:\\code\\mit\\RL_app\\src\\screens\\StroopScreen\\index.jsx":"13","C:\\code\\mit\\RL_app\\src\\redux\\types\\break.types.js":"14","C:\\code\\mit\\RL_app\\src\\redux\\actions\\break.action.js":"15","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\break.reducer.js":"16","C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info.jsx":"17","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\index.js":"18","C:\\code\\mit\\RL_app\\src\\breakmanager\\EventHandler\\index.js":"19","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\activityrule.break.js":"20","C:\\code\\mit\\RL_app\\src\\components\\Calendar.jsx":"21","C:\\code\\mit\\RL_app\\src\\components\\Games\\index.jsx":"22","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx":"23","C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info_end.js":"24","C:\\code\\mit\\RL_app\\src\\App.js":"25","C:\\code\\mit\\RL_app\\src\\screens\\LoginScreen\\index.jsx":"26","C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja_manager.jsx":"27","C:\\code\\mit\\RL_app\\src\\screens\\BreakFeedbackScreen\\index.jsx":"28","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\index.js":"29","C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test_manager.jsx":"30","C:\\code\\mit\\RL_app\\src\\redux\\sagas\\index.js":"31","C:\\code\\mit\\RL_app\\src\\redux\\actions\\index.js":"32","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\FinishingUp.jsx":"33","C:\\code\\mit\\RL_app\\src\\screens\\PopupScreen\\index.jsx":"34","C:\\code\\mit\\RL_app\\src\\screens\\AnalyticsScreen\\index.jsx":"35","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\interval.break.js":"36","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\scheduled.break.js":"37","C:\\code\\mit\\RL_app\\src\\services\\awclient.service.js":"38","C:\\code\\mit\\RL_app\\src\\screens\\AWCheckerScreen\\index.jsx":"39"},{"size":375,"mtime":1609573919416,"results":"40","hashOfConfig":"41"},{"size":5953,"mtime":1632820645834,"results":"42","hashOfConfig":"41"},{"size":4290,"mtime":1632818583075,"results":"43","hashOfConfig":"41"},{"size":996,"mtime":1631870194072,"results":"44","hashOfConfig":"41"},{"size":3332,"mtime":1626085976391,"results":"45","hashOfConfig":"41"},{"size":3792,"mtime":1632826963342,"results":"46","hashOfConfig":"41"},{"size":3190,"mtime":1632816598539,"results":"47","hashOfConfig":"41"},{"size":1295,"mtime":1632815211203,"results":"48","hashOfConfig":"41"},{"size":2924,"mtime":1632831507660,"results":"49","hashOfConfig":"41"},{"size":517,"mtime":1609573919413,"results":"50","hashOfConfig":"41"},{"size":933,"mtime":1632819052562,"results":"51","hashOfConfig":"41"},{"size":2394,"mtime":1632818570694,"results":"52","hashOfConfig":"41"},{"size":927,"mtime":1632819062790,"results":"53","hashOfConfig":"41"},{"size":565,"mtime":1632816867210,"results":"54","hashOfConfig":"41"},{"size":1365,"mtime":1632818453965,"results":"55","hashOfConfig":"41"},{"size":3499,"mtime":1632831514263,"results":"56","hashOfConfig":"41"},{"size":1071,"mtime":1632819150553,"results":"57","hashOfConfig":"41"},{"size":349,"mtime":1632817649632,"results":"58","hashOfConfig":"41"},{"size":2502,"mtime":1632821815401,"results":"59","hashOfConfig":"41"},{"size":4813,"mtime":1632831459469,"results":"60","hashOfConfig":"41"},{"size":2370,"mtime":1632833789178,"results":"61","hashOfConfig":"41"},{"size":3561,"mtime":1632819564289,"results":"62","hashOfConfig":"41"},{"size":3626,"mtime":1632818593549,"results":"63","hashOfConfig":"41"},{"size":1112,"mtime":1632821147766,"results":"64","hashOfConfig":"41"},{"size":656,"mtime":1632483733427,"results":"65","hashOfConfig":"41"},{"size":2323,"mtime":1632577267328,"results":"66","hashOfConfig":"41"},{"size":1579,"mtime":1626085976390,"results":"67","hashOfConfig":"41"},{"size":5032,"mtime":1632829899879,"results":"68","hashOfConfig":"41"},{"size":461,"mtime":1610597903300,"results":"69","hashOfConfig":"41"},{"size":1398,"mtime":1626085976392,"results":"70","hashOfConfig":"41"},{"size":226,"mtime":1609573919415,"results":"71","hashOfConfig":"41"},{"size":217,"mtime":1610597903298,"results":"72","hashOfConfig":"41"},{"size":3364,"mtime":1632826978826,"results":"73","hashOfConfig":"41"},{"size":1673,"mtime":1631709296789,"results":"74","hashOfConfig":"41"},{"size":5343,"mtime":1632833710731,"results":"75","hashOfConfig":"41"},{"size":1404,"mtime":1632831470640,"results":"76","hashOfConfig":"41"},{"size":2244,"mtime":1632831479418,"results":"77","hashOfConfig":"41"},{"size":6925,"mtime":1632831433713,"results":"78","hashOfConfig":"41"},{"size":2210,"mtime":1632831533606,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"138jipk",{"filePath":"83","messages":"84","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"102"},"C:\\code\\mit\\RL_app\\src\\reportWebVitals.js",[],["185","186"],"C:\\code\\mit\\RL_app\\src\\screens\\BreakScreen\\index.jsx",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport \"./styles.css\";\r\nimport { store } from \"../../redux\";\r\n\r\nimport Timer from \"../../components/Timer\";\r\nimport ToolBar from \"../../components/Toolbar\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\n\r\nimport s1 from \"../../assets/s1.png\";\r\nimport s2 from \"../../assets/s2.png\";\r\nimport s3 from \"../../assets/s3.png\";\r\nimport s4 from \"../../assets/s4.png\";\r\nimport s5 from \"../../assets/s5.png\";\r\n\r\nimport s1y from \"../../assets/s1y.png\";\r\nimport s2y from \"../../assets/s2y.png\";\r\nimport s3y from \"../../assets/s3y.png\";\r\nimport s4y from \"../../assets/s4y.png\";\r\nimport s5y from \"../../assets/s5y.png\";\r\n\r\nvar electron = window.require(\"electron\");\r\nvar curWindow = electron.remote.getCurrentWindow();\r\n\r\nconst BreakScreen = (props) => {\r\n  let mounted = true;\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  });\r\n\r\n  const breakState = useSelector((state) => state.break.breakState);\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  const [minimized, setMinimized] = useState(false);\r\n\r\n  const breakDuration = store.getState().break.breakDuration;\r\n  const breakStartTime = store.getState().break.breakStartTime;\r\n\r\n  if (breakState === \"break\" && !minimized) {\r\n    curWindow.maximize();\r\n    curWindow.setMovable(false);\r\n    curWindow.setSize(\r\n      electron.remote.screen.getPrimaryDisplay().size.width,\r\n      Math.ceil(electron.remote.screen.getPrimaryDisplay().size.height)\r\n    );\r\n    curWindow.setPosition(0, 0);\r\n\r\n    return (\r\n      <div className=\"break-div\">\r\n        <ToolBar\r\n          type=\"minimize\"\r\n          minimize={setMinimized}\r\n          totaltime={breakDuration}\r\n          startTime={breakStartTime}\r\n        />\r\n        <div className=\"circle\"></div>\r\n        <div className=\"break-text\">\r\n          {store.getState().onboarding.breakMessage}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (breakState === \"break\" && minimized) {\r\n    curWindow.unmaximize();\r\n    curWindow.setMovable(true);\r\n    curWindow.setSize(\r\n      electron.remote.screen.getPrimaryDisplay().size.width,\r\n      Math.ceil(electron.remote.screen.getPrimaryDisplay().size.height / 8)\r\n    );\r\n    curWindow.setPosition(\r\n      0,\r\n      (7 / 8) * electron.remote.screen.getPrimaryDisplay().size.height\r\n    );\r\n\r\n    return (\r\n      <div className=\"break-div\">\r\n        <ToolBar\r\n          type=\"maximize\"\r\n          minimize={setMinimized}\r\n          totaltime={breakDuration}\r\n          startTime={breakStartTime}\r\n          message={\"Be kind!\"}\r\n        />\r\n      </div>\r\n    );\r\n  } \r\n  // else {\r\n  //   curWindow.maximize();\r\n  //   curWindow.setAlwaysOnTop(false);\r\n\r\n  //   return (\r\n  //     <div className=\"break-div\">\r\n  //       <button\r\n  //         className=\"close-break\"\r\n  //         onClick={() => {\r\n  //           addBreakInfo();\r\n  //         }}\r\n  //       >\r\n  //         <div>&#10006;</div>\r\n  //         <div className=\"save-button-text\">Save feedback and close</div>\r\n  //       </button>\r\n  //       <div className=\"break-completed-text\">\r\n  //         Break completed successfully!\r\n  //       </div>\r\n\r\n  //       <div className=\"feedback-text-box\">\r\n  //         <div className=\"floating-label\">Notes</div>\r\n  //         <textarea\r\n  //           onChange={(event) => {\r\n  //             if (mounted) setFeedbackText(event.target.value);\r\n  //           }}\r\n  //           data-role=\"none\"\r\n  //           rows=\"3\"\r\n  //           cols=\"80\"\r\n  //           placeholder=\"Type in here any notes or reflections about the break that you would like to save\"\r\n  //           className=\"feedback-text\"\r\n  //         />\r\n  //       </div>\r\n\r\n  //       <div className=\"feedback-request-text\">How was this break?</div>\r\n\r\n  //       <div className=\"break-feedback\">\r\n  //         {getImageButton(s5, s5y, 1, rate, setRate, mounted)}\r\n  //         {getImageButton(s4, s4y, 2, rate, setRate, mounted)}\r\n  //         {getImageButton(s3, s3y, 3, rate, setRate, mounted)}\r\n  //         {getImageButton(s2, s2y, 4, rate, setRate, mounted)}\r\n  //         {getImageButton(s1, s1y, 5, rate, setRate, mounted)}\r\n  //       </div>\r\n\r\n  //       <div style={{ display: \"flex\" }}>\r\n  //         <div style={{ width: \"7vw\", textAlign: \"left\", paddingLeft: \"0vw\" }}>\r\n  //           Not Helpful\r\n  //         </div>\r\n  //         <div style={{ width: \"28vw\" }} />\r\n  //         <div\r\n  //           style={{ width: \"4vw\", textAlign: \"right\", paddingRight: \"1vw\" }}\r\n  //         >\r\n  //           Helpful\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  return null;\r\n};\r\n\r\nlet getImageButton = (name, name2, points, rate, setRate, mounted) => {\r\n  if (points == rate)\r\n    return (\r\n      <div className=\"responsive\">\r\n        <div className=\"gallery\">\r\n          <button\r\n            className=\"feedback-button\"\r\n            onClick={() => {\r\n              if (mounted) setRate(points);\r\n            }}\r\n          >\r\n            <p style={{ fontSize: \"50px\" }}>{points - 1}</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div className=\"responsive\">\r\n        <div className=\"gallery\">\r\n          <button\r\n            className=\"feedback-button\"\r\n            onClick={() => {\r\n              if (mounted) setRate(points);\r\n            }}\r\n          >\r\n            <p style={{ fontSize: \"50px\" }}>{points - 1}</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding, break: state.break };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BreakScreen);\r\n","C:\\code\\mit\\RL_app\\src\\screens\\CalendarScreen\\index.jsx",["207"],"import React, { useState } from \"react\";\r\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport * as dates from \"../../utils/dates\";\r\nimport \"./styles.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\nconst ColoredDateCellWrapper = ({ children }) =>\r\n  React.cloneElement(React.Children.only(children), {\r\n    style: {\r\n      backgroundColor: \"lightblue\",\r\n    },\r\n  });\r\n\r\nconst CalendarScreen = (props) => {\r\n  const [events, setEvents] = useState([\r\n    {\r\n      start: moment().toDate(),\r\n      end: moment().add(1, \"days\").toDate(),\r\n      title: \"Test\",\r\n      id: 1,\r\n    },\r\n  ]);\r\n  const [draggedEvent, setDraggedEvent] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const resizeEvent = ({ event, start, end }) => {\r\n    const nextEvents = events.map((existingEvent) => {\r\n      return existingEvent.id === event.id\r\n        ? { ...existingEvent, start, end }\r\n        : existingEvent;\r\n    });\r\n\r\n    setEvents(nextEvents);\r\n  };\r\n\r\n  const moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\r\n    let allDay = event.allDay;\r\n\r\n    if (!event.allDay && droppedOnAllDaySlot) {\r\n      allDay = true;\r\n    } else if (event.allDay && !droppedOnAllDaySlot) {\r\n      allDay = false;\r\n    }\r\n\r\n    const nextEvents = events.map((existingEvent) => {\r\n      return existingEvent.id === event.id\r\n        ? { ...existingEvent, start, end, allDay }\r\n        : existingEvent;\r\n    });\r\n\r\n    setEvents(nextEvents);\r\n\r\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\r\n  };\r\n\r\n  const newEvent = ({ slots, start, end }) => {\r\n    setModalVisible(true);\r\n    let idList = events.map((a) => a.id);\r\n    let newId = Math.max(...idList) + 1;\r\n    let hour = {\r\n      id: newId,\r\n      title: \"New Event\",\r\n      allDay: slots.length === 1,\r\n      start: start,\r\n      end: end,\r\n    };\r\n\r\n    setEvents(events.concat([hour]));\r\n  };\r\n\r\n  const onDropFromOutside = ({ start, end, allDay }) => {\r\n    const event = {\r\n      id: draggedEvent.id,\r\n      title: draggedEvent.title,\r\n      start,\r\n      end,\r\n      allDay: allDay,\r\n    };\r\n\r\n    setDraggedEvent(null);\r\n    this.moveEvent({ event, start, end });\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      <Modal\r\n        visible={modalVisible}\r\n        onOk={() => {\r\n          setModalVisible(false);\r\n        }}\r\n        onCancel={() => {\r\n          setModalVisible(false);\r\n        }}\r\n      >\r\n        Hello\r\n      </Modal>\r\n      <Button\r\n        onClick={() => {\r\n          props.resetInfo();\r\n          history.push(\"/\")\r\n        }}\r\n      >\r\n        Reset\r\n      </Button>\r\n      <DnDCalendar\r\n        selectable\r\n        resizable={true}\r\n        events={events}\r\n        views={[\"day\", \"week\", \"month\"]}\r\n        // step={60}\r\n        showMultiDayTimes\r\n        defaultDate={new Date()}\r\n        onSelectSlot={newEvent}\r\n        components={{\r\n          timeSlotWrapper: ColoredDateCellWrapper,\r\n        }}\r\n        localizer={localizer}\r\n        max={dates.add(dates.endOf(new Date(), \"day\"), -1, \"hours\")}\r\n        style={{ height: props.height ? props.height : window.innerHeight }}\r\n        onEventResize={resizeEvent}\r\n        onEventDrop={moveEvent}\r\n        onDropFromOutside={onDropFromOutside}\r\n        handleDragStart={(event) => {\r\n          setDraggedEvent(event);\r\n        }}\r\n        dragFromOutsideItem={draggedEvent}\r\n        resizableAccessor={() => false}\r\n        onSelectEvent={() => {\r\n          //add code for editing an existing event here\r\n          setModalVisible(true);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ resetInfo: OnboardingActions.reset }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarScreen);\r\n",["208","209"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\DatabaseUpdater\\index.js",["210"],"import { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { store } from \"../../redux\";\r\nimport { AWClientService } from \"../../services\"\r\nlet client = new AWClientService()\r\n\r\n//TO-DO: Modify functions according to which data to backup. Currenly backing up active windows\r\n\r\n//updates the local database with data from activity watch, and adds a minute of runnning time to THIS APP for use for interval-break\r\nexport default function updateDatabase()\r\n{\r\n  client.getActiveWindowsSinceBeginning().then((dat) => {\r\n    let back = {\r\n      type: \"active-windows\",\r\n      data: dat,\r\n    }\r\n    store.dispatch(PastActions.backupAWData(back))\r\n  })\r\n\r\n\r\n  //Also backing up today's total screen time per app, although unnecessary\r\n  client.getAppTotals().then((dat) => {\r\n    let back = {\r\n      type: \"screen-time\",\r\n      data: dat,\r\n    }\r\n    store.dispatch(PastActions.backupAWData(back))\r\n  })\r\n\r\n  //adding a minute of running time\r\n  store.dispatch(PastActions.addMinute())\r\n}",["211","212"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test\\index.jsx",["213","214","215","216","217","218","219","220","221"],"import React from \"react\";\r\nimport Stroop from '@orcatech/react-neuropsych-stroop';\r\nimport { useState } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\n\r\nfunction shuffleArray(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n}\r\n\r\nfunction StroopTest(props) {\r\n\r\n    const [count, setCount] = useState({ total: 0, score: 0, lastResult: '', words:[], colors:[] });\r\n\r\n    if (count.colors.length == 0) {\r\n        var words = ['purple', 'black','green', 'red', 'blue', 'orange', 'pink', 'yellow', ];\r\n        var words2 = [...words]\r\n        var colors = ['9370D8', '000000', '009900', 'ff0000', '000099', 'EE7600', 'FF69B4', 'FFFF00', ]\r\n        var colors2 = [...colors]\r\n\r\n        words2 = words.slice(0, props.len || 4)\r\n        colors2 = colors.slice(0, props.len || 4)\r\n\r\n        words = [...words2]\r\n        colors = [...colors]\r\n\r\n        shuffleArray(words2)\r\n        colors2=[]\r\n        words2.forEach((word) => {\r\n            colors2.push(colors[words.indexOf(word)])\r\n        })\r\n\r\n\r\n        setCount({ ...count, words: words2, colors: colors2 })\r\n    }\r\n\r\n    var words = count.words\r\n    var colors =count.colors\r\n\r\n    const combos = [{\r\n        word: Math.floor(Math.random() * words.length),\r\n        color: Math.floor(Math.random() * words.length)\r\n    }];\r\n\r\n    var onComplete = (data) => {\r\n        // handle test completion\r\n        const { errors, successes, begin, finish, timeLimitReached } = data;\r\n        //setCount({ ...count, total: count.total + 1 })\r\n\r\n    }\r\n\r\n    var onSuccess = (data) => {\r\n        setCount({ ...count, total: count.total + 1, score: count.score + 1, lastResult:'Correct!' })\r\n        // handle each success that occurs\r\n    }\r\n\r\n    var onError = (data) => {\r\n        setCount({ ...count, total: count.total + 1, lastResult: 'Wrong!'})\r\n        // handle each error that occurs\r\n    }\r\n    if (count.total == 10) {\r\n        props.onComplete(count.score)\r\n        return <>Test completed. The score is {count.score}</>\r\n    }\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }} key={count.total}>\r\n            <div>Question {count.total + 1}</div>\r\n            <CountdownCircleTimer\r\n                onComplete={() => { setCount({ ...count, total: count.total + 1, lastResult: 'Out of time!'}) }}\r\n                isPlaying\r\n                duration={5}\r\n                size={100}\r\n                colors=\"#000000\"\r\n                strokeWidth={6}\r\n            >\r\n                {({ remainingTime }) => remainingTime}\r\n            </CountdownCircleTimer>\r\n\r\n            <Stroop\r\n                buttonsPerRow={words.length/2 }\r\n                colors={colors}\r\n                combos={combos}\r\n                onComplete={onComplete}\r\n                onError={onError}\r\n                onSuccess={onSuccess}\r\n                words={words}\r\n                incorrectMessage=\"Incorrect!\"\r\n                completionMessage=\"Out of time!\"\r\n            />\r\n            <div>\r\n                {count.lastResult}\r\n            </div>\r\n            <div>\r\n                {count.score}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default StroopTest;\r\n\r\n\r\n","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\index.jsx",["222","223"],"C:\\code\\mit\\RL_app\\src\\screens\\HomeScreen\\index.jsx",["224","225","226","227"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Button } from \"antd\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst HomeScreen = (props) => {\r\n  const [breakArray, setBreakArray] = useState([\"https://www.youtube.com\"]);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <div style={{ marginTop: \"3%\", width: \"70%\", margin: \"5%\" }}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n            Scheduled Breaks :{\" \"}\r\n          </p>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              width: \"50%\",\r\n            }}\r\n          >\r\n            <p style={{ flex: 1 }}>Day</p>\r\n            <p style={{ flex: 1 }}>Start Time</p>\r\n            <p style={{ flex: 1 }}>End Time</p>\r\n          </div>\r\n          <div>\r\n            {props.onboarding.scheduledBreaks.map((item, index) => {\r\n              if (item.start.length > 0) {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                      width: \"50%\",\r\n                      marginTop: index !== 0 ? \"1%\" : \"0%\",\r\n                    }}\r\n                  >\r\n                    <p style={{ flex: 1 }}>{item.day}</p>\r\n                    <p style={{ flex: 1 }}>\r\n                      {new Date(item.start).getHours() +\r\n                        \":\" +\r\n                        new Date(item.start).getMinutes()}\r\n                    </p>\r\n                    <p style={{ flex: 1 }}>\r\n                      {new Date(item.end).getHours() +\r\n                        \":\" +\r\n                        new Date(item.end).getMinutes()}\r\n                    </p>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div style={{ width: \"100%\" }}>\r\n          <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n            Regular Breaks :{\" \"}\r\n          </p>\r\n          <p>\r\n            How often you want to take regular breaks :{\" \"}\r\n            {props.onboarding.regularBreakInterval} minute(s)\r\n          </p>\r\n          <p>\r\n            How long you want these breaks to be :{\" \"}\r\n            {props.onboarding.regularBreakLength} minute(s)\r\n          </p>\r\n        </div>\r\n        <Button\r\n          onClick={() => {\r\n            props.resetInfo();\r\n            history.push(\"/\");\r\n          }}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding, break: state.break };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ resetInfo: OnboardingActions.reset }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);\r\n",["228","229"],"C:\\code\\mit\\RL_app\\src\\screens\\NewHomeScreen\\index.jsx",["230","231","232","233"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Button, Tabs } from \"antd\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CalendarComponent from \"../../components/Calendar\";\r\nimport AnalyticsScreen from \"../AnalyticsScreen\";\r\nimport HomeScreen from \"../HomeScreen\";\r\nconst { TabPane } = Tabs;\r\n\r\nconst NewHomeScreen = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Tabs defaultActiveKey=\"1\" type=\"card\" size={\"large\"}>\r\n          <TabPane tab=\"Break Settings\" key=\"1\">\r\n            <HomeScreen />\r\n          </TabPane>\r\n          <TabPane tab=\"Past Breaks\" key=\"2\">\r\n            <CalendarComponent />\r\n          </TabPane>\r\n          <TabPane tab=\"Analytics\" key=\"3\">\r\n            <AnalyticsScreen />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding, break: state.break };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ resetInfo: OnboardingActions.reset }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewHomeScreen);\r\n",["234","235"],"C:\\code\\mit\\RL_app\\src\\navigation\\index.js",["236","237","238","239"],"C:\\code\\mit\\RL_app\\src\\index.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\FruitNinjaScreen\\index.jsx",["240","241","242","243","244","245","246","247","248","249","250","251","252","253"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport Games from \"../../components/Games\";\r\n\r\nconst { ipcRenderer, remote } = window.require(\"electron\");\r\n\r\nvar s1 = {\r\n  height: \"100vh\",\r\n  width: \"100vw\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n//TO-DO: add style\r\nconst FruitNinjaScreen = () => {\r\n  const [complte, setComplete] = useState(false);\r\n  const [scores, setScore] = useState([]);\r\n  let dispatch = useDispatch();\r\n  var order = Math.floor(Math.random() * 2);\r\n  return (\r\n    <Games\r\n      order={0}\r\n      status={\"end\"}\r\n      onComplete={() => {\r\n        //remove in mobile app\r\n        // remote.getCurrentWindow().close();\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default FruitNinjaScreen;\r\n","C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja\\index.jsx",["254","255","256","257"],"import React, { useEffect } from \"react\";\r\nimport ScriptTag from 'react-script-tag';\r\nimport InnerHTML from 'dangerously-set-html-content'\r\n\r\nfunction FruitNinja(props) {\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n\r\n        if ((props.version || 1) == 1) {\r\n            script.src = \"scripts/all3.js\";\r\n            //replace in mobile app\r\n            //script.src = \"scripts/all1.js\";\r\n        }\r\n        else {\r\n            script.src = \"scripts/all4.js\";\r\n            //replace in mobile app\r\n            //script.src = \"scripts/all2.js\";\r\n        }\r\n            \r\n\r\n        script.async = true;\r\n\r\n        document.body.appendChild(script);\r\n\r\n\r\n\r\n        const targetNode = document.getElementById('fruit_ninja_score')\r\n        const config = { attributes: true, childList: true, subtree: true };\r\n        const callback = function (mutationsList, observer) {\r\n            for (const mutation of mutationsList) {\r\n                if (mutation.type === 'childList') {\r\n                    props.onComplete(parseInt(targetNode.innerHTML))\r\n                }\r\n            }\r\n        };\r\n\r\n        const observer = new MutationObserver(callback);\r\n        observer.observe(targetNode, config);\r\n        return () => {\r\n            observer.disconnect();\r\n\r\n            document.body.removeChild(script);\r\n        }\r\n    }, []);\r\n\r\n    var r=1\r\n    //replace in mobile app\r\n    //var r = document.documentElement.clientHeight * parseFloat(document.getElementById('height_ratio').innerHTML) / 420\r\n    var w = 640 * r \r\n    var h = 420 * r\r\n    return <div id='fruit_ninja_container_container' style={{display: 'flex', justifyContent: 'center' }}>\r\n    <span id='fruit_ninja_container'>\r\n            <div id=\"fruit_ninja_extra\" width={w} height={h}></div>\r\n            <canvas id=\"fruit_ninja_view\" width={w} height={h}></canvas>\r\n        <div id=\"fruit_ninja_desc\">\r\n\t            <div id='fruit_ninja_score'></div>\r\n                <div id=\"fruit_ninja_browser\"></div>\r\n                <div id='fruit_ninja_bombprob_inverse' style={{ display: 'none' }}>{props.bpi || 8}</div>\r\n                <div id='height_ratio' style={{ display: 'none' }}>{1}</div>\r\n                <div id='fruit_ninja_time_limit' style={{ display: 'none' }}>{props.timelimit||3600}</div>\r\n\r\n           </div>\r\n        </span >\r\n        </div>\r\n\r\n}\r\n\r\nexport default FruitNinja;\r\n","C:\\code\\mit\\RL_app\\src\\screens\\StroopScreen\\index.jsx",["258","259","260","261","262","263","264","265","266","267","268","269","270","271"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport Games from \"../../components/Games\";\r\n\r\nconst { ipcRenderer, remote } = window.require(\"electron\");\r\n\r\nvar s1 = {\r\n  height: \"100vh\",\r\n  width: \"100vw\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n//TO-DO: add style\r\nconst StroopScreen = () => {\r\n  const [complte, setComplete] = useState(false);\r\n  const [scores, setScore] = useState([]);\r\n  let dispatch = useDispatch();\r\n  var order = Math.floor(Math.random() * 2);\r\n  return (\r\n    <Games\r\n      order={0}\r\n      status={\"start\"}\r\n      onComplete={() => {\r\n        //remove in mobile app\r\n        // remote.getCurrentWindow().close();\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default StroopScreen;\r\n",["272","273"],"C:\\code\\mit\\RL_app\\src\\redux\\types\\break.types.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\break.action.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\break.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info.jsx",["274","275","276","277","278"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\index.js",[],["279","280"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\EventHandler\\index.js",["281","282","283"],"import { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { store } from \"../../redux\";\r\nvar electron = window.require(\"electron\");\r\nvar curWindow = electron.remote.getCurrentWindow();\r\nconst isDev = window.require(\"electron-is-dev\");\r\nconst path = window.require(\"path\");\r\n\r\n//handles window and route changes when break-state changes\r\nexport default function eventHandler(history) {\r\n  //sets screen back to normal if no break\r\n  if (\r\n    store.getState().break.breakState === \"no-break\" &&\r\n    !store.getState().break.windowChanged\r\n  ) {\r\n    curWindow.setOpacity(1);\r\n    curWindow.unmaximize();\r\n    curWindow.setSize(1000, 800);\r\n    curWindow.minimize();\r\n    history.push(\"/\");\r\n    store.dispatch(BreakActions.setWindowChanged());\r\n    curWindow.setAlwaysOnTop(false);\r\n    curWindow.reload();\r\n  }\r\n\r\n  //sets screen to popup window size if break-popup\r\n  else if (\r\n    store.getState().break.breakState === \"break-popup\" &&\r\n    !store.getState().break.windowChanged\r\n  ) {\r\n    curWindow.restore();\r\n    history.push(\"/popup\");\r\n    //curWindow.maximize()\r\n    curWindow.unmaximize();\r\n    curWindow.setSize(800, 600);\r\n    curWindow.center();\r\n    curWindow.setAlwaysOnTop(true, \"pop-up-menu\");\r\n\r\n    store.dispatch(BreakActions.setWindowChanged());\r\n  } else if (store.getState().break.breakState === \"break-stroop\") {\r\n    history.push(\"/stroop\");\r\n  } else if (store.getState().break.breakState === \"break-fruit\") {\r\n    curWindow.unmaximize();\r\n    curWindow.setSize(800, 600);\r\n    curWindow.setOpacity(1);\r\n\r\n    curWindow.setMovable(true);\r\n    history.push(\"/fruit\");\r\n  } else if (store.getState().break.breakState === \"break-feedback\") {\r\n    curWindow.maximize();\r\n    curWindow.setAlwaysOnTop(false);\r\n    history.push(\"/feedback\");\r\n  }\r\n\r\n  //sets window to full screen if break, and also ends the break after break time is over\r\n  else if (\r\n    store.getState().break.breakState === \"break\" &&\r\n    !store.getState().break.windowChanged\r\n  ) {\r\n    curWindow.setOpacity(0.8);\r\n    curWindow.maximize();\r\n\r\n    history.push(\"/break\");\r\n    store.dispatch(BreakActions.setWindowChanged());\r\n    let s1 = store.getState().break.breakStartTime;\r\n    setTimeout(() => {\r\n      if (\r\n        store.getState().break.breakState === \"break\" &&\r\n        s1 === store.getState().break.breakStartTime\r\n      ) {\r\n        console.log(\"not\");\r\n        store.dispatch(BreakActions.startFruit());\r\n      }\r\n    }, store.getState().break.breakDuration * 1000);\r\n  }\r\n}\r\n",["284","285"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\activityrule.break.js",["286"],"C:\\code\\mit\\RL_app\\src\\components\\Calendar.jsx",["287","288","289","290","291","292","293","294"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\index.jsx",["295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx",["319","320","321","322","323","324","325"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info_end.js",["326","327","328","329","330"],"C:\\code\\mit\\RL_app\\src\\App.js",["331","332"],"import React, { useEffect } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter, useHistory } from \"react-router-dom\";\r\nimport BreakManager from \"./breakmanager\";\r\n\r\n\r\nimport { store } from \"./redux\";\r\nimport Main from \"./navigation\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nfunction App() {\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    \r\n  }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <Main />\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\code\\mit\\RL_app\\src\\screens\\LoginScreen\\index.jsx",[],"C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja_manager.jsx",["333","334","335","336","337"],"C:\\code\\mit\\RL_app\\src\\screens\\BreakFeedbackScreen\\index.jsx",["338","339","340","341","342","343","344","345","346"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { AWClientService } from \"../../services\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { store } from \"../../redux\";\r\nimport s1 from \"../../assets/s1.png\";\r\nimport s2 from \"../../assets/s2.png\";\r\nimport s3 from \"../../assets/s3.png\";\r\nimport s4 from \"../../assets/s4.png\";\r\nimport s5 from \"../../assets/s5.png\";\r\n\r\nimport s1y from \"../../assets/s1y.png\";\r\nimport s2y from \"../../assets/s2y.png\";\r\nimport s3y from \"../../assets/s3y.png\";\r\nimport s4y from \"../../assets/s4y.png\";\r\nimport s5y from \"../../assets/s5y.png\";\r\n\r\nconst BreakFeedbackScreen = (props) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [rate, setRate] = useState(0);\r\n  const [feedbackText, setFeedbackText] = useState(\"\");\r\n  const history = useHistory();\r\n  let mounted = true;\r\n  const dispatch = useDispatch();\r\n\r\n  let getImageButton = (name, name2, points, rate, setRate, mounted) => {\r\n    if (points == rate)\r\n      return (\r\n        <div className=\"responsive\">\r\n          <div className=\"gallery\">\r\n            <button\r\n              className=\"feedback-button\"\r\n              onClick={() => {\r\n                if (mounted) setRate(points);\r\n              }}\r\n            >\r\n              <p style={{ fontSize: \"50px\" }}>{points - 1}</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    else\r\n      return (\r\n        <div className=\"responsive\">\r\n          <div className=\"gallery\">\r\n            <button\r\n              className=\"feedback-button\"\r\n              onClick={() => {\r\n                if (mounted) setRate(points);\r\n              }}\r\n            >\r\n              <p style={{ fontSize: \"50px\", opacity: \"0.5\" }}>{points - 1}</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  const addBreakInfo = async () => {\r\n    let breakState = store.getState().break;\r\n    if (props.onboarding.user && props.onboarding.user._id) {\r\n      let body = {\r\n        prebreakScores: breakState.prebreakScores,\r\n        postbreakScores: breakState.postbreakScores,\r\n        startTime: breakState.breakStartTime,\r\n        endTime: new Date(),\r\n        type: breakState.breakType,\r\n        feedbackScore: rate,\r\n        feedbackText: feedbackText,\r\n        panas: [],\r\n        user: props.onboarding.user._id,\r\n      };\r\n      let response = await axios.post(\r\n        \"https://thepallab.com/api/user/break\",\r\n        body\r\n      );\r\n      if (response.data.message === \"Successful Added\") {\r\n        let dat = {\r\n          ...store.getState().break,\r\n          breakEndTime: new Date(),\r\n          rating: rate,\r\n          notes: feedbackText,\r\n        };\r\n        delete dat.breakState;\r\n        delete dat.windowChanged;\r\n        dispatch(PastActions.saveBreakData(dat));\r\n        dispatch(BreakActions.closeBreakScreen());\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"break-div\">\r\n      <button\r\n        className=\"close-break\"\r\n        onClick={() => {\r\n          addBreakInfo();\r\n        }}\r\n      >\r\n        <div>&#10006;</div>\r\n        <div className=\"save-button-text\">Save feedback and close</div>\r\n      </button>\r\n      <div className=\"break-completed-text\">Break completed successfully!</div>\r\n\r\n      <div className=\"feedback-text-box\">\r\n        <div className=\"floating-label\">Notes</div>\r\n        <textarea\r\n          onChange={(event) => {\r\n            if (mounted) setFeedbackText(event.target.value);\r\n          }}\r\n          data-role=\"none\"\r\n          rows=\"3\"\r\n          cols=\"80\"\r\n          placeholder=\"Type in here any notes or reflections about the break that you would like to save\"\r\n          className=\"feedback-text\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"feedback-request-text\">How was this break?</div>\r\n\r\n      <div className=\"break-feedback\">\r\n        {getImageButton(s5, s5y, 1, rate, setRate, mounted)}\r\n        {getImageButton(s4, s4y, 2, rate, setRate, mounted)}\r\n        {getImageButton(s3, s3y, 3, rate, setRate, mounted)}\r\n        {getImageButton(s2, s2y, 4, rate, setRate, mounted)}\r\n        {getImageButton(s1, s1y, 5, rate, setRate, mounted)}\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ width: \"7vw\", textAlign: \"left\", paddingLeft: \"0vw\" }}>\r\n          Not Helpful\r\n        </div>\r\n        <div style={{ width: \"28vw\" }} />\r\n        <div style={{ width: \"4vw\", textAlign: \"right\", paddingRight: \"1vw\" }}>\r\n          Helpful\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({}, dispatch);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BreakFeedbackScreen);\r\n","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\index.js",["347"],"import { combineReducers, Reducer } from \"redux\";\r\nimport TestReducer from \"./test.reducer\";\r\nimport OnboardingReducer from \"./onboarding.reducer\";\r\nimport BreakReducer from \"./break.reducer\";\r\nimport PastReducer from \"./past.reducer\";\r\n\r\n\r\nconst allReducers = {\r\n  onboarding: OnboardingReducer,\r\n  test: TestReducer,\r\n  break: BreakReducer,\r\n  past: PastReducer,\r\n};\r\n\r\nconst rootReducer = combineReducers({ ...allReducers });\r\n\r\nexport default rootReducer;\r\n",["348","349"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test_manager.jsx",["350","351","352","353","354"],"C:\\code\\mit\\RL_app\\src\\redux\\sagas\\index.js",["355"],"import { all, fork } from \"redux-saga/effects\";\r\n\r\n// Sagas\r\n// import adminSaga from \"./admin.saga\";\r\n\r\n// Connect types to sagas\r\nexport const rootSaga = function* root() {\r\n  yield all([\r\n    // fork(adminSaga)\r\n  ]);\r\n};\r\n",["356","357"],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\index.js",[],["358","359"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\FinishingUp.jsx",["360","361","362","363","364"],"C:\\code\\mit\\RL_app\\src\\screens\\PopupScreen\\index.jsx",["365","366","367"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//TO-DO: add style\r\nconst PopupScreen = () => {\r\n  let dispatch = useDispatch();\r\n  let history = useHistory();\r\n  return (\r\n    <div style={{ backgroundColor: \"white\", padding: \"3%\" }}>\r\n      <div\r\n        style={{\r\n          color: \"#7DCAB6\",\r\n          fontSize: \"22px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        It's time to break!\r\n      </div>\r\n      <div style={{ paddingTop: \"3%\", fontSize: \"15px\" }}>\r\n        Should we get started? This break will start automatically if you ignore\r\n        this pop up\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n          marginTop: \"10%\",\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={() =>\r\n            dispatch(\r\n              BreakActions.cancelBreak(store.getState().break.breakEndTime)\r\n            )\r\n          }\r\n          style={{ color: \"#7DCAB6\", borderWidth: 0 }}\r\n        >\r\n          CANCEL\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            // dispatch(BreakActions.startBreak())\r\n            dispatch(BreakActions.startStroop());\r\n            // history.push(\"/stroop\");\r\n          }}\r\n          style={{ color: \"#7DCAB6\", borderWidth: 0 }}\r\n        >\r\n          CONTINUE\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PopupScreen;\r\n","C:\\code\\mit\\RL_app\\src\\screens\\AnalyticsScreen\\index.jsx",["368","369","370"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\interval.break.js",[],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\scheduled.break.js",["371"],"C:\\code\\mit\\RL_app\\src\\services\\awclient.service.js",["372","373"],"C:\\code\\mit\\RL_app\\src\\screens\\AWCheckerScreen\\index.jsx",["374"],"import React, { useEffect, useState } from \"react\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AWClientService } from \"../../services\";\r\nlet client = new AWClientService();\r\n\r\nconst AWCheckerScreen = (props) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    awcheck();\r\n  }, []);\r\n\r\n  const awcheck = async () => {\r\n    // props.awChecked();\r\n    // history.push(\"/\");\r\n    try {\r\n      let resp = await client.getAppTotals();\r\n      if (Object.keys(resp).length > 0) {\r\n        props.awChecked();\r\n        if (props.onboarding.complete) {\r\n          history.push(\"/home\");\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"look\", error);\r\n    }\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <h3 style={{ textAlign: \"center\" }}>\r\n          Checking if you have activity watch\r\n        </h3>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <h3 style={{ textAlign: \"center\" }}>\r\n          You need to install and turn on activity watch! Please hit refresh\r\n          after installing and turning on activity watch\r\n        </h3>\r\n        <Button\r\n          onClick={() => {\r\n            setLoading(true);\r\n            awcheck();\r\n          }}\r\n        >\r\n          Refresh\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ awChecked: OnboardingActions.awChecked }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AWCheckerScreen);\r\n",{"ruleId":"375","replacedBy":"376"},{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","severity":1,"message":"380","line":2,"column":10,"nodeType":"381","messageId":"382","endLine":2,"endColumn":20},{"ruleId":"379","severity":1,"message":"383","line":3,"column":8,"nodeType":"381","messageId":"382","endLine":3,"endColumn":13},{"ruleId":"379","severity":1,"message":"384","line":10,"column":8,"nodeType":"381","messageId":"382","endLine":10,"endColumn":13},{"ruleId":"379","severity":1,"message":"385","line":14,"column":10,"nodeType":"381","messageId":"382","endLine":14,"endColumn":22},{"ruleId":"379","severity":1,"message":"386","line":14,"column":24,"nodeType":"381","messageId":"382","endLine":14,"endColumn":35},{"ruleId":"379","severity":1,"message":"387","line":16,"column":8,"nodeType":"381","messageId":"382","endLine":16,"endColumn":10},{"ruleId":"379","severity":1,"message":"388","line":17,"column":8,"nodeType":"381","messageId":"382","endLine":17,"endColumn":10},{"ruleId":"379","severity":1,"message":"389","line":18,"column":8,"nodeType":"381","messageId":"382","endLine":18,"endColumn":10},{"ruleId":"379","severity":1,"message":"390","line":19,"column":8,"nodeType":"381","messageId":"382","endLine":19,"endColumn":10},{"ruleId":"379","severity":1,"message":"391","line":20,"column":8,"nodeType":"381","messageId":"382","endLine":20,"endColumn":10},{"ruleId":"379","severity":1,"message":"392","line":22,"column":8,"nodeType":"381","messageId":"382","endLine":22,"endColumn":11},{"ruleId":"379","severity":1,"message":"393","line":23,"column":8,"nodeType":"381","messageId":"382","endLine":23,"endColumn":11},{"ruleId":"379","severity":1,"message":"394","line":24,"column":8,"nodeType":"381","messageId":"382","endLine":24,"endColumn":11},{"ruleId":"379","severity":1,"message":"395","line":25,"column":8,"nodeType":"381","messageId":"382","endLine":25,"endColumn":11},{"ruleId":"379","severity":1,"message":"396","line":26,"column":8,"nodeType":"381","messageId":"382","endLine":26,"endColumn":11},{"ruleId":"379","severity":1,"message":"397","line":36,"column":7,"nodeType":"381","messageId":"382","endLine":36,"endColumn":14},{"ruleId":"398","severity":1,"message":"399","line":36,"column":17,"nodeType":"400","endLine":36,"endColumn":22},{"ruleId":"379","severity":1,"message":"401","line":41,"column":9,"nodeType":"381","messageId":"382","endLine":41,"endColumn":17},{"ruleId":"379","severity":1,"message":"402","line":156,"column":5,"nodeType":"381","messageId":"382","endLine":156,"endColumn":19},{"ruleId":"403","severity":1,"message":"404","line":157,"column":14,"nodeType":"405","messageId":"406","endLine":157,"endColumn":16},{"ruleId":"379","severity":1,"message":"407","line":2,"column":37,"nodeType":"381","messageId":"382","endLine":2,"endColumn":42},{"ruleId":"375","replacedBy":"408"},{"ruleId":"377","replacedBy":"409"},{"ruleId":"379","severity":1,"message":"385","line":1,"column":10,"nodeType":"381","messageId":"382","endLine":1,"endColumn":22},{"ruleId":"375","replacedBy":"410"},{"ruleId":"377","replacedBy":"411"},{"ruleId":"403","severity":1,"message":"404","line":17,"column":29,"nodeType":"405","messageId":"406","endLine":17,"endColumn":31},{"ruleId":"412","severity":1,"message":"413","line":39,"column":9,"nodeType":"381","messageId":"414","endLine":39,"endColumn":14},{"ruleId":"412","severity":1,"message":"415","line":40,"column":9,"nodeType":"381","messageId":"414","endLine":40,"endColumn":15},{"ruleId":"379","severity":1,"message":"416","line":49,"column":17,"nodeType":"381","messageId":"382","endLine":49,"endColumn":23},{"ruleId":"379","severity":1,"message":"417","line":49,"column":25,"nodeType":"381","messageId":"382","endLine":49,"endColumn":34},{"ruleId":"379","severity":1,"message":"418","line":49,"column":36,"nodeType":"381","messageId":"382","endLine":49,"endColumn":41},{"ruleId":"379","severity":1,"message":"419","line":49,"column":43,"nodeType":"381","messageId":"382","endLine":49,"endColumn":49},{"ruleId":"379","severity":1,"message":"420","line":49,"column":51,"nodeType":"381","messageId":"382","endLine":49,"endColumn":67},{"ruleId":"403","severity":1,"message":"404","line":63,"column":21,"nodeType":"405","messageId":"406","endLine":63,"endColumn":23},{"ruleId":"379","severity":1,"message":"421","line":15,"column":10,"nodeType":"381","messageId":"382","endLine":15,"endColumn":31},{"ruleId":"398","severity":1,"message":"422","line":54,"column":6,"nodeType":"423","endLine":54,"endColumn":8,"suggestions":"424"},{"ruleId":"379","severity":1,"message":"425","line":1,"column":17,"nodeType":"381","messageId":"382","endLine":1,"endColumn":26},{"ruleId":"379","severity":1,"message":"426","line":11,"column":10,"nodeType":"381","messageId":"382","endLine":11,"endColumn":20},{"ruleId":"379","severity":1,"message":"427","line":11,"column":22,"nodeType":"381","messageId":"382","endLine":11,"endColumn":35},{"ruleId":"428","severity":1,"message":"429","line":34,"column":65,"nodeType":"430","messageId":"431","endLine":34,"endColumn":67},{"ruleId":"375","replacedBy":"432"},{"ruleId":"377","replacedBy":"433"},{"ruleId":"379","severity":1,"message":"425","line":1,"column":17,"nodeType":"381","messageId":"382","endLine":1,"endColumn":26},{"ruleId":"379","severity":1,"message":"434","line":1,"column":28,"nodeType":"381","messageId":"382","endLine":1,"endColumn":36},{"ruleId":"379","severity":1,"message":"435","line":4,"column":10,"nodeType":"381","messageId":"382","endLine":4,"endColumn":16},{"ruleId":"379","severity":1,"message":"436","line":13,"column":9,"nodeType":"381","messageId":"382","endLine":13,"endColumn":16},{"ruleId":"375","replacedBy":"437"},{"ruleId":"377","replacedBy":"438"},{"ruleId":"379","severity":1,"message":"439","line":7,"column":10,"nodeType":"381","messageId":"382","endLine":7,"endColumn":18},{"ruleId":"379","severity":1,"message":"440","line":8,"column":22,"nodeType":"381","messageId":"382","endLine":8,"endColumn":28},{"ruleId":"379","severity":1,"message":"441","line":10,"column":7,"nodeType":"381","messageId":"382","endLine":10,"endColumn":17},{"ruleId":"398","severity":1,"message":"442","line":47,"column":6,"nodeType":"423","endLine":47,"endColumn":8,"suggestions":"443"},{"ruleId":"379","severity":1,"message":"444","line":2,"column":23,"nodeType":"381","messageId":"382","endLine":2,"endColumn":34},{"ruleId":"379","severity":1,"message":"385","line":3,"column":10,"nodeType":"381","messageId":"382","endLine":3,"endColumn":22},{"ruleId":"379","severity":1,"message":"386","line":3,"column":24,"nodeType":"381","messageId":"382","endLine":3,"endColumn":35},{"ruleId":"379","severity":1,"message":"435","line":4,"column":10,"nodeType":"381","messageId":"382","endLine":4,"endColumn":16},{"ruleId":"379","severity":1,"message":"445","line":5,"column":10,"nodeType":"381","messageId":"382","endLine":5,"endColumn":15},{"ruleId":"379","severity":1,"message":"446","line":8,"column":9,"nodeType":"381","messageId":"382","endLine":8,"endColumn":20},{"ruleId":"379","severity":1,"message":"440","line":8,"column":22,"nodeType":"381","messageId":"382","endLine":8,"endColumn":28},{"ruleId":"379","severity":1,"message":"447","line":10,"column":5,"nodeType":"381","messageId":"382","endLine":10,"endColumn":7},{"ruleId":"379","severity":1,"message":"448","line":19,"column":10,"nodeType":"381","messageId":"382","endLine":19,"endColumn":17},{"ruleId":"379","severity":1,"message":"449","line":19,"column":19,"nodeType":"381","messageId":"382","endLine":19,"endColumn":30},{"ruleId":"379","severity":1,"message":"450","line":20,"column":10,"nodeType":"381","messageId":"382","endLine":20,"endColumn":16},{"ruleId":"379","severity":1,"message":"451","line":20,"column":18,"nodeType":"381","messageId":"382","endLine":20,"endColumn":26},{"ruleId":"379","severity":1,"message":"401","line":21,"column":7,"nodeType":"381","messageId":"382","endLine":21,"endColumn":15},{"ruleId":"379","severity":1,"message":"452","line":22,"column":7,"nodeType":"381","messageId":"382","endLine":22,"endColumn":12},{"ruleId":"379","severity":1,"message":"453","line":2,"column":8,"nodeType":"381","messageId":"382","endLine":2,"endColumn":17},{"ruleId":"379","severity":1,"message":"454","line":3,"column":8,"nodeType":"381","messageId":"382","endLine":3,"endColumn":17},{"ruleId":"403","severity":1,"message":"404","line":10,"column":34,"nodeType":"405","messageId":"406","endLine":10,"endColumn":36},{"ruleId":"398","severity":1,"message":"455","line":45,"column":8,"nodeType":"423","endLine":45,"endColumn":10,"suggestions":"456"},{"ruleId":"379","severity":1,"message":"444","line":2,"column":23,"nodeType":"381","messageId":"382","endLine":2,"endColumn":34},{"ruleId":"379","severity":1,"message":"385","line":3,"column":10,"nodeType":"381","messageId":"382","endLine":3,"endColumn":22},{"ruleId":"379","severity":1,"message":"386","line":3,"column":24,"nodeType":"381","messageId":"382","endLine":3,"endColumn":35},{"ruleId":"379","severity":1,"message":"435","line":4,"column":10,"nodeType":"381","messageId":"382","endLine":4,"endColumn":16},{"ruleId":"379","severity":1,"message":"445","line":5,"column":10,"nodeType":"381","messageId":"382","endLine":5,"endColumn":15},{"ruleId":"379","severity":1,"message":"446","line":8,"column":9,"nodeType":"381","messageId":"382","endLine":8,"endColumn":20},{"ruleId":"379","severity":1,"message":"440","line":8,"column":22,"nodeType":"381","messageId":"382","endLine":8,"endColumn":28},{"ruleId":"379","severity":1,"message":"447","line":10,"column":5,"nodeType":"381","messageId":"382","endLine":10,"endColumn":7},{"ruleId":"379","severity":1,"message":"448","line":19,"column":10,"nodeType":"381","messageId":"382","endLine":19,"endColumn":17},{"ruleId":"379","severity":1,"message":"449","line":19,"column":19,"nodeType":"381","messageId":"382","endLine":19,"endColumn":30},{"ruleId":"379","severity":1,"message":"450","line":20,"column":10,"nodeType":"381","messageId":"382","endLine":20,"endColumn":16},{"ruleId":"379","severity":1,"message":"451","line":20,"column":18,"nodeType":"381","messageId":"382","endLine":20,"endColumn":26},{"ruleId":"379","severity":1,"message":"401","line":21,"column":7,"nodeType":"381","messageId":"382","endLine":21,"endColumn":15},{"ruleId":"379","severity":1,"message":"452","line":22,"column":7,"nodeType":"381","messageId":"382","endLine":22,"endColumn":12},{"ruleId":"375","replacedBy":"457"},{"ruleId":"377","replacedBy":"458"},{"ruleId":"379","severity":1,"message":"383","line":2,"column":8,"nodeType":"381","messageId":"382","endLine":2,"endColumn":13},{"ruleId":"379","severity":1,"message":"445","line":4,"column":10,"nodeType":"381","messageId":"382","endLine":4,"endColumn":15},{"ruleId":"379","severity":1,"message":"444","line":6,"column":23,"nodeType":"381","messageId":"382","endLine":6,"endColumn":34},{"ruleId":"379","severity":1,"message":"446","line":7,"column":9,"nodeType":"381","messageId":"382","endLine":7,"endColumn":20},{"ruleId":"398","severity":1,"message":"459","line":22,"column":6,"nodeType":"423","endLine":22,"endColumn":8,"suggestions":"460"},{"ruleId":"375","replacedBy":"461"},{"ruleId":"377","replacedBy":"462"},{"ruleId":"379","severity":1,"message":"386","line":1,"column":24,"nodeType":"381","messageId":"382","endLine":1,"endColumn":35},{"ruleId":"379","severity":1,"message":"463","line":5,"column":7,"nodeType":"381","messageId":"382","endLine":5,"endColumn":12},{"ruleId":"379","severity":1,"message":"464","line":6,"column":7,"nodeType":"381","messageId":"382","endLine":6,"endColumn":11},{"ruleId":"375","replacedBy":"465"},{"ruleId":"377","replacedBy":"466"},{"ruleId":"428","severity":1,"message":"467","line":23,"column":41,"nodeType":"430","messageId":"468","endLine":23,"endColumn":43},{"ruleId":"379","severity":1,"message":"407","line":2,"column":37,"nodeType":"381","messageId":"382","endLine":2,"endColumn":42},{"ruleId":"379","severity":1,"message":"469","line":8,"column":13,"nodeType":"381","messageId":"382","endLine":8,"endColumn":18},{"ruleId":"379","severity":1,"message":"470","line":11,"column":7,"nodeType":"381","messageId":"382","endLine":11,"endColumn":18},{"ruleId":"379","severity":1,"message":"471","line":13,"column":7,"nodeType":"381","messageId":"382","endLine":13,"endColumn":29},{"ruleId":"379","severity":1,"message":"472","line":22,"column":10,"nodeType":"381","messageId":"382","endLine":22,"endColumn":17},{"ruleId":"398","severity":1,"message":"473","line":26,"column":6,"nodeType":"423","endLine":26,"endColumn":8,"suggestions":"474"},{"ruleId":"379","severity":1,"message":"475","line":56,"column":9,"nodeType":"381","messageId":"382","endLine":56,"endColumn":22},{"ruleId":"379","severity":1,"message":"476","line":58,"column":9,"nodeType":"381","messageId":"382","endLine":58,"endColumn":20},{"ruleId":"379","severity":1,"message":"477","line":2,"column":8,"nodeType":"381","messageId":"382","endLine":2,"endColumn":18},{"ruleId":"379","severity":1,"message":"478","line":3,"column":8,"nodeType":"381","messageId":"382","endLine":3,"endColumn":18},{"ruleId":"379","severity":1,"message":"383","line":8,"column":8,"nodeType":"381","messageId":"382","endLine":8,"endColumn":13},{"ruleId":"379","severity":1,"message":"445","line":9,"column":10,"nodeType":"381","messageId":"382","endLine":9,"endColumn":15},{"ruleId":"403","severity":1,"message":"404","line":34,"column":27,"nodeType":"405","messageId":"406","endLine":34,"endColumn":29},{"ruleId":"403","severity":1,"message":"404","line":35,"column":28,"nodeType":"405","messageId":"406","endLine":35,"endColumn":30},{"ruleId":"403","severity":1,"message":"404","line":36,"column":27,"nodeType":"405","messageId":"406","endLine":36,"endColumn":29},{"ruleId":"403","severity":1,"message":"404","line":38,"column":31,"nodeType":"405","messageId":"406","endLine":38,"endColumn":33},{"ruleId":"403","severity":1,"message":"404","line":38,"column":55,"nodeType":"405","messageId":"406","endLine":38,"endColumn":57},{"ruleId":"403","severity":1,"message":"404","line":43,"column":32,"nodeType":"405","messageId":"406","endLine":43,"endColumn":34},{"ruleId":"403","severity":1,"message":"404","line":43,"column":57,"nodeType":"405","messageId":"406","endLine":43,"endColumn":59},{"ruleId":"403","severity":1,"message":"404","line":48,"column":31,"nodeType":"405","messageId":"406","endLine":48,"endColumn":33},{"ruleId":"403","severity":1,"message":"404","line":72,"column":19,"nodeType":"405","messageId":"406","endLine":72,"endColumn":21},{"ruleId":"403","severity":1,"message":"404","line":81,"column":18,"nodeType":"405","messageId":"406","endLine":81,"endColumn":20},{"ruleId":"403","severity":1,"message":"404","line":81,"column":38,"nodeType":"405","messageId":"406","endLine":81,"endColumn":40},{"ruleId":"403","severity":1,"message":"404","line":82,"column":18,"nodeType":"405","messageId":"406","endLine":82,"endColumn":20},{"ruleId":"403","severity":1,"message":"404","line":82,"column":38,"nodeType":"405","messageId":"406","endLine":82,"endColumn":40},{"ruleId":"403","severity":1,"message":"404","line":87,"column":19,"nodeType":"405","messageId":"406","endLine":87,"endColumn":21},{"ruleId":"403","severity":1,"message":"404","line":88,"column":21,"nodeType":"405","messageId":"406","endLine":88,"endColumn":23},{"ruleId":"403","severity":1,"message":"404","line":113,"column":18,"nodeType":"405","messageId":"406","endLine":113,"endColumn":20},{"ruleId":"403","severity":1,"message":"404","line":113,"column":38,"nodeType":"405","messageId":"406","endLine":113,"endColumn":40},{"ruleId":"403","severity":1,"message":"404","line":114,"column":18,"nodeType":"405","messageId":"406","endLine":114,"endColumn":20},{"ruleId":"403","severity":1,"message":"404","line":114,"column":38,"nodeType":"405","messageId":"406","endLine":114,"endColumn":40},{"ruleId":"403","severity":1,"message":"404","line":118,"column":19,"nodeType":"405","messageId":"406","endLine":118,"endColumn":21},{"ruleId":"379","severity":1,"message":"435","line":4,"column":17,"nodeType":"381","messageId":"382","endLine":4,"endColumn":23},{"ruleId":"379","severity":1,"message":"479","line":5,"column":10,"nodeType":"381","messageId":"382","endLine":5,"endColumn":22},{"ruleId":"379","severity":1,"message":"480","line":6,"column":8,"nodeType":"381","messageId":"382","endLine":6,"endColumn":19},{"ruleId":"379","severity":1,"message":"481","line":12,"column":9,"nodeType":"381","messageId":"382","endLine":12,"endColumn":14},{"ruleId":"379","severity":1,"message":"482","line":15,"column":10,"nodeType":"381","messageId":"382","endLine":15,"endColumn":17},{"ruleId":"379","severity":1,"message":"483","line":15,"column":19,"nodeType":"381","messageId":"382","endLine":15,"endColumn":29},{"ruleId":"379","severity":1,"message":"484","line":18,"column":9,"nodeType":"381","messageId":"382","endLine":18,"endColumn":18},{"ruleId":"379","severity":1,"message":"383","line":2,"column":8,"nodeType":"381","messageId":"382","endLine":2,"endColumn":13},{"ruleId":"379","severity":1,"message":"444","line":6,"column":23,"nodeType":"381","messageId":"382","endLine":6,"endColumn":34},{"ruleId":"379","severity":1,"message":"446","line":7,"column":9,"nodeType":"381","messageId":"382","endLine":7,"endColumn":20},{"ruleId":"379","severity":1,"message":"440","line":7,"column":22,"nodeType":"381","messageId":"382","endLine":7,"endColumn":28},{"ruleId":"398","severity":1,"message":"459","line":22,"column":6,"nodeType":"423","endLine":22,"endColumn":8,"suggestions":"485"},{"ruleId":"379","severity":1,"message":"486","line":4,"column":8,"nodeType":"381","messageId":"382","endLine":4,"endColumn":20},{"ruleId":"379","severity":1,"message":"436","line":15,"column":7,"nodeType":"381","messageId":"382","endLine":15,"endColumn":14},{"ruleId":"403","severity":1,"message":"404","line":12,"column":21,"nodeType":"405","messageId":"406","endLine":12,"endColumn":23},{"ruleId":"403","severity":1,"message":"404","line":15,"column":21,"nodeType":"405","messageId":"406","endLine":15,"endColumn":23},{"ruleId":"403","severity":1,"message":"404","line":22,"column":21,"nodeType":"405","messageId":"406","endLine":22,"endColumn":23},{"ruleId":"403","severity":1,"message":"404","line":25,"column":21,"nodeType":"405","messageId":"406","endLine":25,"endColumn":23},{"ruleId":"403","severity":1,"message":"404","line":32,"column":21,"nodeType":"405","messageId":"406","endLine":32,"endColumn":23},{"ruleId":"379","severity":1,"message":"425","line":1,"column":17,"nodeType":"381","messageId":"382","endLine":1,"endColumn":26},{"ruleId":"379","severity":1,"message":"435","line":2,"column":10,"nodeType":"381","messageId":"382","endLine":2,"endColumn":16},{"ruleId":"379","severity":1,"message":"487","line":2,"column":18,"nodeType":"381","messageId":"382","endLine":2,"endColumn":23},{"ruleId":"379","severity":1,"message":"488","line":7,"column":8,"nodeType":"381","messageId":"382","endLine":7,"endColumn":15},{"ruleId":"379","severity":1,"message":"489","line":8,"column":10,"nodeType":"381","messageId":"382","endLine":8,"endColumn":25},{"ruleId":"379","severity":1,"message":"472","line":24,"column":10,"nodeType":"381","messageId":"382","endLine":24,"endColumn":17},{"ruleId":"379","severity":1,"message":"490","line":24,"column":19,"nodeType":"381","messageId":"382","endLine":24,"endColumn":29},{"ruleId":"379","severity":1,"message":"436","line":27,"column":9,"nodeType":"381","messageId":"382","endLine":27,"endColumn":16},{"ruleId":"403","severity":1,"message":"404","line":32,"column":16,"nodeType":"405","messageId":"406","endLine":32,"endColumn":18},{"ruleId":"379","severity":1,"message":"491","line":1,"column":27,"nodeType":"381","messageId":"382","endLine":1,"endColumn":34},{"ruleId":"375","replacedBy":"492"},{"ruleId":"377","replacedBy":"493"},{"ruleId":"403","severity":1,"message":"404","line":11,"column":22,"nodeType":"405","messageId":"406","endLine":11,"endColumn":24},{"ruleId":"403","severity":1,"message":"404","line":14,"column":22,"nodeType":"405","messageId":"406","endLine":14,"endColumn":24},{"ruleId":"403","severity":1,"message":"404","line":22,"column":22,"nodeType":"405","messageId":"406","endLine":22,"endColumn":24},{"ruleId":"403","severity":1,"message":"404","line":25,"column":22,"nodeType":"405","messageId":"406","endLine":25,"endColumn":24},{"ruleId":"403","severity":1,"message":"404","line":33,"column":22,"nodeType":"405","messageId":"406","endLine":33,"endColumn":24},{"ruleId":"379","severity":1,"message":"494","line":1,"column":15,"nodeType":"381","messageId":"382","endLine":1,"endColumn":19},{"ruleId":"375","replacedBy":"495"},{"ruleId":"377","replacedBy":"496"},{"ruleId":"375","replacedBy":"497"},{"ruleId":"377","replacedBy":"498"},{"ruleId":"379","severity":1,"message":"425","line":1,"column":17,"nodeType":"381","messageId":"382","endLine":1,"endColumn":26},{"ruleId":"379","severity":1,"message":"487","line":4,"column":10,"nodeType":"381","messageId":"382","endLine":4,"endColumn":15},{"ruleId":"379","severity":1,"message":"426","line":9,"column":10,"nodeType":"381","messageId":"382","endLine":9,"endColumn":20},{"ruleId":"379","severity":1,"message":"427","line":9,"column":22,"nodeType":"381","messageId":"382","endLine":9,"endColumn":35},{"ruleId":"428","severity":1,"message":"429","line":38,"column":65,"nodeType":"430","messageId":"431","endLine":38,"endColumn":67},{"ruleId":"379","severity":1,"message":"444","line":3,"column":23,"nodeType":"381","messageId":"382","endLine":3,"endColumn":34},{"ruleId":"379","severity":1,"message":"386","line":4,"column":24,"nodeType":"381","messageId":"382","endLine":4,"endColumn":35},{"ruleId":"379","severity":1,"message":"436","line":12,"column":7,"nodeType":"381","messageId":"382","endLine":12,"endColumn":14},{"ruleId":"379","severity":1,"message":"499","line":2,"column":10,"nodeType":"381","messageId":"382","endLine":2,"endColumn":27},{"ruleId":"379","severity":1,"message":"487","line":3,"column":18,"nodeType":"381","messageId":"382","endLine":3,"endColumn":23},{"ruleId":"398","severity":1,"message":"473","line":17,"column":6,"nodeType":"423","endLine":17,"endColumn":8,"suggestions":"500"},{"ruleId":"379","severity":1,"message":"386","line":1,"column":24,"nodeType":"381","messageId":"382","endLine":1,"endColumn":35},{"ruleId":"501","severity":1,"message":"502","line":108,"column":42,"nodeType":"405","messageId":"503","endLine":108,"endColumn":43},{"ruleId":"501","severity":1,"message":"502","line":108,"column":68,"nodeType":"405","messageId":"503","endLine":108,"endColumn":69},{"ruleId":"398","severity":1,"message":"504","line":15,"column":6,"nodeType":"423","endLine":15,"endColumn":8,"suggestions":"505"},"no-native-reassign",["506"],"no-negated-in-lhs",["507"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Timer' is defined but never used.","'BreakActions' is defined but never used.","'PastActions' is defined but never used.","'s1' is defined but never used.","'s2' is defined but never used.","'s3' is defined but never used.","'s4' is defined but never used.","'s5' is defined but never used.","'s1y' is defined but never used.","'s2y' is defined but never used.","'s3y' is defined but never used.","'s4y' is defined but never used.","'s5y' is defined but never used.","'mounted' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'mounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'dispatch' is assigned a value but never used.","'getImageButton' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Views' is defined but never used.",["506"],["507"],["506"],["507"],"no-redeclare","'words' is already defined.","redeclared","'colors' is already defined.","'errors' is assigned a value but never used.","'successes' is assigned a value but never used.","'begin' is assigned a value but never used.","'finish' is assigned a value but never used.","'timeLimitReached' is assigned a value but never used.","'setOnboardingComplete' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'props.onboarding.awChecked', 'props.onboarding.complete', and 'props.onboarding.user'. Either include them or remove the dependency array.","ArrayExpression",["508"],"'useEffect' is defined but never used.","'breakArray' is assigned a value but never used.","'setBreakArray' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["506"],["507"],"'useState' is defined but never used.","'Button' is defined but never used.","'history' is assigned a value but never used.",["506"],["507"],"'Provider' is defined but never used.","'remote' is assigned a value but never used.","'HomeScreen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["509"],"'useSelector' is defined but never used.","'store' is defined but never used.","'ipcRenderer' is assigned a value but never used.","'s1' is assigned a value but never used.","'complte' is assigned a value but never used.","'setComplete' is assigned a value but never used.","'scores' is assigned a value but never used.","'setScore' is assigned a value but never used.","'order' is assigned a value but never used.","'ScriptTag' is defined but never used.","'InnerHTML' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["510"],["506"],["507"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.stage.scores'. Either include them or remove the dependency array.",["511"],["506"],["507"],"'isDev' is assigned a value but never used.","'path' is assigned a value but never used.",["506"],["507"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'dates' is defined but never used.","'DnDCalendar' is assigned a value but never used.","'ColoredDateCellWrapper' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["512"],"'onEventResize' is assigned a value but never used.","'onEventDrop' is assigned a value but never used.","'FruitNinja' is defined but never used.","'StroopTest' is defined but never used.","'PlusOutlined' is defined but never used.","'ApiCalendar' is defined but never used.","'shell' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'showModal' is assigned a value but never used.",["513"],"'BreakManager' is defined but never used.","'Input' is defined but never used.","'Loading' is defined but never used.","'AWClientService' is defined but never used.","'setLoading' is assigned a value but never used.","'Reducer' is defined but never used.",["506"],["507"],"'fork' is defined but never used.",["506"],["507"],["506"],["507"],"'OnboardingActions' is defined but never used.",["514"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'awcheck'. Either include it or remove the dependency array.",["515"],"no-global-assign","no-unsafe-negation",{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"522","fix":"526"},{"desc":"524","fix":"527"},{"desc":"528","fix":"529"},"Update the dependencies array to be: [history, props.onboarding.awChecked, props.onboarding.complete, props.onboarding.user]",{"range":"530","text":"531"},"Update the dependencies array to be: [dispatch, history]",{"range":"532","text":"533"},"Update the dependencies array to be: [props]",{"range":"534","text":"535"},"Update the dependencies array to be: [dispatch, props.stage.scores]",{"range":"536","text":"537"},"Update the dependencies array to be: [getData]",{"range":"538","text":"539"},{"range":"540","text":"537"},{"range":"541","text":"539"},"Update the dependencies array to be: [awcheck]",{"range":"542","text":"543"},[1750,1752],"[history, props.onboarding.awChecked, props.onboarding.complete, props.onboarding.user]",[2110,2112],"[dispatch, history]",[1365,1367],"[props]",[697,699],"[dispatch, props.stage.scores]",[831,833],"[getData]",[701,703],[573,575],[528,530],"[awcheck]"]