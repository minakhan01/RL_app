[{"C:\\code\\mit\\RL_app\\src\\index.js":"1","C:\\code\\mit\\RL_app\\src\\screens\\BreakScreen\\index.jsx":"2","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\onboarding.reducer.js":"3","C:\\code\\mit\\RL_app\\src\\redux\\actions\\onboarding.action.js":"4","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\RegularBreaks.jsx":"5","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx":"6","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\FinishingUp.jsx":"7","C:\\code\\mit\\RL_app\\src\\breakmanager\\EventHandler\\index.js":"8","C:\\code\\mit\\RL_app\\src\\redux\\types\\onboarding.types.js":"9","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\index.js":"10","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\past.reducer.js":"11","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\interval.break.js":"12","C:\\code\\mit\\RL_app\\src\\breakmanager\\DatabaseUpdater\\index.js":"13","C:\\code\\mit\\RL_app\\src\\breakmanager\\index.js":"14","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\index.jsx":"15","C:\\code\\mit\\RL_app\\src\\screens\\HomeScreen\\index.jsx":"16","C:\\code\\mit\\RL_app\\src\\App.js":"17","C:\\code\\mit\\RL_app\\src\\screens\\CalendarScreen\\index.jsx":"18","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\break.reducer.js":"19","C:\\code\\mit\\RL_app\\src\\components\\Toolbar.js":"20","C:\\code\\mit\\RL_app\\src\\screens\\StroopScreen\\index.jsx":"21","C:\\code\\mit\\RL_app\\src\\reportWebVitals.js":"22","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\scheduled.break.js":"23","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\test.reducer.js":"24","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\index.js":"25","C:\\code\\mit\\RL_app\\src\\redux\\sagas\\index.js":"26","C:\\code\\mit\\RL_app\\src\\redux\\types\\break.types.js":"27","C:\\code\\mit\\RL_app\\src\\redux\\actions\\break.action.js":"28","C:\\code\\mit\\RL_app\\src\\screens\\PopupScreen\\index.jsx":"29","C:\\code\\mit\\RL_app\\src\\components\\Timer.js":"30","C:\\code\\mit\\RL_app\\src\\redux\\store.js":"31","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\AdHocBreaks.jsx":"32","C:\\code\\mit\\RL_app\\src\\components\\Loading.js":"33","C:\\code\\mit\\RL_app\\src\\redux\\configureStore.js":"34","C:\\code\\mit\\RL_app\\src\\navigation\\index.js":"35","C:\\code\\mit\\RL_app\\src\\redux\\index.js":"36","C:\\code\\mit\\RL_app\\src\\utils\\dates.js":"37","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\activityrule.break.js":"38","C:\\code\\mit\\RL_app\\src\\screens\\FruitNinjaScreen\\index.jsx":"39","C:\\code\\mit\\RL_app\\src\\services\\awclient.service.js":"40","C:\\code\\mit\\RL_app\\src\\redux\\types\\past.types.js":"41","C:\\code\\mit\\RL_app\\src\\redux\\actions\\past.action.js":"42"},{"size":517,"mtime":1609573919413,"results":"43","hashOfConfig":"44"},{"size":5923,"mtime":1631788969180,"results":"45","hashOfConfig":"44"},{"size":2112,"mtime":1631617958743,"results":"46","hashOfConfig":"44"},{"size":1196,"mtime":1631104698358,"results":"47","hashOfConfig":"44"},{"size":2681,"mtime":1610597903304,"results":"48","hashOfConfig":"44"},{"size":3660,"mtime":1631698133061,"results":"49","hashOfConfig":"44"},{"size":3257,"mtime":1631790490174,"results":"50","hashOfConfig":"44"},{"size":2271,"mtime":1631795461874,"results":"51","hashOfConfig":"44"},{"size":556,"mtime":1631104562064,"results":"52","hashOfConfig":"44"},{"size":349,"mtime":1631869628490,"results":"53","hashOfConfig":"44"},{"size":2844,"mtime":1631885552066,"results":"54","hashOfConfig":"44"},{"size":1404,"mtime":1631800392602,"results":"55","hashOfConfig":"44"},{"size":996,"mtime":1631870194072,"results":"56","hashOfConfig":"44"},{"size":447,"mtime":1631790294745,"results":"57","hashOfConfig":"44"},{"size":3036,"mtime":1631877711792,"results":"58","hashOfConfig":"44"},{"size":3121,"mtime":1631790498788,"results":"59","hashOfConfig":"44"},{"size":737,"mtime":1631869605507,"results":"60","hashOfConfig":"44"},{"size":4354,"mtime":1631688611353,"results":"61","hashOfConfig":"44"},{"size":1897,"mtime":1631796179967,"results":"62","hashOfConfig":"44"},{"size":2189,"mtime":1631688000075,"results":"63","hashOfConfig":"44"},{"size":1645,"mtime":1631795538297,"results":"64","hashOfConfig":"44"},{"size":375,"mtime":1609573919416,"results":"65","hashOfConfig":"44"},{"size":2242,"mtime":1631800402844,"results":"66","hashOfConfig":"44"},{"size":306,"mtime":1609847029298,"results":"67","hashOfConfig":"44"},{"size":461,"mtime":1610597903300,"results":"68","hashOfConfig":"44"},{"size":226,"mtime":1609573919415,"results":"69","hashOfConfig":"44"},{"size":419,"mtime":1631795523383,"results":"70","hashOfConfig":"44"},{"size":986,"mtime":1631795528431,"results":"71","hashOfConfig":"44"},{"size":1673,"mtime":1631709296789,"results":"72","hashOfConfig":"44"},{"size":1081,"mtime":1610597903297,"results":"73","hashOfConfig":"44"},{"size":587,"mtime":1610600783281,"results":"74","hashOfConfig":"44"},{"size":12047,"mtime":1610783290468,"results":"75","hashOfConfig":"44"},{"size":339,"mtime":1609573919412,"results":"76","hashOfConfig":"44"},{"size":790,"mtime":1609573919414,"results":"77","hashOfConfig":"44"},{"size":1407,"mtime":1631794727782,"results":"78","hashOfConfig":"44"},{"size":669,"mtime":1631884843872,"results":"79","hashOfConfig":"44"},{"size":3854,"mtime":1610597903306,"results":"80","hashOfConfig":"44"},{"size":5016,"mtime":1631886165322,"results":"81","hashOfConfig":"44"},{"size":1889,"mtime":1631877667339,"results":"82","hashOfConfig":"44"},{"size":6925,"mtime":1610710070542,"results":"83","hashOfConfig":"44"},{"size":260,"mtime":1631884870102,"results":"84","hashOfConfig":"44"},{"size":545,"mtime":1631884891661,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"138jipk",{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"118"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\code\\mit\\RL_app\\src\\index.js",[],["190","191"],"C:\\code\\mit\\RL_app\\src\\screens\\BreakScreen\\index.jsx",["192","193","194","195","196"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.css\";\r\nimport { store } from \"../../redux\";\r\n\r\nimport Timer from \"../../components/Timer\";\r\nimport ToolBar from \"../../components/Toolbar\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\n\r\nimport s1 from \"../../assets/s1.png\";\r\nimport s2 from \"../../assets/s2.png\";\r\nimport s3 from \"../../assets/s3.png\";\r\nimport s4 from \"../../assets/s4.png\";\r\nimport s5 from \"../../assets/s5.png\";\r\n\r\nimport s1y from \"../../assets/s1y.png\";\r\nimport s2y from \"../../assets/s2y.png\";\r\nimport s3y from \"../../assets/s3y.png\";\r\nimport s4y from \"../../assets/s4y.png\";\r\nimport s5y from \"../../assets/s5y.png\";\r\n\r\nvar electron = window.require(\"electron\");\r\nvar curWindow = electron.remote.getCurrentWindow();\r\n\r\nconst BreakScreen = () => {\r\n  let mounted = true;\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  });\r\n\r\n  const breakState = useSelector((state) => state.break.breakState);\r\n  const dispatch = useDispatch();\r\n\r\n  const [rate, setRate] = useState(0);\r\n  const [feedbackText, setFeedbackText] = useState(\"\");\r\n  const [minimized, setMinimized] = useState(false);\r\n\r\n  const breakDuration = store.getState().break.breakDuration;\r\n  const breakStartTime = store.getState().break.breakStartTime;\r\n\r\n  if (breakState === \"break\" && !minimized) {\r\n    curWindow.maximize();\r\n    curWindow.setMovable(false);\r\n    curWindow.setSize(\r\n      electron.remote.screen.getPrimaryDisplay().size.width,\r\n      Math.ceil(electron.remote.screen.getPrimaryDisplay().size.height)\r\n    );\r\n    curWindow.setPosition(0, 0);\r\n\r\n    return (\r\n      <div className=\"break-div\">\r\n        <ToolBar\r\n          type=\"minimize\"\r\n          minimize={setMinimized}\r\n          totaltime={breakDuration}\r\n          startTime={breakStartTime}\r\n        />\r\n        <div className=\"circle\"></div>\r\n        <div className=\"break-text\">\r\n          {store.getState().onboarding.breakMessage}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (breakState === \"break\" && minimized) {\r\n    curWindow.unmaximize();\r\n    curWindow.setMovable(true);\r\n    curWindow.setSize(\r\n      electron.remote.screen.getPrimaryDisplay().size.width,\r\n      Math.ceil(electron.remote.screen.getPrimaryDisplay().size.height / 8)\r\n    );\r\n    curWindow.setPosition(\r\n      0,\r\n      (7 / 8) * electron.remote.screen.getPrimaryDisplay().size.height\r\n    );\r\n\r\n    return (\r\n      <div className=\"break-div\">\r\n        <ToolBar\r\n          type=\"maximize\"\r\n          minimize={setMinimized}\r\n          totaltime={breakDuration}\r\n          startTime={breakStartTime}\r\n          message={\"Be kind!\"}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    curWindow.maximize();\r\n    curWindow.setAlwaysOnTop(false);\r\n\r\n    return (\r\n      <div className=\"break-div\">\r\n        <button\r\n          className=\"close-break\"\r\n          onClick={() => {\r\n            let dat = {\r\n              ...store.getState().break,\r\n              breakEndTime: new Date().toISOString(),\r\n              rating: rate,\r\n              notes: feedbackText,\r\n            };\r\n            delete dat.breakState;\r\n            delete dat.windowChanged;\r\n            dispatch(PastActions.saveBreakData(dat));\r\n            dispatch(BreakActions.closeBreakScreen());\r\n          }}\r\n        >\r\n          <div>&#10006;</div>\r\n          <div className=\"save-button-text\">Save feedback and close</div>\r\n        </button>\r\n        <div className=\"break-completed-text\">\r\n          Break completed successfully!\r\n        </div>\r\n\r\n        <div className=\"feedback-text-box\">\r\n          <div className=\"floating-label\">Notes</div>\r\n          <textarea\r\n            onChange={(event) => {\r\n              if (mounted) setFeedbackText(event.target.value);\r\n            }}\r\n            data-role=\"none\"\r\n            rows=\"3\"\r\n            cols=\"80\"\r\n            placeholder=\"Type in here any notes or reflections about the break that you would like to save\"\r\n            className=\"feedback-text\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"feedback-request-text\">How was this break?</div>\r\n\r\n        <div className=\"break-feedback\">\r\n          {getImageButton(s5, s5y, 1, rate, setRate, mounted)}\r\n          {getImageButton(s4, s4y, 2, rate, setRate, mounted)}\r\n          {getImageButton(s3, s3y, 3, rate, setRate, mounted)}\r\n          {getImageButton(s2, s2y, 4, rate, setRate, mounted)}\r\n          {getImageButton(s1, s1y, 5, rate, setRate, mounted)}\r\n        </div>\r\n\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{ width: \"7vw\", textAlign: \"left\", paddingLeft: \"0vw\" }}>\r\n            Not Helpful\r\n          </div>\r\n          <div style={{ width: \"28vw\" }} />\r\n          <div\r\n            style={{ width: \"4vw\", textAlign: \"right\", paddingRight: \"1vw\" }}\r\n          >\r\n            Helpful\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nlet getImageButton = (name, name2, points, rate, setRate, mounted) => {\r\n  if (points == rate)\r\n    return (\r\n      <div className=\"responsive\">\r\n        <div className=\"gallery\">\r\n          <button\r\n            className=\"feedback-button\"\r\n            onClick={() => {\r\n              if (mounted) setRate(points);\r\n            }}\r\n          >\r\n            <img src={name2} alt=\"Mountains\" width=\"85\" height=\"85\"></img>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div className=\"responsive\">\r\n        <div className=\"gallery\">\r\n          <button\r\n            className=\"feedback-button\"\r\n            onClick={() => {\r\n              if (mounted) setRate(points);\r\n            }}\r\n          >\r\n            <img src={name} alt=\"Mountains\" width=\"85\" height=\"85\"></img>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default BreakScreen;\r\n",["197","198"],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\onboarding.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\onboarding.action.js",[],["199","200"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\RegularBreaks.jsx",["201","202"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Input } from \"antd\";\r\n\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst RegularBreakScreen = (props) => {\r\n  return (\r\n    <div className=\"step-container\">\r\n      <h1>Regular Breaks</h1>\r\n      <div style={{ marginTop: \"3%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          How long would you like your breaks to be?\r\n        </p>\r\n        <div\r\n          style={{\r\n            marginTop: \"1%\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Input\r\n            size=\"large\"\r\n            style={{ width: \"10%\", borderRadius: 5, verticalAlign: \"center\" }}\r\n            placeholder=\"Length\"\r\n            type=\"number\"\r\n            value={props.onboarding.regularBreakLength}\r\n            onChange={(e) => {\r\n              if (e.target.value > 0)\r\n                props.setRegularBreakLength(e.target.value);\r\n            }}\r\n          />\r\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\r\n            minutes\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: \"3%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          After how long would you like to take regular breaks?\r\n        </p>\r\n        <div\r\n          style={{\r\n            marginTop: \"1%\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Input\r\n            size=\"large\"\r\n            style={{ width: \"10%\", borderRadius: 5, verticalAlign: \"center\" }}\r\n            placeholder=\"Interval\"\r\n            type=\"number\"\r\n            value={props.onboarding.regularBreakInterval}\r\n            onChange={(e) => {\r\n              if (e.target.value > 0 && e.target.value < 61)\r\n                props.setRegularBreakInterval(e.target.value);\r\n            }}\r\n          />\r\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\r\n            minutes\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setRegularBreakInterval: OnboardingActions.setRegularBreakInterval,\r\n      setRegularBreakLength: OnboardingActions.setRegularBreakLength,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegularBreakScreen);\r\n","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx",["203","204","205","206","207","208","209"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Input, Button, Modal } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport ApiCalendar from \"react-google-calendar-api\";\r\n\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst { shell } = window.require(\"electron\").remote;\r\n\r\nconst PersonalInformationScreen = (props) => {\r\n  const [message, setMessage] = useState(\"Drink Water\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.ipcRenderer.on(\"calendar-success\", (event, data) => {\r\n      console.log(\"data\", data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <Modal\r\n        title=\"Basic Modal\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n      </Modal>\r\n      <h1>Personal Information</h1>\r\n      <Input\r\n        size=\"large\"\r\n        style={{ width: \"30%\", borderRadius: 5, verticalAlign: \"center\" }}\r\n        placeholder=\"First Name\"\r\n        value={props.onboarding.name}\r\n        onChange={(e) => {\r\n          props.setName(e.target.value);\r\n        }}\r\n      />\r\n      <div style={{ marginTop: \"3%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          Would you like any message to show up during the break? (e.g. drink\r\n          water, be kind, etc.)\r\n        </p>\r\n        {/* <p style={{ fontSize: \"15px\", color: \"#696969\", width: \"60%\" }}>\r\n          You can set up to 10 messages, the messages will appear interchangebly\r\n          on different breaks\r\n        </p> */}\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <Input\r\n            size=\"large\"\r\n            style={{\r\n              width: \"30%\",\r\n              borderRadius: 5,\r\n              verticalAlign: \"center\",\r\n            }}\r\n            placeholder=\"Break Message\"\r\n            value={props.onboarding.breakMessage}\r\n            onChange={(e) => {\r\n              props.setBreakMessage(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <div style={{ marginTop: \"3%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          Add a calendar to help us keep track of any meetings/breaks we should\r\n          work around\r\n        </p>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ borderRadius: \"20px\", marginTop: \"1%\" }}\r\n          size=\"large\"\r\n          onClick={() => {\r\n            // ApiCalendar.handleAuthClick();\r\n            // ApiCalendar.onLoad(() => {\r\n            //   ApiCalendar.listenSign(signUpdate);\r\n            // });\r\n            shell.openExternal(\"http://localhost:3006/\");\r\n          }}\r\n        >\r\n          <PlusOutlined style={{ color: \"white\" }} />\r\n          ADD CALENDAR\r\n        </Button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setName: OnboardingActions.setName,\r\n      setBreakMessage: OnboardingActions.setBreakMessage,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PersonalInformationScreen);\r\n",["210","211"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\FinishingUp.jsx",["212","213","214","215"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Input } from \"antd\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst FinishingUpScreen = (props) => {\r\n  const [breakArray, setBreakArray] = useState([\"https://www.youtube.com\"]);\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <h1>You're Almost Done!</h1>\r\n      <div style={{ marginTop: \"3%\", width: \"70%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          Thanks for your input! Based on your preferences, we have created a\r\n          schedule as shown below\r\n          <br />\r\n          <br />\r\n        </p>\r\n        <div style={{ width: \"100%\" }}>\r\n          <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n            Scheduled Breaks :{\" \"}\r\n          </p>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              width: \"50%\",\r\n            }}\r\n          >\r\n            <p style={{ flex: 1 }}>Day</p>\r\n            <p style={{ flex: 1 }}>Start Time</p>\r\n            <p style={{ flex: 1 }}>End Time</p>\r\n          </div>\r\n          <div>\r\n            {props.onboarding.scheduledBreaks.map((item, index) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                    width: \"50%\",\r\n                    marginTop: index !== 0 ? \"1%\" : \"0%\",\r\n                  }}\r\n                >\r\n                  <p style={{ flex: 1 }}>{item.day}</p>\r\n                  <p style={{ flex: 1 }}>\r\n                    {new Date(item.start).getHours() +\r\n                      \":\" +\r\n                      new Date(item.start).getMinutes()}\r\n                  </p>\r\n                  <p style={{ flex: 1 }}>\r\n                    {new Date(item.end).getHours() +\r\n                      \":\" +\r\n                      new Date(item.end).getMinutes()}\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div style={{ width: \"100%\" }}>\r\n          <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n            Regular Breaks :{\" \"}\r\n          </p>\r\n          <p>\r\n            How often you want to take regular breaks :{\" \"}\r\n            {props.onboarding.regularBreakInterval} minute(s)\r\n          </p>\r\n          <p>\r\n            How long you want these breaks to be :{\" \"}\r\n            {props.onboarding.regularBreakLength} minute(s)\r\n          </p>\r\n        </div>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"5%\" }}>\r\n          If you want to make any changes, click on the back button and change\r\n          your settings. You can always come back and make edits to your\r\n          schedule and overrides in 'My Settings'.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FinishingUpScreen);\r\n","C:\\code\\mit\\RL_app\\src\\breakmanager\\EventHandler\\index.js",["216","217","218"],"C:\\code\\mit\\RL_app\\src\\redux\\types\\onboarding.types.js",[],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\index.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\past.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\interval.break.js",[],["219","220"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\DatabaseUpdater\\index.js",["221"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\index.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\index.jsx",["222","223"],"C:\\code\\mit\\RL_app\\src\\screens\\HomeScreen\\index.jsx",["224","225","226"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Button } from \"antd\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst HomeScreen = (props) => {\r\n  const [breakArray, setBreakArray] = useState([\"https://www.youtube.com\"]);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <div style={{ marginTop: \"3%\", width: \"70%\", margin: \"5%\" }}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n            Scheduled Breaks :{\" \"}\r\n          </p>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              width: \"50%\",\r\n            }}\r\n          >\r\n            <p style={{ flex: 1 }}>Day</p>\r\n            <p style={{ flex: 1 }}>Start Time</p>\r\n            <p style={{ flex: 1 }}>End Time</p>\r\n          </div>\r\n          <div>\r\n            {props.onboarding.scheduledBreaks.map((item, index) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                    width: \"50%\",\r\n                    marginTop: index !== 0 ? \"1%\" : \"0%\",\r\n                  }}\r\n                >\r\n                  <p style={{ flex: 1 }}>{item.day}</p>\r\n                  <p style={{ flex: 1 }}>\r\n                    {new Date(item.start).getHours() +\r\n                      \":\" +\r\n                      new Date(item.start).getMinutes()}\r\n                  </p>\r\n                  <p style={{ flex: 1 }}>\r\n                    {new Date(item.end).getHours() +\r\n                      \":\" +\r\n                      new Date(item.end).getMinutes()}\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div style={{ width: \"100%\" }}>\r\n          <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n            Regular Breaks :{\" \"}\r\n          </p>\r\n          <p>\r\n            How often you want to take regular breaks :{\" \"}\r\n            {props.onboarding.regularBreakInterval} minute(s)\r\n          </p>\r\n          <p>\r\n            How long you want these breaks to be :{\" \"}\r\n            {props.onboarding.regularBreakLength} minute(s)\r\n          </p>\r\n        </div>\r\n        <Button>My Settings</Button>\r\n        <Button\r\n          onClick={() => {\r\n            props.resetInfo();\r\n            history.push(\"/\");\r\n          }}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding, break: state.break };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ resetInfo: OnboardingActions.reset }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);\r\n","C:\\code\\mit\\RL_app\\src\\App.js",["227","228"],"import React, { useEffect } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter, useHistory } from \"react-router-dom\";\r\nimport BreakManager from \"./breakmanager\";\r\n\r\nimport { store } from \"./redux\";\r\nimport Main from \"./navigation\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nfunction App() {\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (store.getState().onboarding.complete) {\r\n      // BreakManager(history);\r\n    }\r\n  }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <Main />\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["229","230"],"C:\\code\\mit\\RL_app\\src\\screens\\CalendarScreen\\index.jsx",["231"],"import React, { useState } from \"react\";\r\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport * as dates from \"../../utils/dates\";\r\nimport \"./styles.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\nconst ColoredDateCellWrapper = ({ children }) =>\r\n  React.cloneElement(React.Children.only(children), {\r\n    style: {\r\n      backgroundColor: \"lightblue\",\r\n    },\r\n  });\r\n\r\nconst CalendarScreen = (props) => {\r\n  const [events, setEvents] = useState([\r\n    {\r\n      start: moment().toDate(),\r\n      end: moment().add(1, \"days\").toDate(),\r\n      title: \"Test\",\r\n      id: 1,\r\n    },\r\n  ]);\r\n  const [draggedEvent, setDraggedEvent] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const resizeEvent = ({ event, start, end }) => {\r\n    console.log(\"looi\", event);\r\n    const nextEvents = events.map((existingEvent) => {\r\n      return existingEvent.id === event.id\r\n        ? { ...existingEvent, start, end }\r\n        : existingEvent;\r\n    });\r\n\r\n    setEvents(nextEvents);\r\n  };\r\n\r\n  const moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\r\n    let allDay = event.allDay;\r\n\r\n    if (!event.allDay && droppedOnAllDaySlot) {\r\n      allDay = true;\r\n    } else if (event.allDay && !droppedOnAllDaySlot) {\r\n      allDay = false;\r\n    }\r\n\r\n    const nextEvents = events.map((existingEvent) => {\r\n      return existingEvent.id === event.id\r\n        ? { ...existingEvent, start, end, allDay }\r\n        : existingEvent;\r\n    });\r\n\r\n    setEvents(nextEvents);\r\n\r\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\r\n  };\r\n\r\n  const newEvent = ({ slots, start, end }) => {\r\n    setModalVisible(true);\r\n    let idList = events.map((a) => a.id);\r\n    let newId = Math.max(...idList) + 1;\r\n    let hour = {\r\n      id: newId,\r\n      title: \"New Event\",\r\n      allDay: slots.length === 1,\r\n      start: start,\r\n      end: end,\r\n    };\r\n\r\n    setEvents(events.concat([hour]));\r\n  };\r\n\r\n  const onDropFromOutside = ({ start, end, allDay }) => {\r\n    const event = {\r\n      id: draggedEvent.id,\r\n      title: draggedEvent.title,\r\n      start,\r\n      end,\r\n      allDay: allDay,\r\n    };\r\n\r\n    setDraggedEvent(null);\r\n    this.moveEvent({ event, start, end });\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      <Modal\r\n        visible={modalVisible}\r\n        onOk={() => {\r\n          setModalVisible(false);\r\n        }}\r\n        onCancel={() => {\r\n          setModalVisible(false);\r\n        }}\r\n      >\r\n        Hello\r\n      </Modal>\r\n      <Button\r\n        onClick={() => {\r\n          props.resetInfo();\r\n          history.push(\"/\")\r\n        }}\r\n      >\r\n        Reset\r\n      </Button>\r\n      <DnDCalendar\r\n        selectable\r\n        resizable={true}\r\n        events={events}\r\n        views={[\"day\", \"week\", \"month\"]}\r\n        // step={60}\r\n        showMultiDayTimes\r\n        defaultDate={new Date()}\r\n        onSelectSlot={newEvent}\r\n        components={{\r\n          timeSlotWrapper: ColoredDateCellWrapper,\r\n        }}\r\n        localizer={localizer}\r\n        max={dates.add(dates.endOf(new Date(), \"day\"), -1, \"hours\")}\r\n        style={{ height: props.height ? props.height : window.innerHeight }}\r\n        onEventResize={resizeEvent}\r\n        onEventDrop={moveEvent}\r\n        onDropFromOutside={onDropFromOutside}\r\n        handleDragStart={(event) => {\r\n          console.log(event);\r\n          setDraggedEvent(event);\r\n        }}\r\n        dragFromOutsideItem={draggedEvent}\r\n        resizableAccessor={() => false}\r\n        onSelectEvent={() => {\r\n          //add code for editing an existing event here\r\n          setModalVisible(true);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ resetInfo: OnboardingActions.reset }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarScreen);\r\n","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\break.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\components\\Toolbar.js",["232","233","234"],"import \"./styles.css\";\r\nimport { BreakActions, PastActions } from \"../redux/actions\";\r\nimport exitFullscreen from \"../assets/exit-fullscreen.png\";\r\nimport fullscreen from \"../assets/fullscreen.png\";\r\nimport { store } from \"../redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Toolbar(props) {\r\n  let mounted = true;\r\n  useEffect(() => {\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  });\r\n\r\n  const [minsRem, setMinsRem] = useState(Math.ceil(props.totaltime / 60));\r\n  setTimeout(() => {\r\n    setMinsRem(minsRem - 1);\r\n  }, 60000);\r\n  let str;\r\n  if (minsRem != 1) str = minsRem + \" Minutes remaining\";\r\n  else str = minsRem + \" Minute remaining\";\r\n  if (props.type === \"minimize\")\r\n    return (\r\n      <div className=\"toolbar\">\r\n        <div className=\"minutes-remaining\">{str}</div>\r\n        <button\r\n          className=\"minimize-break2\"\r\n          onClick={() => {\r\n            if (mounted) props.minimize(true);\r\n          }}\r\n        >\r\n          <img\r\n            src={exitFullscreen}\r\n            alt=\"Mountains\"\r\n            width=\"70\"\r\n            height=\"70\"\r\n          ></img>\r\n        </button>\r\n        <button\r\n          className=\"close-break2\"\r\n          onClick={() => {\r\n            store.dispatch(BreakActions.endBreak(store.getState().break.breakEndTime));\r\n          }}\r\n        >\r\n          &#10006;\r\n        </button>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div className=\"toolbar2\">\r\n        <div className=\"minutes-remaining2\">{str}</div>\r\n        <div className=\"break-text-min\">{props.message}</div>\r\n        <div>\r\n          <button\r\n            className=\"minimize-break3\"\r\n            onClick={() => {\r\n              if (mounted) props.minimize(false);\r\n            }}\r\n          >\r\n            <img src={fullscreen} alt=\"Mountains\" width=\"70\" height=\"70\"></img>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"close-break3\"\r\n            onClick={() => {\r\n              store.dispatch(BreakActions.endBreak(store.getState().break.breakEndTime));\r\n            }}\r\n          >\r\n            &#10006;\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n",["235","236"],"C:\\code\\mit\\RL_app\\src\\screens\\StroopScreen\\index.jsx",["237","238","239"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport StroopTest from \"../../components/stroop_test\";\r\n\r\nvar s1 = {\r\n  height: \"100vh\",\r\n  width: \"100vw\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n//TO-DO: add style\r\nconst StroopScreen = () => {\r\n  const [complte, setComplete] = useState(false);\r\n  const [scores, setScore] = useState([]);\r\n  let dispatch = useDispatch();\r\n  console.log(\"sc\", scores);\r\n  if (complte) {\r\n    return (\r\n      <div style={{ backgroundColor: \"white\", padding: \"3%\" }}>\r\n        {scores.length < 3 ? (\r\n          <Button\r\n            onClick={() => {\r\n              setComplete(false);\r\n            }}\r\n          >\r\n            Continue\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(BreakActions.startFruit());\r\n            }}\r\n          >\r\n            Next Test\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{ backgroundColor: \"white\", padding: \"3%\" }}>\r\n        <StroopTest\r\n          len={4}\r\n          style={s1}\r\n          onComplete={(score) => {\r\n            //   setStage({ ...stage, stroop: 2, scores: [...stage.scores, score] });\r\n            let tempArray = [...scores];\r\n            tempArray.push(score);\r\n            setScore(tempArray);\r\n            setComplete(true);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default StroopScreen;\r\n",["240","241"],"C:\\code\\mit\\RL_app\\src\\reportWebVitals.js",[],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\scheduled.break.js",["242"],"import { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { store } from \"../../redux\";\r\n\r\n//TO DO: CONNECT WITH ACTUAL USER SETTINGS. Currently not hardcoded anything\r\n\r\n//Checks whether Scheduled break is triggered\r\nexport default function checkScheduledBreak() {\r\n  //Scheduled break if condition goes here\r\n  let weekDays = [\r\n    \"sunday\",\r\n    \"monday\",\r\n    \"tuesday\",\r\n    \"wednesday\",\r\n    \"thursday\",\r\n    \"friday\",\r\n    \"saturday\",\r\n  ];\r\n  let onboardingProps = store.getState().onboarding;\r\n  for (let indBreak of onboardingProps[\"scheduledBreaks\"]) {\r\n    let timeNow = new Date();\r\n    let dayVal = weekDays[timeNow.getDay()];\r\n    if (indBreak.day === dayVal) {\r\n      let startTime = new Date(indBreak.start);\r\n      let endTime = new Date(indBreak.end);\r\n      let currentStart = new Date();\r\n      currentStart.setHours(startTime.getHours(), startTime.getMinutes(), 0, 0);\r\n      let currentEnd = new Date();\r\n      currentEnd.setHours(endTime.getHours(), endTime.getMinutes(), 0, 0);\r\n      if (currentStart <= timeNow && currentEnd >= timeNow) {\r\n        if (\r\n          !(store.getState().break.breakState === \"break\") &&\r\n          !(store.getState().break.breakState === \"break-feedback\") &&\r\n          !(store.getState().break.breakState === \"break-popup\") &&\r\n          !(store.getState().break.breakState === \"break-stroop\") &&\r\n          !(store.getState().break.breakState === \"break-fruit\") &&\r\n          !(store.getState().past.lastScheduledBreak > currentStart)\r\n        ) {\r\n          let timeNowNew = new Date().toISOString();\r\n          let breakData = {\r\n            breakType: \"scheduled\",\r\n            breakDescription: \"NA\",\r\n            breakStartTime: timeNowNew,\r\n            breakDuration: (currentEnd - timeNow) / 1000,\r\n            breakEndTime: currentEnd,\r\n          };\r\n          store.dispatch(BreakActions.startPopup(timeNowNew, breakData));\r\n          setTimeout(() => {\r\n            if (\r\n              store.getState().break.breakState === \"break-popup\" &&\r\n              store.getState().break.popupStartTime === timeNowNew\r\n            ) {\r\n              store.dispatch(BreakActions.startStroop());\r\n            }\r\n          }, 10000);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\test.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\index.js",["243"],"C:\\code\\mit\\RL_app\\src\\redux\\sagas\\index.js",["244"],"C:\\code\\mit\\RL_app\\src\\redux\\types\\break.types.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\break.action.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\PopupScreen\\index.jsx",["245","246","247"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//TO-DO: add style\r\nconst PopupScreen = () => {\r\n  let dispatch = useDispatch();\r\n  let history = useHistory();\r\n  return (\r\n    <div style={{ backgroundColor: \"white\", padding: \"3%\" }}>\r\n      <div\r\n        style={{\r\n          color: \"#7DCAB6\",\r\n          fontSize: \"22px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        It's time to break!\r\n      </div>\r\n      <div style={{ paddingTop: \"3%\", fontSize: \"15px\" }}>\r\n        Should we get started? This break will start automatically if you ignore\r\n        this pop up\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n          marginTop: \"10%\",\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={() =>\r\n            dispatch(\r\n              BreakActions.cancelBreak(store.getState().break.breakEndTime)\r\n            )\r\n          }\r\n          style={{ color: \"#7DCAB6\", borderWidth: 0 }}\r\n        >\r\n          CANCEL\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            // dispatch(BreakActions.startBreak())\r\n            dispatch(BreakActions.startStroop());\r\n            // history.push(\"/stroop\");\r\n          }}\r\n          style={{ color: \"#7DCAB6\", borderWidth: 0 }}\r\n        >\r\n          CONTINUE\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PopupScreen;\r\n",["248","249"],"C:\\code\\mit\\RL_app\\src\\components\\Timer.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\store.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\AdHocBreaks.jsx",["250","251","252","253","254"],"C:\\code\\mit\\RL_app\\src\\components\\Loading.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\configureStore.js",["255"],"C:\\code\\mit\\RL_app\\src\\navigation\\index.js",["256","257","258","259"],"C:\\code\\mit\\RL_app\\src\\redux\\index.js",[],"C:\\code\\mit\\RL_app\\src\\utils\\dates.js",["260","261","262","263","264"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\activityrule.break.js",["265"],"C:\\code\\mit\\RL_app\\src\\screens\\FruitNinjaScreen\\index.jsx",[],"C:\\code\\mit\\RL_app\\src\\services\\awclient.service.js",["266","267"],"C:\\code\\mit\\RL_app\\src\\redux\\types\\past.types.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\past.action.js",[],{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":2,"column":10,"nodeType":"274","messageId":"275","endLine":2,"endColumn":20},{"ruleId":"272","severity":1,"message":"276","line":7,"column":8,"nodeType":"274","messageId":"275","endLine":7,"endColumn":13},{"ruleId":"277","severity":1,"message":"278","line":33,"column":17,"nodeType":"279","endLine":33,"endColumn":22},{"ruleId":"280","severity":1,"message":"281","line":159,"column":3,"nodeType":"282","messageId":"283","endLine":159,"endColumn":15},{"ruleId":"284","severity":1,"message":"285","line":163,"column":14,"nodeType":"286","messageId":"287","endLine":163,"endColumn":16},{"ruleId":"268","replacedBy":"288"},{"ruleId":"270","replacedBy":"289"},{"ruleId":"268","replacedBy":"290"},{"ruleId":"270","replacedBy":"291"},{"ruleId":"272","severity":1,"message":"292","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":26},{"ruleId":"272","severity":1,"message":"293","line":1,"column":28,"nodeType":"274","messageId":"275","endLine":1,"endColumn":36},{"ruleId":"272","severity":1,"message":"294","line":4,"column":17,"nodeType":"274","messageId":"275","endLine":4,"endColumn":23},{"ruleId":"272","severity":1,"message":"295","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":22},{"ruleId":"272","severity":1,"message":"296","line":6,"column":8,"nodeType":"274","messageId":"275","endLine":6,"endColumn":19},{"ruleId":"272","severity":1,"message":"297","line":12,"column":9,"nodeType":"274","messageId":"275","endLine":12,"endColumn":14},{"ruleId":"272","severity":1,"message":"298","line":15,"column":10,"nodeType":"274","messageId":"275","endLine":15,"endColumn":17},{"ruleId":"272","severity":1,"message":"299","line":15,"column":19,"nodeType":"274","messageId":"275","endLine":15,"endColumn":29},{"ruleId":"272","severity":1,"message":"300","line":18,"column":9,"nodeType":"274","messageId":"275","endLine":18,"endColumn":18},{"ruleId":"268","replacedBy":"301"},{"ruleId":"270","replacedBy":"302"},{"ruleId":"272","severity":1,"message":"292","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":26},{"ruleId":"272","severity":1,"message":"303","line":4,"column":10,"nodeType":"274","messageId":"275","endLine":4,"endColumn":15},{"ruleId":"272","severity":1,"message":"304","line":9,"column":10,"nodeType":"274","messageId":"275","endLine":9,"endColumn":20},{"ruleId":"272","severity":1,"message":"305","line":9,"column":22,"nodeType":"274","messageId":"275","endLine":9,"endColumn":35},{"ruleId":"272","severity":1,"message":"306","line":1,"column":24,"nodeType":"274","messageId":"275","endLine":1,"endColumn":35},{"ruleId":"272","severity":1,"message":"307","line":5,"column":7,"nodeType":"274","messageId":"275","endLine":5,"endColumn":12},{"ruleId":"272","severity":1,"message":"308","line":6,"column":7,"nodeType":"274","messageId":"275","endLine":6,"endColumn":11},{"ruleId":"268","replacedBy":"309"},{"ruleId":"270","replacedBy":"310"},{"ruleId":"272","severity":1,"message":"311","line":1,"column":10,"nodeType":"274","messageId":"275","endLine":1,"endColumn":22},{"ruleId":"272","severity":1,"message":"312","line":14,"column":10,"nodeType":"274","messageId":"275","endLine":14,"endColumn":31},{"ruleId":"277","severity":1,"message":"313","line":29,"column":6,"nodeType":"314","endLine":29,"endColumn":8,"suggestions":"315"},{"ruleId":"272","severity":1,"message":"292","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":26},{"ruleId":"272","severity":1,"message":"304","line":11,"column":10,"nodeType":"274","messageId":"275","endLine":11,"endColumn":20},{"ruleId":"272","severity":1,"message":"305","line":11,"column":22,"nodeType":"274","messageId":"275","endLine":11,"endColumn":35},{"ruleId":"272","severity":1,"message":"316","line":4,"column":8,"nodeType":"274","messageId":"275","endLine":4,"endColumn":20},{"ruleId":"272","severity":1,"message":"317","line":14,"column":7,"nodeType":"274","messageId":"275","endLine":14,"endColumn":14},{"ruleId":"268","replacedBy":"318"},{"ruleId":"270","replacedBy":"319"},{"ruleId":"272","severity":1,"message":"320","line":2,"column":37,"nodeType":"274","messageId":"275","endLine":2,"endColumn":42},{"ruleId":"272","severity":1,"message":"306","line":2,"column":24,"nodeType":"274","messageId":"275","endLine":2,"endColumn":35},{"ruleId":"277","severity":1,"message":"278","line":12,"column":17,"nodeType":"279","endLine":12,"endColumn":22},{"ruleId":"284","severity":1,"message":"321","line":21,"column":15,"nodeType":"286","messageId":"287","endLine":21,"endColumn":17},{"ruleId":"268","replacedBy":"322"},{"ruleId":"270","replacedBy":"323"},{"ruleId":"272","severity":1,"message":"324","line":2,"column":23,"nodeType":"274","messageId":"275","endLine":2,"endColumn":34},{"ruleId":"272","severity":1,"message":"306","line":3,"column":24,"nodeType":"274","messageId":"275","endLine":3,"endColumn":35},{"ruleId":"272","severity":1,"message":"325","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":15},{"ruleId":"268","replacedBy":"326"},{"ruleId":"270","replacedBy":"327"},{"ruleId":"272","severity":1,"message":"306","line":1,"column":24,"nodeType":"274","messageId":"275","endLine":1,"endColumn":35},{"ruleId":"272","severity":1,"message":"328","line":1,"column":27,"nodeType":"274","messageId":"275","endLine":1,"endColumn":34},{"ruleId":"272","severity":1,"message":"329","line":1,"column":15,"nodeType":"274","messageId":"275","endLine":1,"endColumn":19},{"ruleId":"272","severity":1,"message":"324","line":3,"column":23,"nodeType":"274","messageId":"275","endLine":3,"endColumn":34},{"ruleId":"272","severity":1,"message":"306","line":4,"column":24,"nodeType":"274","messageId":"275","endLine":4,"endColumn":35},{"ruleId":"272","severity":1,"message":"317","line":12,"column":7,"nodeType":"274","messageId":"275","endLine":12,"endColumn":14},{"ruleId":"268","replacedBy":"330"},{"ruleId":"270","replacedBy":"331"},{"ruleId":"272","severity":1,"message":"292","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":26},{"ruleId":"272","severity":1,"message":"332","line":4,"column":48,"nodeType":"274","messageId":"275","endLine":4,"endColumn":55},{"ruleId":"272","severity":1,"message":"333","line":15,"column":10,"nodeType":"274","messageId":"275","endLine":15,"endColumn":15},{"ruleId":"272","severity":1,"message":"334","line":15,"column":17,"nodeType":"274","messageId":"275","endLine":15,"endColumn":25},{"ruleId":"272","severity":1,"message":"300","line":19,"column":9,"nodeType":"274","messageId":"275","endLine":19,"endColumn":18},{"ruleId":"335","severity":1,"message":"336","line":5,"column":1,"nodeType":"337","endLine":29,"endColumn":3},{"ruleId":"272","severity":1,"message":"292","line":1,"column":33,"nodeType":"274","messageId":"275","endLine":1,"endColumn":42},{"ruleId":"272","severity":1,"message":"316","line":4,"column":8,"nodeType":"274","messageId":"275","endLine":4,"endColumn":20},{"ruleId":"272","severity":1,"message":"325","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":15},{"ruleId":"272","severity":1,"message":"317","line":15,"column":7,"nodeType":"274","messageId":"275","endLine":15,"endColumn":14},{"ruleId":"338","severity":1,"message":"339","line":136,"column":3,"nodeType":"340","messageId":"341","endLine":147,"endColumn":4},{"ruleId":"342","severity":1,"message":"343","line":139,"column":5,"nodeType":"344","messageId":"345","endLine":140,"endColumn":16},{"ruleId":"342","severity":1,"message":"343","line":141,"column":5,"nodeType":"344","messageId":"345","endLine":142,"endColumn":16},{"ruleId":"342","severity":1,"message":"343","line":143,"column":5,"nodeType":"344","messageId":"345","endLine":144,"endColumn":16},{"ruleId":"342","severity":1,"message":"343","line":145,"column":5,"nodeType":"344","messageId":"345","endLine":146,"endColumn":18},{"ruleId":"346","severity":1,"message":"347","line":22,"column":39,"nodeType":"348","messageId":"349","endLine":22,"endColumn":41},{"ruleId":"350","severity":1,"message":"351","line":108,"column":42,"nodeType":"286","messageId":"352","endLine":108,"endColumn":43},{"ruleId":"350","severity":1,"message":"351","line":108,"column":68,"nodeType":"286","messageId":"352","endLine":108,"endColumn":69},"no-native-reassign",["353"],"no-negated-in-lhs",["354"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Timer' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'mounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["353"],["354"],["353"],["354"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'PlusOutlined' is defined but never used.","'ApiCalendar' is defined but never used.","'shell' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'showModal' is assigned a value but never used.",["353"],["354"],"'Input' is defined but never used.","'breakArray' is assigned a value but never used.","'setBreakArray' is assigned a value but never used.","'PastActions' is defined but never used.","'isDev' is assigned a value but never used.","'path' is assigned a value but never used.",["353"],["354"],"'BreakActions' is defined but never used.","'setOnboardingComplete' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'props.break.breakState', and 'props.onboarding.complete'. Either include them or remove the dependency array.","ArrayExpression",["355"],"'BreakManager' is defined but never used.","'history' is assigned a value but never used.",["353"],["354"],"'Views' is defined but never used.","Expected '!==' and instead saw '!='.",["353"],["354"],"'useSelector' is defined but never used.","'store' is defined but never used.",["353"],["354"],"'Reducer' is defined but never used.","'fork' is defined but never used.",["353"],["354"],"'message' is defined but never used.","'sites' is assigned a value but never used.","'setSites' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"356","fix":"357"},"Update the dependencies array to be: [history, props.break.breakState, props.onboarding.complete]",{"range":"358","text":"359"},[1043,1045],"[history, props.break.breakState, props.onboarding.complete]"]