[{"C:\\code\\mit\\RL_app\\src\\index.js":"1","C:\\code\\mit\\RL_app\\src\\screens\\BreakScreen\\index.jsx":"2","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\onboarding.reducer.js":"3","C:\\code\\mit\\RL_app\\src\\redux\\actions\\onboarding.action.js":"4","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\RegularBreaks.jsx":"5","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx":"6","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\FinishingUp.jsx":"7","C:\\code\\mit\\RL_app\\src\\breakmanager\\EventHandler\\index.js":"8","C:\\code\\mit\\RL_app\\src\\redux\\types\\onboarding.types.js":"9","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\index.js":"10","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\past.reducer.js":"11","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\interval.break.js":"12","C:\\code\\mit\\RL_app\\src\\breakmanager\\DatabaseUpdater\\index.js":"13","C:\\code\\mit\\RL_app\\src\\breakmanager\\index.js":"14","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\index.jsx":"15","C:\\code\\mit\\RL_app\\src\\screens\\HomeScreen\\index.jsx":"16","C:\\code\\mit\\RL_app\\src\\App.js":"17","C:\\code\\mit\\RL_app\\src\\screens\\CalendarScreen\\index.jsx":"18","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\break.reducer.js":"19","C:\\code\\mit\\RL_app\\src\\components\\Toolbar.js":"20","C:\\code\\mit\\RL_app\\src\\screens\\StroopScreen\\index.jsx":"21","C:\\code\\mit\\RL_app\\src\\reportWebVitals.js":"22","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\scheduled.break.js":"23","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\test.reducer.js":"24","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\index.js":"25","C:\\code\\mit\\RL_app\\src\\redux\\sagas\\index.js":"26","C:\\code\\mit\\RL_app\\src\\redux\\types\\break.types.js":"27","C:\\code\\mit\\RL_app\\src\\redux\\actions\\break.action.js":"28","C:\\code\\mit\\RL_app\\src\\screens\\PopupScreen\\index.jsx":"29","C:\\code\\mit\\RL_app\\src\\components\\Timer.js":"30","C:\\code\\mit\\RL_app\\src\\redux\\store.js":"31","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\AdHocBreaks.jsx":"32","C:\\code\\mit\\RL_app\\src\\components\\Loading.js":"33","C:\\code\\mit\\RL_app\\src\\redux\\configureStore.js":"34","C:\\code\\mit\\RL_app\\src\\navigation\\index.js":"35","C:\\code\\mit\\RL_app\\src\\redux\\index.js":"36","C:\\code\\mit\\RL_app\\src\\utils\\dates.js":"37","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\activityrule.break.js":"38","C:\\code\\mit\\RL_app\\src\\screens\\FruitNinjaScreen\\index.jsx":"39","C:\\code\\mit\\RL_app\\src\\services\\awclient.service.js":"40","C:\\code\\mit\\RL_app\\src\\redux\\types\\past.types.js":"41","C:\\code\\mit\\RL_app\\src\\redux\\actions\\past.action.js":"42","C:\\code\\mit\\RL_app\\src\\redux\\actions\\index.js":"43","C:\\code\\mit\\RL_app\\src\\components\\fruit_ninja\\index.jsx":"44","C:\\code\\mit\\RL_app\\src\\services\\index.js":"45","C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja\\index.jsx":"46","C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info.jsx":"47","C:\\code\\mit\\RL_app\\src\\components\\Games\\index.jsx":"48","C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test\\index.jsx":"49","C:\\code\\mit\\RL_app\\src\\screens\\LoginScreen\\index.jsx":"50","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\ScheduledBreaks.jsx":"51","C:\\code\\mit\\RL_app\\src\\screens\\AWCheckerScreen\\index.jsx":"52"},{"size":517,"mtime":1609573919413,"results":"53","hashOfConfig":"54"},{"size":5923,"mtime":1631788969180,"results":"55","hashOfConfig":"54"},{"size":2390,"mtime":1632489961566,"results":"56","hashOfConfig":"54"},{"size":1392,"mtime":1632489982001,"results":"57","hashOfConfig":"54"},{"size":2681,"mtime":1610597903304,"results":"58","hashOfConfig":"54"},{"size":3660,"mtime":1631698133061,"results":"59","hashOfConfig":"54"},{"size":3265,"mtime":1632490124336,"results":"60","hashOfConfig":"54"},{"size":2318,"mtime":1632483769581,"results":"61","hashOfConfig":"54"},{"size":640,"mtime":1632489917224,"results":"62","hashOfConfig":"54"},{"size":352,"mtime":1632488933434,"results":"63","hashOfConfig":"54"},{"size":2844,"mtime":1631885552066,"results":"64","hashOfConfig":"54"},{"size":1404,"mtime":1631800392602,"results":"65","hashOfConfig":"54"},{"size":996,"mtime":1631870194072,"results":"66","hashOfConfig":"54"},{"size":447,"mtime":1631790294745,"results":"67","hashOfConfig":"54"},{"size":3173,"mtime":1632490075645,"results":"68","hashOfConfig":"54"},{"size":3137,"mtime":1632490231997,"results":"69","hashOfConfig":"54"},{"size":656,"mtime":1632483733427,"results":"70","hashOfConfig":"54"},{"size":4354,"mtime":1631688611353,"results":"71","hashOfConfig":"54"},{"size":2455,"mtime":1632486614666,"results":"72","hashOfConfig":"54"},{"size":2189,"mtime":1631688000075,"results":"73","hashOfConfig":"54"},{"size":956,"mtime":1632484019107,"results":"74","hashOfConfig":"54"},{"size":375,"mtime":1609573919416,"results":"75","hashOfConfig":"54"},{"size":2244,"mtime":1632484660542,"results":"76","hashOfConfig":"54"},{"size":306,"mtime":1609847029298,"results":"77","hashOfConfig":"54"},{"size":461,"mtime":1610597903300,"results":"78","hashOfConfig":"54"},{"size":226,"mtime":1609573919415,"results":"79","hashOfConfig":"54"},{"size":463,"mtime":1632486234976,"results":"80","hashOfConfig":"54"},{"size":1103,"mtime":1632486256992,"results":"81","hashOfConfig":"54"},{"size":1673,"mtime":1631709296789,"results":"82","hashOfConfig":"54"},{"size":1081,"mtime":1610597903297,"results":"83","hashOfConfig":"54"},{"size":587,"mtime":1610600783281,"results":"84","hashOfConfig":"54"},{"size":12047,"mtime":1610783290468,"results":"85","hashOfConfig":"54"},{"size":339,"mtime":1609573919412,"results":"86","hashOfConfig":"54"},{"size":790,"mtime":1609573919414,"results":"87","hashOfConfig":"54"},{"size":2627,"mtime":1632489227464,"results":"88","hashOfConfig":"54"},{"size":669,"mtime":1631884843872,"results":"89","hashOfConfig":"54"},{"size":3854,"mtime":1610597903306,"results":"90","hashOfConfig":"54"},{"size":5040,"mtime":1632486360244,"results":"91","hashOfConfig":"54"},{"size":1703,"mtime":1632385729688,"results":"92","hashOfConfig":"54"},{"size":6925,"mtime":1610710070542,"results":"93","hashOfConfig":"54"},{"size":260,"mtime":1631884870102,"results":"94","hashOfConfig":"54"},{"size":545,"mtime":1631884891661,"results":"95","hashOfConfig":"54"},{"size":217,"mtime":1610597903298,"results":"96","hashOfConfig":"54"},{"size":2475,"mtime":1626085976390,"results":"97","hashOfConfig":"54"},{"size":129,"mtime":1609674823101,"results":"98","hashOfConfig":"54"},{"size":2475,"mtime":1626085976390,"results":"99","hashOfConfig":"54"},{"size":1739,"mtime":1632483784234,"results":"100","hashOfConfig":"54"},{"size":3427,"mtime":1632481311006,"results":"101","hashOfConfig":"54"},{"size":3332,"mtime":1626085976391,"results":"102","hashOfConfig":"54"},{"size":2040,"mtime":1632489638432,"results":"103","hashOfConfig":"54"},{"size":4360,"mtime":1631704993601,"results":"104","hashOfConfig":"54"},{"size":2103,"mtime":1632490008466,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"138jipk",{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"108"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"119"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"135"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"151"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"119"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"151"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\code\\mit\\RL_app\\src\\index.js",[],["241","242"],"C:\\code\\mit\\RL_app\\src\\screens\\BreakScreen\\index.jsx",["243","244","245","246","247"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.css\";\r\nimport { store } from \"../../redux\";\r\n\r\nimport Timer from \"../../components/Timer\";\r\nimport ToolBar from \"../../components/Toolbar\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\n\r\nimport s1 from \"../../assets/s1.png\";\r\nimport s2 from \"../../assets/s2.png\";\r\nimport s3 from \"../../assets/s3.png\";\r\nimport s4 from \"../../assets/s4.png\";\r\nimport s5 from \"../../assets/s5.png\";\r\n\r\nimport s1y from \"../../assets/s1y.png\";\r\nimport s2y from \"../../assets/s2y.png\";\r\nimport s3y from \"../../assets/s3y.png\";\r\nimport s4y from \"../../assets/s4y.png\";\r\nimport s5y from \"../../assets/s5y.png\";\r\n\r\nvar electron = window.require(\"electron\");\r\nvar curWindow = electron.remote.getCurrentWindow();\r\n\r\nconst BreakScreen = () => {\r\n  let mounted = true;\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  });\r\n\r\n  const breakState = useSelector((state) => state.break.breakState);\r\n  const dispatch = useDispatch();\r\n\r\n  const [rate, setRate] = useState(0);\r\n  const [feedbackText, setFeedbackText] = useState(\"\");\r\n  const [minimized, setMinimized] = useState(false);\r\n\r\n  const breakDuration = store.getState().break.breakDuration;\r\n  const breakStartTime = store.getState().break.breakStartTime;\r\n\r\n  if (breakState === \"break\" && !minimized) {\r\n    curWindow.maximize();\r\n    curWindow.setMovable(false);\r\n    curWindow.setSize(\r\n      electron.remote.screen.getPrimaryDisplay().size.width,\r\n      Math.ceil(electron.remote.screen.getPrimaryDisplay().size.height)\r\n    );\r\n    curWindow.setPosition(0, 0);\r\n\r\n    return (\r\n      <div className=\"break-div\">\r\n        <ToolBar\r\n          type=\"minimize\"\r\n          minimize={setMinimized}\r\n          totaltime={breakDuration}\r\n          startTime={breakStartTime}\r\n        />\r\n        <div className=\"circle\"></div>\r\n        <div className=\"break-text\">\r\n          {store.getState().onboarding.breakMessage}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (breakState === \"break\" && minimized) {\r\n    curWindow.unmaximize();\r\n    curWindow.setMovable(true);\r\n    curWindow.setSize(\r\n      electron.remote.screen.getPrimaryDisplay().size.width,\r\n      Math.ceil(electron.remote.screen.getPrimaryDisplay().size.height / 8)\r\n    );\r\n    curWindow.setPosition(\r\n      0,\r\n      (7 / 8) * electron.remote.screen.getPrimaryDisplay().size.height\r\n    );\r\n\r\n    return (\r\n      <div className=\"break-div\">\r\n        <ToolBar\r\n          type=\"maximize\"\r\n          minimize={setMinimized}\r\n          totaltime={breakDuration}\r\n          startTime={breakStartTime}\r\n          message={\"Be kind!\"}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    curWindow.maximize();\r\n    curWindow.setAlwaysOnTop(false);\r\n\r\n    return (\r\n      <div className=\"break-div\">\r\n        <button\r\n          className=\"close-break\"\r\n          onClick={() => {\r\n            let dat = {\r\n              ...store.getState().break,\r\n              breakEndTime: new Date().toISOString(),\r\n              rating: rate,\r\n              notes: feedbackText,\r\n            };\r\n            delete dat.breakState;\r\n            delete dat.windowChanged;\r\n            dispatch(PastActions.saveBreakData(dat));\r\n            dispatch(BreakActions.closeBreakScreen());\r\n          }}\r\n        >\r\n          <div>&#10006;</div>\r\n          <div className=\"save-button-text\">Save feedback and close</div>\r\n        </button>\r\n        <div className=\"break-completed-text\">\r\n          Break completed successfully!\r\n        </div>\r\n\r\n        <div className=\"feedback-text-box\">\r\n          <div className=\"floating-label\">Notes</div>\r\n          <textarea\r\n            onChange={(event) => {\r\n              if (mounted) setFeedbackText(event.target.value);\r\n            }}\r\n            data-role=\"none\"\r\n            rows=\"3\"\r\n            cols=\"80\"\r\n            placeholder=\"Type in here any notes or reflections about the break that you would like to save\"\r\n            className=\"feedback-text\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"feedback-request-text\">How was this break?</div>\r\n\r\n        <div className=\"break-feedback\">\r\n          {getImageButton(s5, s5y, 1, rate, setRate, mounted)}\r\n          {getImageButton(s4, s4y, 2, rate, setRate, mounted)}\r\n          {getImageButton(s3, s3y, 3, rate, setRate, mounted)}\r\n          {getImageButton(s2, s2y, 4, rate, setRate, mounted)}\r\n          {getImageButton(s1, s1y, 5, rate, setRate, mounted)}\r\n        </div>\r\n\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{ width: \"7vw\", textAlign: \"left\", paddingLeft: \"0vw\" }}>\r\n            Not Helpful\r\n          </div>\r\n          <div style={{ width: \"28vw\" }} />\r\n          <div\r\n            style={{ width: \"4vw\", textAlign: \"right\", paddingRight: \"1vw\" }}\r\n          >\r\n            Helpful\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nlet getImageButton = (name, name2, points, rate, setRate, mounted) => {\r\n  if (points == rate)\r\n    return (\r\n      <div className=\"responsive\">\r\n        <div className=\"gallery\">\r\n          <button\r\n            className=\"feedback-button\"\r\n            onClick={() => {\r\n              if (mounted) setRate(points);\r\n            }}\r\n          >\r\n            <img src={name2} alt=\"Mountains\" width=\"85\" height=\"85\"></img>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div className=\"responsive\">\r\n        <div className=\"gallery\">\r\n          <button\r\n            className=\"feedback-button\"\r\n            onClick={() => {\r\n              if (mounted) setRate(points);\r\n            }}\r\n          >\r\n            <img src={name} alt=\"Mountains\" width=\"85\" height=\"85\"></img>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default BreakScreen;\r\n","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\onboarding.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\onboarding.action.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\RegularBreaks.jsx",["248","249"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Input } from \"antd\";\r\n\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst RegularBreakScreen = (props) => {\r\n  return (\r\n    <div className=\"step-container\">\r\n      <h1>Regular Breaks</h1>\r\n      <div style={{ marginTop: \"3%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          How long would you like your breaks to be?\r\n        </p>\r\n        <div\r\n          style={{\r\n            marginTop: \"1%\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Input\r\n            size=\"large\"\r\n            style={{ width: \"10%\", borderRadius: 5, verticalAlign: \"center\" }}\r\n            placeholder=\"Length\"\r\n            type=\"number\"\r\n            value={props.onboarding.regularBreakLength}\r\n            onChange={(e) => {\r\n              if (e.target.value > 0)\r\n                props.setRegularBreakLength(e.target.value);\r\n            }}\r\n          />\r\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\r\n            minutes\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: \"3%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          After how long would you like to take regular breaks?\r\n        </p>\r\n        <div\r\n          style={{\r\n            marginTop: \"1%\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Input\r\n            size=\"large\"\r\n            style={{ width: \"10%\", borderRadius: 5, verticalAlign: \"center\" }}\r\n            placeholder=\"Interval\"\r\n            type=\"number\"\r\n            value={props.onboarding.regularBreakInterval}\r\n            onChange={(e) => {\r\n              if (e.target.value > 0 && e.target.value < 61)\r\n                props.setRegularBreakInterval(e.target.value);\r\n            }}\r\n          />\r\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\r\n            minutes\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setRegularBreakInterval: OnboardingActions.setRegularBreakInterval,\r\n      setRegularBreakLength: OnboardingActions.setRegularBreakLength,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegularBreakScreen);\r\n",["250","251"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx",["252","253","254","255","256","257","258"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Input, Button, Modal } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport ApiCalendar from \"react-google-calendar-api\";\r\n\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst { shell } = window.require(\"electron\").remote;\r\n\r\nconst PersonalInformationScreen = (props) => {\r\n  const [message, setMessage] = useState(\"Drink Water\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.ipcRenderer.on(\"calendar-success\", (event, data) => {\r\n      console.log(\"data\", data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <Modal\r\n        title=\"Basic Modal\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n      </Modal>\r\n      <h1>Personal Information</h1>\r\n      <Input\r\n        size=\"large\"\r\n        style={{ width: \"30%\", borderRadius: 5, verticalAlign: \"center\" }}\r\n        placeholder=\"First Name\"\r\n        value={props.onboarding.name}\r\n        onChange={(e) => {\r\n          props.setName(e.target.value);\r\n        }}\r\n      />\r\n      <div style={{ marginTop: \"3%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          Would you like any message to show up during the break? (e.g. drink\r\n          water, be kind, etc.)\r\n        </p>\r\n        {/* <p style={{ fontSize: \"15px\", color: \"#696969\", width: \"60%\" }}>\r\n          You can set up to 10 messages, the messages will appear interchangebly\r\n          on different breaks\r\n        </p> */}\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <Input\r\n            size=\"large\"\r\n            style={{\r\n              width: \"30%\",\r\n              borderRadius: 5,\r\n              verticalAlign: \"center\",\r\n            }}\r\n            placeholder=\"Break Message\"\r\n            value={props.onboarding.breakMessage}\r\n            onChange={(e) => {\r\n              props.setBreakMessage(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <div style={{ marginTop: \"3%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          Add a calendar to help us keep track of any meetings/breaks we should\r\n          work around\r\n        </p>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ borderRadius: \"20px\", marginTop: \"1%\" }}\r\n          size=\"large\"\r\n          onClick={() => {\r\n            // ApiCalendar.handleAuthClick();\r\n            // ApiCalendar.onLoad(() => {\r\n            //   ApiCalendar.listenSign(signUpdate);\r\n            // });\r\n            shell.openExternal(\"http://localhost:3006/\");\r\n          }}\r\n        >\r\n          <PlusOutlined style={{ color: \"white\" }} />\r\n          ADD CALENDAR\r\n        </Button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setName: OnboardingActions.setName,\r\n      setBreakMessage: OnboardingActions.setBreakMessage,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PersonalInformationScreen);\r\n","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\FinishingUp.jsx",["259","260","261","262"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\EventHandler\\index.js",["263","264","265"],"C:\\code\\mit\\RL_app\\src\\redux\\types\\onboarding.types.js",[],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\index.js",["266"],"import checkActivityRuleBreak from './activityrule.break'\r\nimport checkIntervalBreak from './interval.break'\r\nimport checkScheduledBreak from './scheduled.break'\r\n\r\n//Checks if any of the breaks need to be triggered\r\nexport default function checkBreak(history) {\r\n  checkActivityRuleBreak()\r\n  checkIntervalBreak(history)\r\n  // checkScheduledBreak()\r\n}",["267","268"],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\past.reducer.js",[],["269","270"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\interval.break.js",[],"C:\\code\\mit\\RL_app\\src\\breakmanager\\DatabaseUpdater\\index.js",["271"],"import { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { store } from \"../../redux\";\r\nimport { AWClientService } from \"../../services\"\r\nlet client = new AWClientService()\r\n\r\n//TO-DO: Modify functions according to which data to backup. Currenly backing up active windows\r\n\r\n//updates the local database with data from activity watch, and adds a minute of runnning time to THIS APP for use for interval-break\r\nexport default function updateDatabase()\r\n{\r\n  client.getActiveWindowsSinceBeginning().then((dat) => {\r\n    let back = {\r\n      type: \"active-windows\",\r\n      data: dat,\r\n    }\r\n    store.dispatch(PastActions.backupAWData(back))\r\n  })\r\n\r\n\r\n  //Also backing up today's total screen time per app, although unnecessary\r\n  client.getAppTotals().then((dat) => {\r\n    let back = {\r\n      type: \"screen-time\",\r\n      data: dat,\r\n    }\r\n    store.dispatch(PastActions.backupAWData(back))\r\n  })\r\n\r\n  //adding a minute of running time\r\n  store.dispatch(PastActions.addMinute())\r\n}",["272","273"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\index.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\index.jsx",["274","275","276"],"C:\\code\\mit\\RL_app\\src\\screens\\HomeScreen\\index.jsx",["277","278","279","280"],"C:\\code\\mit\\RL_app\\src\\App.js",["281","282"],"import React, { useEffect } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter, useHistory } from \"react-router-dom\";\r\nimport BreakManager from \"./breakmanager\";\r\n\r\n\r\nimport { store } from \"./redux\";\r\nimport Main from \"./navigation\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nfunction App() {\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    \r\n  }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <Main />\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["283","284"],"C:\\code\\mit\\RL_app\\src\\screens\\CalendarScreen\\index.jsx",["285"],"import React, { useState } from \"react\";\r\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport * as dates from \"../../utils/dates\";\r\nimport \"./styles.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\nconst ColoredDateCellWrapper = ({ children }) =>\r\n  React.cloneElement(React.Children.only(children), {\r\n    style: {\r\n      backgroundColor: \"lightblue\",\r\n    },\r\n  });\r\n\r\nconst CalendarScreen = (props) => {\r\n  const [events, setEvents] = useState([\r\n    {\r\n      start: moment().toDate(),\r\n      end: moment().add(1, \"days\").toDate(),\r\n      title: \"Test\",\r\n      id: 1,\r\n    },\r\n  ]);\r\n  const [draggedEvent, setDraggedEvent] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const resizeEvent = ({ event, start, end }) => {\r\n    console.log(\"looi\", event);\r\n    const nextEvents = events.map((existingEvent) => {\r\n      return existingEvent.id === event.id\r\n        ? { ...existingEvent, start, end }\r\n        : existingEvent;\r\n    });\r\n\r\n    setEvents(nextEvents);\r\n  };\r\n\r\n  const moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\r\n    let allDay = event.allDay;\r\n\r\n    if (!event.allDay && droppedOnAllDaySlot) {\r\n      allDay = true;\r\n    } else if (event.allDay && !droppedOnAllDaySlot) {\r\n      allDay = false;\r\n    }\r\n\r\n    const nextEvents = events.map((existingEvent) => {\r\n      return existingEvent.id === event.id\r\n        ? { ...existingEvent, start, end, allDay }\r\n        : existingEvent;\r\n    });\r\n\r\n    setEvents(nextEvents);\r\n\r\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\r\n  };\r\n\r\n  const newEvent = ({ slots, start, end }) => {\r\n    setModalVisible(true);\r\n    let idList = events.map((a) => a.id);\r\n    let newId = Math.max(...idList) + 1;\r\n    let hour = {\r\n      id: newId,\r\n      title: \"New Event\",\r\n      allDay: slots.length === 1,\r\n      start: start,\r\n      end: end,\r\n    };\r\n\r\n    setEvents(events.concat([hour]));\r\n  };\r\n\r\n  const onDropFromOutside = ({ start, end, allDay }) => {\r\n    const event = {\r\n      id: draggedEvent.id,\r\n      title: draggedEvent.title,\r\n      start,\r\n      end,\r\n      allDay: allDay,\r\n    };\r\n\r\n    setDraggedEvent(null);\r\n    this.moveEvent({ event, start, end });\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      <Modal\r\n        visible={modalVisible}\r\n        onOk={() => {\r\n          setModalVisible(false);\r\n        }}\r\n        onCancel={() => {\r\n          setModalVisible(false);\r\n        }}\r\n      >\r\n        Hello\r\n      </Modal>\r\n      <Button\r\n        onClick={() => {\r\n          props.resetInfo();\r\n          history.push(\"/\")\r\n        }}\r\n      >\r\n        Reset\r\n      </Button>\r\n      <DnDCalendar\r\n        selectable\r\n        resizable={true}\r\n        events={events}\r\n        views={[\"day\", \"week\", \"month\"]}\r\n        // step={60}\r\n        showMultiDayTimes\r\n        defaultDate={new Date()}\r\n        onSelectSlot={newEvent}\r\n        components={{\r\n          timeSlotWrapper: ColoredDateCellWrapper,\r\n        }}\r\n        localizer={localizer}\r\n        max={dates.add(dates.endOf(new Date(), \"day\"), -1, \"hours\")}\r\n        style={{ height: props.height ? props.height : window.innerHeight }}\r\n        onEventResize={resizeEvent}\r\n        onEventDrop={moveEvent}\r\n        onDropFromOutside={onDropFromOutside}\r\n        handleDragStart={(event) => {\r\n          console.log(event);\r\n          setDraggedEvent(event);\r\n        }}\r\n        dragFromOutsideItem={draggedEvent}\r\n        resizableAccessor={() => false}\r\n        onSelectEvent={() => {\r\n          //add code for editing an existing event here\r\n          setModalVisible(true);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ resetInfo: OnboardingActions.reset }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarScreen);\r\n",["286","287"],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\break.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\components\\Toolbar.js",["288","289","290"],"import \"./styles.css\";\r\nimport { BreakActions, PastActions } from \"../redux/actions\";\r\nimport exitFullscreen from \"../assets/exit-fullscreen.png\";\r\nimport fullscreen from \"../assets/fullscreen.png\";\r\nimport { store } from \"../redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Toolbar(props) {\r\n  let mounted = true;\r\n  useEffect(() => {\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  });\r\n\r\n  const [minsRem, setMinsRem] = useState(Math.ceil(props.totaltime / 60));\r\n  setTimeout(() => {\r\n    setMinsRem(minsRem - 1);\r\n  }, 60000);\r\n  let str;\r\n  if (minsRem != 1) str = minsRem + \" Minutes remaining\";\r\n  else str = minsRem + \" Minute remaining\";\r\n  if (props.type === \"minimize\")\r\n    return (\r\n      <div className=\"toolbar\">\r\n        <div className=\"minutes-remaining\">{str}</div>\r\n        <button\r\n          className=\"minimize-break2\"\r\n          onClick={() => {\r\n            if (mounted) props.minimize(true);\r\n          }}\r\n        >\r\n          <img\r\n            src={exitFullscreen}\r\n            alt=\"Mountains\"\r\n            width=\"70\"\r\n            height=\"70\"\r\n          ></img>\r\n        </button>\r\n        <button\r\n          className=\"close-break2\"\r\n          onClick={() => {\r\n            store.dispatch(BreakActions.endBreak(store.getState().break.breakEndTime));\r\n          }}\r\n        >\r\n          &#10006;\r\n        </button>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div className=\"toolbar2\">\r\n        <div className=\"minutes-remaining2\">{str}</div>\r\n        <div className=\"break-text-min\">{props.message}</div>\r\n        <div>\r\n          <button\r\n            className=\"minimize-break3\"\r\n            onClick={() => {\r\n              if (mounted) props.minimize(false);\r\n            }}\r\n          >\r\n            <img src={fullscreen} alt=\"Mountains\" width=\"70\" height=\"70\"></img>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"close-break3\"\r\n            onClick={() => {\r\n              store.dispatch(BreakActions.endBreak(store.getState().break.breakEndTime));\r\n            }}\r\n          >\r\n            &#10006;\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","C:\\code\\mit\\RL_app\\src\\screens\\StroopScreen\\index.jsx",["291","292","293","294","295","296","297","298","299","300","301","302","303","304"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport StroopTest from \"../../components/stroop_test\";\r\nimport Games from \"../../components/Games\";\r\n\r\nconst { ipcRenderer, remote } = window.require(\"electron\");\r\n\r\nvar s1 = {\r\n  height: \"100vh\",\r\n  width: \"100vw\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n//TO-DO: add style\r\nconst StroopScreen = () => {\r\n  const [complte, setComplete] = useState(false);\r\n  const [scores, setScore] = useState([]);\r\n  let dispatch = useDispatch();\r\n  var order = Math.floor(Math.random() * 2);\r\n  return (\r\n    <Games\r\n      order={0}\r\n      onComplete={() => {\r\n        //remove in mobile app\r\n        remote.getCurrentWindow().close();\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default StroopScreen;\r\n","C:\\code\\mit\\RL_app\\src\\reportWebVitals.js",[],["305","306"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\scheduled.break.js",["307"],"import { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { store } from \"../../redux\";\r\n\r\n//TO DO: CONNECT WITH ACTUAL USER SETTINGS. Currently not hardcoded anything\r\n\r\n//Checks whether Scheduled break is triggered\r\nexport default function checkScheduledBreak() {\r\n  //Scheduled break if condition goes here\r\n  let weekDays = [\r\n    \"sunday\",\r\n    \"monday\",\r\n    \"tuesday\",\r\n    \"wednesday\",\r\n    \"thursday\",\r\n    \"friday\",\r\n    \"saturday\",\r\n  ];\r\n  let onboardingProps = store.getState().onboarding;\r\n  for (let indBreak of onboardingProps[\"scheduledBreaks\"]) {\r\n    let timeNow = new Date();\r\n    let dayVal = weekDays[timeNow.getDay()];\r\n    if (indBreak.day === dayVal) {\r\n      let startTime = new Date(indBreak.start);\r\n      let endTime = new Date(indBreak.end);\r\n      let currentStart = new Date();\r\n      currentStart.setHours(startTime.getHours(), startTime.getMinutes(), 0, 0);\r\n      let currentEnd = new Date();\r\n      currentEnd.setHours(endTime.getHours(), endTime.getMinutes(), 0, 0);\r\n      if (currentStart <= timeNow && currentEnd >= timeNow) {\r\n        if (\r\n          !(store.getState().break.breakState === \"break\") &&\r\n          !(store.getState().break.breakState === \"break-feedback\") &&\r\n          !(store.getState().break.breakState === \"break-popup\") &&\r\n          !(store.getState().break.breakState === \"break-stroop\") &&\r\n          !(store.getState().break.breakState === \"break-fruit\") &&\r\n          !(store.getState().past.lastScheduledBreak > currentStart)\r\n        ) {\r\n          let timeNowNew = new Date().toISOString();\r\n          let breakData = {\r\n            breakType: \"scheduled\",\r\n            breakDescription: \"NA\",\r\n            breakStartTime: timeNowNew,\r\n            breakDuration: (currentEnd - timeNow) / 1000,\r\n            breakEndTime: indBreak.end,\r\n          };\r\n          store.dispatch(BreakActions.startPopup(timeNowNew, breakData));\r\n          setTimeout(() => {\r\n            if (\r\n              store.getState().break.breakState === \"break-popup\" &&\r\n              store.getState().break.popupStartTime === timeNowNew\r\n            ) {\r\n              store.dispatch(BreakActions.startStroop());\r\n            }\r\n          }, 10000);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\test.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\index.js",["308"],"C:\\code\\mit\\RL_app\\src\\redux\\sagas\\index.js",["309"],"C:\\code\\mit\\RL_app\\src\\redux\\types\\break.types.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\break.action.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\PopupScreen\\index.jsx",["310","311","312"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//TO-DO: add style\r\nconst PopupScreen = () => {\r\n  let dispatch = useDispatch();\r\n  let history = useHistory();\r\n  return (\r\n    <div style={{ backgroundColor: \"white\", padding: \"3%\" }}>\r\n      <div\r\n        style={{\r\n          color: \"#7DCAB6\",\r\n          fontSize: \"22px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        It's time to break!\r\n      </div>\r\n      <div style={{ paddingTop: \"3%\", fontSize: \"15px\" }}>\r\n        Should we get started? This break will start automatically if you ignore\r\n        this pop up\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n          marginTop: \"10%\",\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={() =>\r\n            dispatch(\r\n              BreakActions.cancelBreak(store.getState().break.breakEndTime)\r\n            )\r\n          }\r\n          style={{ color: \"#7DCAB6\", borderWidth: 0 }}\r\n        >\r\n          CANCEL\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            // dispatch(BreakActions.startBreak())\r\n            dispatch(BreakActions.startStroop());\r\n            // history.push(\"/stroop\");\r\n          }}\r\n          style={{ color: \"#7DCAB6\", borderWidth: 0 }}\r\n        >\r\n          CONTINUE\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PopupScreen;\r\n",["313","314"],"C:\\code\\mit\\RL_app\\src\\components\\Timer.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\store.js",[],["315","316"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\AdHocBreaks.jsx",["317","318","319","320","321"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Input, Menu, Dropdown, Button, Modal, message } from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\n\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst AdHocBreakScreen = (props) => {\r\n  const [siteName, setSiteName] = useState(\"\");\r\n  const [siteUrl, setSiteUrl] = useState(\"\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [sites, setSites] = useState([\r\n    { name: \"Youtube\", url: \"https://www.youtube.com\", key: \"1\" },\r\n  ]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    setSiteName(\"\");\r\n    setSiteUrl(\"\");\r\n  };\r\n\r\n  const menu = (mainIndex) => (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        if (key === (props.onboarding.overRideSites.length + 1).toString()) {\r\n          setIsModalVisible(true);\r\n        } else {\r\n          let keyInt = parseInt(key);\r\n          let tempArray = props.onboarding.allOverRides;\r\n          let tempObj = tempArray[mainIndex];\r\n          let siteObject = props.onboarding.overRideSites[keyInt - 1];\r\n          tempObj.name = siteObject.name;\r\n          tempObj.url = siteObject.url;\r\n          tempArray[mainIndex] = tempObj;\r\n          props.setAllOverrides(tempArray);\r\n        }\r\n      }}\r\n    >\r\n      {props.onboarding.overRideSites.map((item, index) => {\r\n        return <Menu.Item key={item.key}>{item.name}</Menu.Item>;\r\n      })}\r\n      <Menu.Item key={(props.onboarding.overRideSites.length + 1).toString()}>\r\n        +ADD ANOTHER\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const Capitalize = (str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"step-container\" style={{ marginBottom: \"10px\" }}>\r\n      <Modal\r\n        title=\"\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        centered\r\n        footer={null}\r\n        width={700}\r\n      >\r\n        <div style={{ margin: \"7%\" }}>\r\n          <h2>Add a Site</h2>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Input\r\n              size=\"large\"\r\n              style={{\r\n                width: \"45%\",\r\n                borderRadius: 5,\r\n                verticalAlign: \"center\",\r\n                marginRight: \"2.5%\",\r\n              }}\r\n              placeholder=\"Site Name\"\r\n              value={siteName}\r\n              onChange={(e) => {\r\n                setSiteName(e.target.value);\r\n              }}\r\n            />\r\n            <Input\r\n              size=\"large\"\r\n              style={{\r\n                width: \"45%\",\r\n                borderRadius: 5,\r\n                verticalAlign: \"center\",\r\n                marginLeft: \"2.5%\",\r\n              }}\r\n              placeholder=\"Site URL\"\r\n              value={siteUrl}\r\n              onChange={(e) => {\r\n                setSiteUrl(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"8%\",\r\n            }}\r\n          >\r\n            <Button\r\n              style={{ marginRight: \"2.5%\" }}\r\n              onClick={() => {\r\n                setIsModalVisible(false);\r\n              }}\r\n            >\r\n              CANCEL\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginLeft: \"2.5%\" }}\r\n              onClick={() => {\r\n                let key = (\r\n                  props.onboarding.overRideSites.length + 1\r\n                ).toString();\r\n                let tempArray = props.onboarding.overRideSites;\r\n                let finalSiteName = Capitalize(siteName);\r\n                tempArray.push({ url: siteUrl, name: finalSiteName, key });\r\n                props.setOverrideSites(tempArray);\r\n                setIsModalVisible(false);\r\n              }}\r\n            >\r\n              ADD SITE\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      <h1>Break Overrides</h1>\r\n\r\n      <div style={{ marginTop: \"2%\" }}>\r\n        <p style={{ fontSize: \"15px\", color: \"#696969\", width: \"60%\" }}>\r\n          This section is to set up any specific breaks that you want to take.\r\n          For example you can set the app up to start some breaks every time you\r\n          open a specific app like Facebook.\r\n        </p>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div\r\n            style={{\r\n              marginTop: \"1%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              width: \"60%\",\r\n            }}\r\n          >\r\n            <p style={{ flex: 2, fontSize: \"18px\" }}>Site Name</p>\r\n            <p style={{ flex: 1, fontSize: \"18px\" }}>After Every</p>\r\n            <p style={{ flex: 1, fontSize: \"18px\" }}>take a Break For</p>\r\n          </div>\r\n          {props.onboarding.allOverRides.map((item, index) => {\r\n            return (\r\n              <div style={{ marginTop: \"1%\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                    width: \"60%\",\r\n                  }}\r\n                >\r\n                  <div style={{ flex: 2 }}>\r\n                    <Dropdown overlay={menu(index)} trigger={[\"click\"]}>\r\n                      <Button\r\n                        size=\"large\"\r\n                        style={{\r\n                          borderRadius: 5,\r\n                          width: \"80%\",\r\n                        }}\r\n                      >\r\n                        {item.name.length !== 0 ? (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              justifyContent: \"space-between\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            {item.name}\r\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\r\n                          </div>\r\n                        ) : (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              justifyContent: \"space-between\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            Select Site\r\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\r\n                          </div>\r\n                        )}\r\n                      </Button>\r\n                    </Dropdown>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Input\r\n                      size=\"large\"\r\n                      style={{\r\n                        borderRadius: 5,\r\n                        verticalAlign: \"center\",\r\n                        width: \"45%\",\r\n                      }}\r\n                      placeholder=\"First Name\"\r\n                      type=\"number\"\r\n                      value={item.interval}\r\n                      onChange={(e) => {\r\n                        if (e.target.value > 0 && e.target.value < 61) {\r\n                          let tempArray = props.onboarding.allOverRides;\r\n                          let tempObj = tempArray[index];\r\n                          tempObj.interval = e.target.value;\r\n                          tempArray[index] = tempObj;\r\n                          props.setAllOverrides(tempArray);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    >\r\n                      <p\r\n                        style={{\r\n                          paddingTop: \"20%\",\r\n                          marginLeft: \"7%\",\r\n                          fontSize: \"15px\",\r\n                          flex: 1,\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        minutes\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Input\r\n                      size=\"large\"\r\n                      style={{\r\n                        borderRadius: 5,\r\n                        verticalAlign: \"center\",\r\n                        width: \"45%\",\r\n                      }}\r\n                      placeholder=\"First Name\"\r\n                      type=\"number\"\r\n                      value={item.breakLength}\r\n                      onChange={(e) => {\r\n                        if (e.target.value > 0) {\r\n                          let tempArray = props.onboarding.allOverRides;\r\n                          let tempObj = tempArray[index];\r\n                          tempObj.breakLength = e.target.value;\r\n                          tempArray[index] = tempObj;\r\n                          props.setAllOverrides(tempArray);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    >\r\n                      <p\r\n                        style={{\r\n                          paddingTop: \"20%\",\r\n                          marginLeft: \"7%\",\r\n                          fontSize: \"15px\",\r\n                          flex: 1,\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        minutes\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <p\r\n            style={{\r\n              textDecorationLine: \"underline\",\r\n              marginTop: \"2%\",\r\n              fontSize: \"17px\",\r\n              cursor: \"pointer\",\r\n              width: \"15%\",\r\n            }}\r\n            onClick={() => {\r\n              let tempArray = props.onboarding.allOverRides;\r\n              tempArray.push({ name: \"\", url: \"\", interval: 60, breakLength: 1 });\r\n              props.setAllOverrides(tempArray);\r\n            }}\r\n          >\r\n            +Add Override\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setAllOverrides: OnboardingActions.setAllOverrides,\r\n      setOverrideSites: OnboardingActions.setOverrideSites,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdHocBreakScreen);\r\n","C:\\code\\mit\\RL_app\\src\\components\\Loading.js",[],["322","323"],"C:\\code\\mit\\RL_app\\src\\redux\\configureStore.js",["324"],"import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nexport default (rootReducer, rootSaga) => {\r\n  const middlewares = [];\r\n  const enhancers = [];\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  // All Redux Middlewares\r\n  middlewares.push(sagaMiddleware); // Saga Middleware\r\n  middlewares.push(createLogger()); // Redux Logger Middleware\r\n\r\n  // Assemble middlewares\r\n  enhancers.push(applyMiddleware(...middlewares));\r\n\r\n  // Create Redux Store\r\n  const store = createStore(rootReducer, compose(...enhancers));\r\n\r\n  // kick off root saga\r\n  const sagasManager = sagaMiddleware.run(rootSaga);\r\n\r\n  return {\r\n    store,\r\n    sagasManager,\r\n    sagaMiddleware,\r\n  };\r\n};\r\n",["325","326"],"C:\\code\\mit\\RL_app\\src\\navigation\\index.js",["327"],"C:\\code\\mit\\RL_app\\src\\redux\\index.js",[],"C:\\code\\mit\\RL_app\\src\\utils\\dates.js",["328","329","330","331","332"],"import * as dates from 'date-arithmetic'\r\n\r\nexport {\r\n  milliseconds,\r\n  seconds,\r\n  minutes,\r\n  hours,\r\n  month,\r\n  startOf,\r\n  endOf,\r\n  add,\r\n  eq,\r\n  gte,\r\n  gt,\r\n  lte,\r\n  lt,\r\n  inRange,\r\n  min,\r\n  max,\r\n} from 'date-arithmetic'\r\n\r\nconst MILLI = {\r\n  seconds: 1000,\r\n  minutes: 1000 * 60,\r\n  hours: 1000 * 60 * 60,\r\n  day: 1000 * 60 * 60 * 24,\r\n}\r\n\r\nconst MONTHS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\r\n\r\nexport function monthsInYear(year) {\r\n  let date = new Date(year, 0, 1)\r\n\r\n  return MONTHS.map(i => dates.month(date, i))\r\n}\r\n\r\nexport function firstVisibleDay(date, localizer) {\r\n  let firstOfMonth = dates.startOf(date, 'month')\r\n\r\n  return dates.startOf(firstOfMonth, 'week', localizer.startOfWeek())\r\n}\r\n\r\nexport function lastVisibleDay(date, localizer) {\r\n  let endOfMonth = dates.endOf(date, 'month')\r\n\r\n  return dates.endOf(endOfMonth, 'week', localizer.startOfWeek())\r\n}\r\n\r\nexport function visibleDays(date, localizer) {\r\n  let current = firstVisibleDay(date, localizer),\r\n    last = lastVisibleDay(date, localizer),\r\n    days = []\r\n\r\n  while (dates.lte(current, last, 'day')) {\r\n    days.push(current)\r\n    current = dates.add(current, 1, 'day')\r\n  }\r\n\r\n  return days\r\n}\r\n\r\nexport function ceil(date, unit) {\r\n  let floor = dates.startOf(date, unit)\r\n\r\n  return dates.eq(floor, date) ? floor : dates.add(floor, 1, unit)\r\n}\r\n\r\nexport function range(start, end, unit = 'day') {\r\n  let current = start,\r\n    days = []\r\n\r\n  while (dates.lte(current, end, unit)) {\r\n    days.push(current)\r\n    current = dates.add(current, 1, unit)\r\n  }\r\n\r\n  return days\r\n}\r\n\r\nexport function merge(date, time) {\r\n  if (time == null && date == null) return null\r\n\r\n  if (time == null) time = new Date()\r\n  if (date == null) date = new Date()\r\n\r\n  date = dates.startOf(date, 'day')\r\n  date = dates.hours(date, dates.hours(time))\r\n  date = dates.minutes(date, dates.minutes(time))\r\n  date = dates.seconds(date, dates.seconds(time))\r\n  return dates.milliseconds(date, dates.milliseconds(time))\r\n}\r\n\r\nexport function eqTime(dateA, dateB) {\r\n  return (\r\n    dates.hours(dateA) === dates.hours(dateB) &&\r\n    dates.minutes(dateA) === dates.minutes(dateB) &&\r\n    dates.seconds(dateA) === dates.seconds(dateB)\r\n  )\r\n}\r\n\r\nexport function isJustDate(date) {\r\n  return (\r\n    dates.hours(date) === 0 &&\r\n    dates.minutes(date) === 0 &&\r\n    dates.seconds(date) === 0 &&\r\n    dates.milliseconds(date) === 0\r\n  )\r\n}\r\n\r\nexport function duration(start, end, unit, firstOfWeek) {\r\n  if (unit === 'day') unit = 'date'\r\n  return Math.abs(\r\n    dates[unit](start, undefined, firstOfWeek) -\r\n      dates[unit](end, undefined, firstOfWeek)\r\n  )\r\n}\r\n\r\nexport function diff(dateA, dateB, unit) {\r\n  if (!unit || unit === 'milliseconds') return Math.abs(+dateA - +dateB)\r\n\r\n  // the .round() handles an edge case\r\n  // with DST where the total won't be exact\r\n  // since one day in the range may be shorter/longer by an hour\r\n  return Math.round(\r\n    Math.abs(\r\n      +dates.startOf(dateA, unit) / MILLI[unit] -\r\n        +dates.startOf(dateB, unit) / MILLI[unit]\r\n    )\r\n  )\r\n}\r\n\r\nexport function total(date, unit) {\r\n  let ms = date.getTime(),\r\n    div = 1\r\n\r\n  switch (unit) {\r\n    case 'week':\r\n      div *= 7\r\n    case 'day':\r\n      div *= 24\r\n    case 'hours':\r\n      div *= 60\r\n    case 'minutes':\r\n      div *= 60\r\n    case 'seconds':\r\n      div *= 1000\r\n  }\r\n\r\n  return ms / div\r\n}\r\n\r\nexport function week(date) {\r\n  var d = new Date(date)\r\n  d.setHours(0, 0, 0)\r\n  d.setDate(d.getDate() + 4 - (d.getDay() || 7))\r\n  return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7)\r\n}\r\n\r\nexport function today() {\r\n  return dates.startOf(new Date(), 'day')\r\n}\r\n\r\nexport function yesterday() {\r\n  return dates.add(dates.startOf(new Date(), 'day'), -1, 'day')\r\n}\r\n\r\nexport function tomorrow() {\r\n  return dates.add(dates.startOf(new Date(), 'day'), 1, 'day')\r\n}",["333","334"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\activityrule.break.js",["335"],"C:\\code\\mit\\RL_app\\src\\screens\\FruitNinjaScreen\\index.jsx",["336","337","338"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport FruitNinja from \"../../components/fruit_ninja\";\r\n\r\nvar s1 = {\r\n  height: \"100vh\",\r\n  width: \"100vw\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n//TO-DO: add style\r\nconst FruitNinjaScreen = () => {\r\n  const [complte, setComplete] = useState(false);\r\n  const [scores, setScore] = useState([]);\r\n  let dispatch = useDispatch();\r\n  console.log(\"sc\", scores);\r\n  if (complte) {\r\n    return (\r\n      <div style={{ backgroundColor: \"white\", padding: \"3%\" }}>\r\n        {scores.length < 3 ? (\r\n          <Button\r\n            onClick={() => {\r\n              setComplete(false);\r\n            }}\r\n          >\r\n            Continue\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(BreakActions.startBreak());\r\n            }}\r\n          >\r\n            Take Break\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{ backgroundColor: \"white\", padding: \"3%\" }}>\r\n        <FruitNinja\r\n          timelimit={10}\r\n          version={2}\r\n          bpi={5}\r\n          style={s1}\r\n          onComplete={(score) => {\r\n            //   setStage({ ...stage, stroop: 2, scores: [...stage.scores, score] });\r\n            let tempArray = [...scores];\r\n            tempArray.push(score);\r\n            setScore(tempArray);\r\n            setComplete(true);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default FruitNinjaScreen;\r\n","C:\\code\\mit\\RL_app\\src\\services\\awclient.service.js",["339","340"],"import { AWClient } from \"aw-client\";\r\n\r\nclass AWClientService {\r\n  constructor() {\r\n    this.client = new AWClient(\"test-client\");\r\n    this.todayDate = new Date();\r\n    this.tmrwDate = new Date();\r\n    this.todayDate.setHours(0, 0, 0, 0);\r\n    this.tmrwDate.setHours(23, 59, 59, 999);\r\n    this.todayDate = this.todayDate.toISOString();\r\n    this.tmrwDate = this.tmrwDate.toISOString();\r\n    this.client.getBuckets().then((buckets) => {\r\n      this.bucketMap = {};\r\n      for (var bucketid in buckets) {\r\n        this.bucketMap[buckets[bucketid].client] = bucketid;\r\n      }\r\n    });\r\n  }\r\n\r\n  createBucketMap() {\r\n    return this.client.getBuckets().then((buckets) => {\r\n      this.bucketMap = {};\r\n      for (var bucketid in buckets) {\r\n        this.bucketMap[buckets[bucketid].client] = bucketid;\r\n      }\r\n    });\r\n  }\r\n\r\n  updateDate() {\r\n    this.todayDate = new Date();\r\n    this.tmrwDate = new Date();\r\n    this.todayDate.setHours(0, 0, 0, 0);\r\n    this.tmrwDate.setHours(23, 59, 59, 999);\r\n    this.todayDate = this.todayDate.toISOString();\r\n    this.tmrwDate = this.tmrwDate.toISOString();\r\n  }\r\n\r\n  //get today's active windows in order\r\n  async getActiveWindows() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n      const query = [\r\n        \"RETURN=query_bucket('\" + this.bucketMap[\"aw-watcher-window\"] + \"')\",\r\n      ];\r\n      const activeWindows = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      return activeWindows[0];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  //get all active windows since the beginning\r\n  async getActiveWindowsSinceBeginning() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n      const query = [\r\n        \"RETURN=query_bucket('\" + this.bucketMap[\"aw-watcher-window\"] + \"')\",\r\n      ];\r\n      const activeWindows = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      return activeWindows[0];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  //get today's afk in order\r\n  async getAFK() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n\r\n      var query = [\r\n        \"bucket='\" + this.bucketMap[\"aw-watcher-afk\"] + \"';\",\r\n        \"RETURN=query_bucket(bucket);\",\r\n      ];\r\n      const afk = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      return afk[0];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getAppTotals() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n\r\n      var query = [\r\n        \"window_events = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-window\"] +\r\n          \"');\",\r\n        \"events = merge_events_by_keys(window_events, ['app','title']);\",\r\n        \"events = sort_by_duration(events);\",\r\n        \"RETURN = events;\",\r\n      ];\r\n      const queryWindows = [\r\n        \"window_events = query_bucket('\" + \"aw-watcher-web-chrome\" + \"');\",\r\n        \"events = merge_events_by_keys(window_events, ['title','url']);\",\r\n        \"events = sort_by_duration(events);\",\r\n        \"RETURN = events;\",\r\n      ];\r\n      const appTotalWithoutAudio = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      const websiteTotals = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        queryWindows\r\n      );\r\n      return {\r\n        appTotal: appTotalWithoutAudio[0],\r\n        websiteTotals: websiteTotals[0],\r\n      };\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  //find total time per app in the day excluding video streaming AFK\r\n  async getAppTotalsIntersectAFKWithoutAudio() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n\r\n      var query = [\r\n        \"window_events = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-window\"] +\r\n          \"');\",\r\n        \"not_afk_events = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-afk\"] +\r\n          \"');\",\r\n        \"not_afk_events = filter_keyvals(not_afk_events, 'status', ['not-afk']);\",\r\n        \"window_events = filter_period_intersect(window_events, not_afk_events);\",\r\n        \"events = merge_events_by_keys(window_events, ['app']);\",\r\n        \"events = sort_by_duration(events);\",\r\n        \"RETURN = events;\",\r\n      ];\r\n      const appTotalWithoutAudio = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      return appTotalWithoutAudio[0];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  //find total time per app in the day including video streaming AFK\r\n  async getAppTotalIntersectAFKWithAudio() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n\r\n      var query = [\r\n        \"window_events = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-window\"] +\r\n          \"');\",\r\n        \"not_afk_events = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-afk\"] +\r\n          \"');\",\r\n        \"not_afk_events = filter_keyvals(not_afk_events, 'status', ['not-afk']);\",\r\n        \"web_events = query_bucket('\" + this.bucketMap[\"aw-client-web\"] + \"');\",\r\n        \"audible_events = filter_keyvals(web_events, 'audible', [true]);\",\r\n        \"afk_events = query_bucket('\" +\r\n          this.bucketMap[\"aw-watcher-afk\"] +\r\n          \"');\",\r\n        \"afk_events = filter_keyvals(afk_events, 'status', ['afk']);\",\r\n        \"audible_afk_events = filter_period_intersect(audible_events,afk_events);\",\r\n        \"not_afk_events = concat(not_afk_events, audible_afk_events);\",\r\n        \"window_events = filter_period_intersect(window_events, not_afk_events);\",\r\n        \"events = merge_events_by_keys(window_events, ['app','url']);\",\r\n        \"events = sort_by_duration(events);\",\r\n        \"RETURN = events;\",\r\n      ];\r\n\r\n      const appTotalWithAudio = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      return appTotalWithAudio[0];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  //find currently active window\r\n  async getCurrentlyActiveWindow() {\r\n    try {\r\n      this.updateDate();\r\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\r\n\r\n      var query = [\r\n        \"RETURN=query_bucket('\" + this.bucketMap[\"aw-watcher-window\"] + \"')\",\r\n      ];\r\n\r\n      const activeWindows = await this.client.query(\r\n        [this.todayDate + \"/\" + this.tmrwDate],\r\n        query\r\n      );\r\n      return activeWindows[0][0];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default AWClientService;\r\n",["341","342"],"C:\\code\\mit\\RL_app\\src\\redux\\types\\past.types.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\past.action.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\index.js",[],"C:\\code\\mit\\RL_app\\src\\components\\fruit_ninja\\index.jsx",["343","344","345","346"],"C:\\code\\mit\\RL_app\\src\\services\\index.js",[],"C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja\\index.jsx",["347","348","349","350"],"import React, { useEffect } from \"react\";\r\nimport ScriptTag from 'react-script-tag';\r\nimport InnerHTML from 'dangerously-set-html-content'\r\n\r\nfunction FruitNinja(props) {\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n\r\n        if ((props.version || 1) == 1) {\r\n            script.src = \"scripts/all3.js\";\r\n            //replace in mobile app\r\n            //script.src = \"scripts/all1.js\";\r\n        }\r\n        else {\r\n            script.src = \"scripts/all4.js\";\r\n            //replace in mobile app\r\n            //script.src = \"scripts/all2.js\";\r\n        }\r\n            \r\n\r\n        script.async = true;\r\n\r\n        document.body.appendChild(script);\r\n\r\n\r\n\r\n        const targetNode = document.getElementById('fruit_ninja_score')\r\n        const config = { attributes: true, childList: true, subtree: true };\r\n        const callback = function (mutationsList, observer) {\r\n            for (const mutation of mutationsList) {\r\n                if (mutation.type === 'childList') {\r\n                    console.log('okay we are printing ' + targetNode.innerHTML)\r\n                    props.onComplete(parseInt(targetNode.innerHTML))\r\n                }\r\n            }\r\n        };\r\n\r\n        const observer = new MutationObserver(callback);\r\n        observer.observe(targetNode, config);\r\n        return () => {\r\n            observer.disconnect();\r\n\r\n            document.body.removeChild(script);\r\n        }\r\n    }, []);\r\n\r\n    var r=1\r\n    //replace in mobile app\r\n    //var r = document.documentElement.clientHeight * parseFloat(document.getElementById('height_ratio').innerHTML) / 420\r\n    var w = 640 * r \r\n    var h = 420 * r\r\n    return <div id='fruit_ninja_container_container' style={{display: 'flex', justifyContent: 'center' }}>\r\n    <span id='fruit_ninja_container'>\r\n            <div id=\"fruit_ninja_extra\" width={w} height={h}></div>\r\n            <canvas id=\"fruit_ninja_view\" width={w} height={h}></canvas>\r\n        <div id=\"fruit_ninja_desc\">\r\n\t            <div id='fruit_ninja_score'></div>\r\n                <div id=\"fruit_ninja_browser\"></div>\r\n                <div id='fruit_ninja_bombprob_inverse' style={{ display: 'none' }}>{props.bpi || 8}</div>\r\n                <div id='height_ratio' style={{ display: 'none' }}>{1}</div>\r\n                <div id='fruit_ninja_time_limit' style={{ display: 'none' }}>{props.timelimit||3600}</div>\r\n\r\n           </div>\r\n        </span >\r\n        </div>\r\n\r\n}\r\n\r\nexport default FruitNinja;\r\n","C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info.jsx",["351","352","353","354"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\index.jsx",["355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test\\index.jsx",["379","380","381","382","383","384","385","386","387"],"C:\\code\\mit\\RL_app\\src\\screens\\LoginScreen\\index.jsx",[],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\ScheduledBreaks.jsx",["388","389"],"C:\\code\\mit\\RL_app\\src\\screens\\AWCheckerScreen\\index.jsx",["390","391","392","393"],{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","severity":1,"message":"399","line":2,"column":10,"nodeType":"400","messageId":"401","endLine":2,"endColumn":20},{"ruleId":"398","severity":1,"message":"402","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":13},{"ruleId":"403","severity":1,"message":"404","line":33,"column":17,"nodeType":"405","endLine":33,"endColumn":22},{"ruleId":"406","severity":1,"message":"407","line":159,"column":3,"nodeType":"408","messageId":"409","endLine":159,"endColumn":15},{"ruleId":"410","severity":1,"message":"411","line":163,"column":14,"nodeType":"412","messageId":"413","endLine":163,"endColumn":16},{"ruleId":"398","severity":1,"message":"414","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"398","severity":1,"message":"415","line":1,"column":28,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"394","replacedBy":"416"},{"ruleId":"396","replacedBy":"417"},{"ruleId":"398","severity":1,"message":"418","line":4,"column":17,"nodeType":"400","messageId":"401","endLine":4,"endColumn":23},{"ruleId":"398","severity":1,"message":"419","line":5,"column":10,"nodeType":"400","messageId":"401","endLine":5,"endColumn":22},{"ruleId":"398","severity":1,"message":"420","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":19},{"ruleId":"398","severity":1,"message":"421","line":12,"column":9,"nodeType":"400","messageId":"401","endLine":12,"endColumn":14},{"ruleId":"398","severity":1,"message":"422","line":15,"column":10,"nodeType":"400","messageId":"401","endLine":15,"endColumn":17},{"ruleId":"398","severity":1,"message":"423","line":15,"column":19,"nodeType":"400","messageId":"401","endLine":15,"endColumn":29},{"ruleId":"398","severity":1,"message":"424","line":18,"column":9,"nodeType":"400","messageId":"401","endLine":18,"endColumn":18},{"ruleId":"398","severity":1,"message":"414","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"398","severity":1,"message":"425","line":4,"column":10,"nodeType":"400","messageId":"401","endLine":4,"endColumn":15},{"ruleId":"398","severity":1,"message":"426","line":9,"column":10,"nodeType":"400","messageId":"401","endLine":9,"endColumn":20},{"ruleId":"398","severity":1,"message":"427","line":9,"column":22,"nodeType":"400","messageId":"401","endLine":9,"endColumn":35},{"ruleId":"398","severity":1,"message":"428","line":1,"column":24,"nodeType":"400","messageId":"401","endLine":1,"endColumn":35},{"ruleId":"398","severity":1,"message":"429","line":5,"column":7,"nodeType":"400","messageId":"401","endLine":5,"endColumn":12},{"ruleId":"398","severity":1,"message":"430","line":6,"column":7,"nodeType":"400","messageId":"401","endLine":6,"endColumn":11},{"ruleId":"398","severity":1,"message":"431","line":3,"column":8,"nodeType":"400","messageId":"401","endLine":3,"endColumn":27},{"ruleId":"394","replacedBy":"432"},{"ruleId":"396","replacedBy":"433"},{"ruleId":"394","replacedBy":"434"},{"ruleId":"396","replacedBy":"435"},{"ruleId":"398","severity":1,"message":"436","line":1,"column":10,"nodeType":"400","messageId":"401","endLine":1,"endColumn":22},{"ruleId":"394","replacedBy":"437"},{"ruleId":"396","replacedBy":"438"},{"ruleId":"398","severity":1,"message":"439","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":28},{"ruleId":"398","severity":1,"message":"440","line":14,"column":10,"nodeType":"400","messageId":"401","endLine":14,"endColumn":31},{"ruleId":"403","severity":1,"message":"441","line":31,"column":6,"nodeType":"442","endLine":31,"endColumn":8,"suggestions":"443"},{"ruleId":"398","severity":1,"message":"414","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"398","severity":1,"message":"426","line":11,"column":10,"nodeType":"400","messageId":"401","endLine":11,"endColumn":20},{"ruleId":"398","severity":1,"message":"427","line":11,"column":22,"nodeType":"400","messageId":"401","endLine":11,"endColumn":35},{"ruleId":"398","severity":1,"message":"444","line":12,"column":9,"nodeType":"400","messageId":"401","endLine":12,"endColumn":16},{"ruleId":"398","severity":1,"message":"445","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":20},{"ruleId":"398","severity":1,"message":"444","line":15,"column":7,"nodeType":"400","messageId":"401","endLine":15,"endColumn":14},{"ruleId":"394","replacedBy":"446"},{"ruleId":"396","replacedBy":"447"},{"ruleId":"398","severity":1,"message":"448","line":2,"column":37,"nodeType":"400","messageId":"401","endLine":2,"endColumn":42},{"ruleId":"394","replacedBy":"449"},{"ruleId":"396","replacedBy":"450"},{"ruleId":"398","severity":1,"message":"428","line":2,"column":24,"nodeType":"400","messageId":"401","endLine":2,"endColumn":35},{"ruleId":"403","severity":1,"message":"404","line":12,"column":17,"nodeType":"405","endLine":12,"endColumn":22},{"ruleId":"410","severity":1,"message":"451","line":21,"column":15,"nodeType":"412","messageId":"413","endLine":21,"endColumn":17},{"ruleId":"398","severity":1,"message":"452","line":2,"column":23,"nodeType":"400","messageId":"401","endLine":2,"endColumn":34},{"ruleId":"398","severity":1,"message":"436","line":3,"column":10,"nodeType":"400","messageId":"401","endLine":3,"endColumn":22},{"ruleId":"398","severity":1,"message":"428","line":3,"column":24,"nodeType":"400","messageId":"401","endLine":3,"endColumn":35},{"ruleId":"398","severity":1,"message":"418","line":4,"column":10,"nodeType":"400","messageId":"401","endLine":4,"endColumn":16},{"ruleId":"398","severity":1,"message":"453","line":5,"column":10,"nodeType":"400","messageId":"401","endLine":5,"endColumn":15},{"ruleId":"398","severity":1,"message":"454","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":18},{"ruleId":"398","severity":1,"message":"455","line":9,"column":9,"nodeType":"400","messageId":"401","endLine":9,"endColumn":20},{"ruleId":"398","severity":1,"message":"456","line":11,"column":5,"nodeType":"400","messageId":"401","endLine":11,"endColumn":7},{"ruleId":"398","severity":1,"message":"457","line":20,"column":10,"nodeType":"400","messageId":"401","endLine":20,"endColumn":17},{"ruleId":"398","severity":1,"message":"458","line":20,"column":19,"nodeType":"400","messageId":"401","endLine":20,"endColumn":30},{"ruleId":"398","severity":1,"message":"459","line":21,"column":10,"nodeType":"400","messageId":"401","endLine":21,"endColumn":16},{"ruleId":"398","severity":1,"message":"460","line":21,"column":18,"nodeType":"400","messageId":"401","endLine":21,"endColumn":26},{"ruleId":"398","severity":1,"message":"461","line":22,"column":7,"nodeType":"400","messageId":"401","endLine":22,"endColumn":15},{"ruleId":"398","severity":1,"message":"462","line":23,"column":7,"nodeType":"400","messageId":"401","endLine":23,"endColumn":12},{"ruleId":"394","replacedBy":"463"},{"ruleId":"396","replacedBy":"464"},{"ruleId":"398","severity":1,"message":"428","line":1,"column":24,"nodeType":"400","messageId":"401","endLine":1,"endColumn":35},{"ruleId":"398","severity":1,"message":"465","line":1,"column":27,"nodeType":"400","messageId":"401","endLine":1,"endColumn":34},{"ruleId":"398","severity":1,"message":"466","line":1,"column":15,"nodeType":"400","messageId":"401","endLine":1,"endColumn":19},{"ruleId":"398","severity":1,"message":"452","line":3,"column":23,"nodeType":"400","messageId":"401","endLine":3,"endColumn":34},{"ruleId":"398","severity":1,"message":"428","line":4,"column":24,"nodeType":"400","messageId":"401","endLine":4,"endColumn":35},{"ruleId":"398","severity":1,"message":"444","line":12,"column":7,"nodeType":"400","messageId":"401","endLine":12,"endColumn":14},{"ruleId":"394","replacedBy":"467"},{"ruleId":"396","replacedBy":"468"},{"ruleId":"394","replacedBy":"469"},{"ruleId":"396","replacedBy":"470"},{"ruleId":"398","severity":1,"message":"414","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"398","severity":1,"message":"471","line":4,"column":48,"nodeType":"400","messageId":"401","endLine":4,"endColumn":55},{"ruleId":"398","severity":1,"message":"472","line":15,"column":10,"nodeType":"400","messageId":"401","endLine":15,"endColumn":15},{"ruleId":"398","severity":1,"message":"473","line":15,"column":17,"nodeType":"400","messageId":"401","endLine":15,"endColumn":25},{"ruleId":"398","severity":1,"message":"424","line":19,"column":9,"nodeType":"400","messageId":"401","endLine":19,"endColumn":18},{"ruleId":"394","replacedBy":"474"},{"ruleId":"396","replacedBy":"475"},{"ruleId":"476","severity":1,"message":"477","line":5,"column":1,"nodeType":"478","endLine":29,"endColumn":3},{"ruleId":"394","replacedBy":"479"},{"ruleId":"396","replacedBy":"480"},{"ruleId":null,"fatal":true,"severity":2,"message":"481","line":17,"column":7},{"ruleId":"482","severity":1,"message":"483","line":136,"column":3,"nodeType":"484","messageId":"485","endLine":147,"endColumn":4},{"ruleId":"486","severity":1,"message":"487","line":139,"column":5,"nodeType":"488","messageId":"489","endLine":140,"endColumn":16},{"ruleId":"486","severity":1,"message":"487","line":141,"column":5,"nodeType":"488","messageId":"489","endLine":142,"endColumn":16},{"ruleId":"486","severity":1,"message":"487","line":143,"column":5,"nodeType":"488","messageId":"489","endLine":144,"endColumn":16},{"ruleId":"486","severity":1,"message":"487","line":145,"column":5,"nodeType":"488","messageId":"489","endLine":146,"endColumn":18},{"ruleId":"394","replacedBy":"490"},{"ruleId":"396","replacedBy":"491"},{"ruleId":"492","severity":1,"message":"493","line":23,"column":41,"nodeType":"494","messageId":"495","endLine":23,"endColumn":43},{"ruleId":"398","severity":1,"message":"452","line":2,"column":23,"nodeType":"400","messageId":"401","endLine":2,"endColumn":34},{"ruleId":"398","severity":1,"message":"428","line":3,"column":24,"nodeType":"400","messageId":"401","endLine":3,"endColumn":35},{"ruleId":"398","severity":1,"message":"453","line":5,"column":10,"nodeType":"400","messageId":"401","endLine":5,"endColumn":15},{"ruleId":"496","severity":1,"message":"497","line":108,"column":42,"nodeType":"412","messageId":"498","endLine":108,"endColumn":43},{"ruleId":"496","severity":1,"message":"497","line":108,"column":68,"nodeType":"412","messageId":"498","endLine":108,"endColumn":69},{"ruleId":"394","replacedBy":"499"},{"ruleId":"396","replacedBy":"500"},{"ruleId":"398","severity":1,"message":"501","line":2,"column":8,"nodeType":"400","messageId":"401","endLine":2,"endColumn":17},{"ruleId":"398","severity":1,"message":"502","line":3,"column":8,"nodeType":"400","messageId":"401","endLine":3,"endColumn":17},{"ruleId":"410","severity":1,"message":"411","line":10,"column":34,"nodeType":"412","messageId":"413","endLine":10,"endColumn":36},{"ruleId":"403","severity":1,"message":"503","line":46,"column":8,"nodeType":"442","endLine":46,"endColumn":10,"suggestions":"504"},{"ruleId":"398","severity":1,"message":"501","line":2,"column":8,"nodeType":"400","messageId":"401","endLine":2,"endColumn":17},{"ruleId":"398","severity":1,"message":"502","line":3,"column":8,"nodeType":"400","messageId":"401","endLine":3,"endColumn":17},{"ruleId":"410","severity":1,"message":"411","line":10,"column":34,"nodeType":"412","messageId":"413","endLine":10,"endColumn":36},{"ruleId":"403","severity":1,"message":"503","line":46,"column":8,"nodeType":"442","endLine":46,"endColumn":10,"suggestions":"505"},{"ruleId":"398","severity":1,"message":"506","line":2,"column":8,"nodeType":"400","messageId":"401","endLine":2,"endColumn":13},{"ruleId":"398","severity":1,"message":"453","line":4,"column":10,"nodeType":"400","messageId":"401","endLine":4,"endColumn":15},{"ruleId":"398","severity":1,"message":"452","line":6,"column":23,"nodeType":"400","messageId":"401","endLine":6,"endColumn":34},{"ruleId":"398","severity":1,"message":"455","line":7,"column":9,"nodeType":"400","messageId":"401","endLine":7,"endColumn":20},{"ruleId":"398","severity":1,"message":"507","line":2,"column":8,"nodeType":"400","messageId":"401","endLine":2,"endColumn":18},{"ruleId":"398","severity":1,"message":"454","line":3,"column":8,"nodeType":"400","messageId":"401","endLine":3,"endColumn":18},{"ruleId":"398","severity":1,"message":"506","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":13},{"ruleId":"398","severity":1,"message":"453","line":9,"column":10,"nodeType":"400","messageId":"401","endLine":9,"endColumn":15},{"ruleId":"410","severity":1,"message":"411","line":35,"column":27,"nodeType":"412","messageId":"413","endLine":35,"endColumn":29},{"ruleId":"410","severity":1,"message":"411","line":36,"column":28,"nodeType":"412","messageId":"413","endLine":36,"endColumn":30},{"ruleId":"410","severity":1,"message":"411","line":37,"column":27,"nodeType":"412","messageId":"413","endLine":37,"endColumn":29},{"ruleId":"410","severity":1,"message":"411","line":39,"column":31,"nodeType":"412","messageId":"413","endLine":39,"endColumn":33},{"ruleId":"410","severity":1,"message":"411","line":39,"column":55,"nodeType":"412","messageId":"413","endLine":39,"endColumn":57},{"ruleId":"410","severity":1,"message":"411","line":44,"column":32,"nodeType":"412","messageId":"413","endLine":44,"endColumn":34},{"ruleId":"410","severity":1,"message":"411","line":44,"column":57,"nodeType":"412","messageId":"413","endLine":44,"endColumn":59},{"ruleId":"410","severity":1,"message":"411","line":49,"column":31,"nodeType":"412","messageId":"413","endLine":49,"endColumn":33},{"ruleId":"410","severity":1,"message":"411","line":73,"column":19,"nodeType":"412","messageId":"413","endLine":73,"endColumn":21},{"ruleId":"410","severity":1,"message":"411","line":82,"column":18,"nodeType":"412","messageId":"413","endLine":82,"endColumn":20},{"ruleId":"410","severity":1,"message":"411","line":82,"column":38,"nodeType":"412","messageId":"413","endLine":82,"endColumn":40},{"ruleId":"410","severity":1,"message":"411","line":83,"column":18,"nodeType":"412","messageId":"413","endLine":83,"endColumn":20},{"ruleId":"410","severity":1,"message":"411","line":83,"column":38,"nodeType":"412","messageId":"413","endLine":83,"endColumn":40},{"ruleId":"410","severity":1,"message":"411","line":88,"column":19,"nodeType":"412","messageId":"413","endLine":88,"endColumn":21},{"ruleId":"410","severity":1,"message":"411","line":89,"column":21,"nodeType":"412","messageId":"413","endLine":89,"endColumn":23},{"ruleId":"410","severity":1,"message":"411","line":114,"column":18,"nodeType":"412","messageId":"413","endLine":114,"endColumn":20},{"ruleId":"410","severity":1,"message":"411","line":114,"column":38,"nodeType":"412","messageId":"413","endLine":114,"endColumn":40},{"ruleId":"410","severity":1,"message":"411","line":115,"column":18,"nodeType":"412","messageId":"413","endLine":115,"endColumn":20},{"ruleId":"410","severity":1,"message":"411","line":115,"column":38,"nodeType":"412","messageId":"413","endLine":115,"endColumn":40},{"ruleId":"410","severity":1,"message":"411","line":119,"column":19,"nodeType":"412","messageId":"413","endLine":119,"endColumn":21},{"ruleId":"410","severity":1,"message":"411","line":17,"column":29,"nodeType":"412","messageId":"413","endLine":17,"endColumn":31},{"ruleId":"508","severity":1,"message":"509","line":39,"column":9,"nodeType":"400","messageId":"510","endLine":39,"endColumn":14},{"ruleId":"508","severity":1,"message":"511","line":40,"column":9,"nodeType":"400","messageId":"510","endLine":40,"endColumn":15},{"ruleId":"398","severity":1,"message":"512","line":49,"column":17,"nodeType":"400","messageId":"401","endLine":49,"endColumn":23},{"ruleId":"398","severity":1,"message":"513","line":49,"column":25,"nodeType":"400","messageId":"401","endLine":49,"endColumn":34},{"ruleId":"398","severity":1,"message":"514","line":49,"column":36,"nodeType":"400","messageId":"401","endLine":49,"endColumn":41},{"ruleId":"398","severity":1,"message":"515","line":49,"column":43,"nodeType":"400","messageId":"401","endLine":49,"endColumn":49},{"ruleId":"398","severity":1,"message":"516","line":49,"column":51,"nodeType":"400","messageId":"401","endLine":49,"endColumn":67},{"ruleId":"410","severity":1,"message":"411","line":63,"column":21,"nodeType":"412","messageId":"413","endLine":63,"endColumn":23},{"ruleId":"398","severity":1,"message":"414","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"398","severity":1,"message":"415","line":1,"column":28,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"425","line":3,"column":18,"nodeType":"400","messageId":"401","endLine":3,"endColumn":23},{"ruleId":"398","severity":1,"message":"506","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":13},{"ruleId":"398","severity":1,"message":"517","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":15},{"ruleId":"403","severity":1,"message":"518","line":17,"column":6,"nodeType":"442","endLine":17,"endColumn":8,"suggestions":"519"},"no-native-reassign",["520"],"no-negated-in-lhs",["521"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Timer' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'mounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useState' is defined but never used.",["520"],["521"],"'Button' is defined but never used.","'PlusOutlined' is defined but never used.","'ApiCalendar' is defined but never used.","'shell' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'showModal' is assigned a value but never used.","'Input' is defined but never used.","'breakArray' is assigned a value but never used.","'setBreakArray' is assigned a value but never used.","'PastActions' is defined but never used.","'isDev' is assigned a value but never used.","'path' is assigned a value but never used.","'checkScheduledBreak' is defined but never used.",["520"],["521"],["520"],["521"],"'BreakActions' is defined but never used.",["520"],["521"],"'ScheduledBreakScreen' is defined but never used.","'setOnboardingComplete' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'props.onboarding.awChecked', 'props.onboarding.complete', and 'props.onboarding.user'. Either include them or remove the dependency array.","ArrayExpression",["522"],"'history' is assigned a value but never used.","'BreakManager' is defined but never used.",["520"],["521"],"'Views' is defined but never used.",["520"],["521"],"Expected '!==' and instead saw '!='.","'useSelector' is defined but never used.","'store' is defined but never used.","'StroopTest' is defined but never used.","'ipcRenderer' is assigned a value but never used.","'s1' is assigned a value but never used.","'complte' is assigned a value but never used.","'setComplete' is assigned a value but never used.","'scores' is assigned a value but never used.","'setScore' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'order' is assigned a value but never used.",["520"],["521"],"'Reducer' is defined but never used.","'fork' is defined but never used.",["520"],["521"],["520"],["521"],"'message' is defined but never used.","'sites' is assigned a value but never used.","'setSites' is assigned a value but never used.",["520"],["521"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["520"],["521"],"Parsing error: Identifier 'LoginScreen' has already been declared\n\n\u001b[0m \u001b[90m 15 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mFruitNinjaScreen\u001b[39m \u001b[33m=\u001b[39m lazy(() \u001b[33m=>\u001b[39m \u001b[36mimport\u001b[39m(\u001b[32m\"../screens/FruitNinjaScreen\"\u001b[39m))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mLoginScreen\u001b[39m \u001b[33m=\u001b[39m lazy(() \u001b[33m=>\u001b[39m \u001b[36mimport\u001b[39m(\u001b[32m\"../screens/LoginScreen\"\u001b[39m))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mLoginScreen\u001b[39m \u001b[33m=\u001b[39m lazy(() \u001b[33m=>\u001b[39m \u001b[36mimport\u001b[39m(\u001b[32m\"../screens/LoginScreen\"\u001b[39m))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mAWCheckerScreen\u001b[39m \u001b[33m=\u001b[39m lazy(() \u001b[33m=>\u001b[39m \u001b[36mimport\u001b[39m(\u001b[32m\"../screens/AWCheckerScreen\"\u001b[39m))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mMain\u001b[39m \u001b[33m=\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case",["520"],["521"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["520"],["521"],"'ScriptTag' is defined but never used.","'InnerHTML' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["523"],["524"],"'axios' is defined but never used.","'FruitNinja' is defined but never used.","no-redeclare","'words' is already defined.","redeclared","'colors' is already defined.","'errors' is assigned a value but never used.","'successes' is assigned a value but never used.","'begin' is assigned a value but never used.","'finish' is assigned a value but never used.","'timeLimitReached' is assigned a value but never used.","'Loading' is defined but never used.","React Hook useEffect has a missing dependency: 'awcheck'. Either include it or remove the dependency array.",["525"],"no-global-assign","no-unsafe-negation",{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"528","fix":"530"},{"desc":"531","fix":"532"},"Update the dependencies array to be: [history, props.onboarding.awChecked, props.onboarding.complete, props.onboarding.user]",{"range":"533","text":"534"},"Update the dependencies array to be: [props]",{"range":"535","text":"536"},{"range":"537","text":"536"},"Update the dependencies array to be: [awcheck]",{"range":"538","text":"539"},[1125,1127],"[history, props.onboarding.awChecked, props.onboarding.complete, props.onboarding.user]",[1446,1448],"[props]",[1446,1448],[612,614],"[awcheck]"]