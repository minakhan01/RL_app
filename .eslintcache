[{"/Users/shriramchenniappa/Desktop/personal/RL_app/src/reportWebVitals.js":"1","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/sagas/index.js":"2","/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/DatabaseUpdater/index.js":"3","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/EditScheduledBreaks/index.jsx":"4","/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/activityrule.break.js":"5","/Users/shriramchenniappa/Desktop/personal/RL_app/src/services/awclient.service.js":"6","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Games/stroop_test/index.jsx":"7","/Users/shriramchenniappa/Desktop/personal/RL_app/src/index.js":"8","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/index.js":"9","/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/EventHandler/index.js":"10","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/EditRegularBreaksScreen/index.jsx":"11","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/WeeklyForm/index.jsx":"12","/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/interval.break.js":"13","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/RegularBreaks.jsx":"14","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/types/break.types.js":"15","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/index.js":"16","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/NewHomeScreen/index.jsx":"17","/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/scheduled.break.js":"18","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/AdHocBreaks.jsx":"19","/Users/shriramchenniappa/Desktop/personal/RL_app/src/utils/dates.js":"20","/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/index.js":"21","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/BreakFeedbackScreen/index.jsx":"22","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/break.reducer.js":"23","/Users/shriramchenniappa/Desktop/personal/RL_app/src/services/index.js":"24","/Users/shriramchenniappa/Desktop/personal/RL_app/src/App.js":"25","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/index.jsx":"26","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/CalendarScreen/index.jsx":"27","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/StroopScreen/index.jsx":"28","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/PopupScreen/index.jsx":"29","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/SuddenScreen/index.jsx":"30","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/FinishingUp.jsx":"31","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Games/fruit_ninja_manager.jsx":"32","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Calendar.jsx":"33","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/ScheduledBreaks.jsx":"34","/Users/shriramchenniappa/Desktop/personal/RL_app/src/navigation/index.js":"35","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/AnalyticsScreen/index.jsx":"36","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/onboarding.reducer.js":"37","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/PersonalInformation.jsx":"38","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Loading.js":"39","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/LoginScreen/index.jsx":"40","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/onboarding.action.js":"41","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/types/past.types.js":"42","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/test.reducer.js":"43","/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/index.js":"44","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/CancelScreen/index.jsx":"45","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/CBTestScreen/index.jsx":"46","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Toolbar.js":"47","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/CPTScreen/index.jsx":"48","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/types/onboarding.types.js":"49","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Games/index.jsx":"50","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/SignUpScreen/index.jsx":"51","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/TakeWeeklyScreen/index.jsx":"52","/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/weeklyChecker.js":"53","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/WeeklyPopUp/index.jsx":"54","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/HomeScreen/index.jsx":"55","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/break.action.js":"56","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/PreBreakFeedbackScreen/index.jsx":"57","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Games/stroop_test_manager.jsx":"58","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Games/push_info_end.js":"59","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Games/push_info.jsx":"60","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/AWCheckerInScreen/index.jsx":"61","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/WeeklyQInputScreen/index.jsx":"62","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/BreakScreen/index.jsx":"63","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/EditActivityBreaksScreen/index.jsx":"64","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/FruitNinjaScreen/index.jsx":"65","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/types/index.js":"66"},{"size":362,"mtime":1635575447170,"results":"67","hashOfConfig":"68"},{"size":215,"mtime":1635575447168,"results":"69","hashOfConfig":"68"},{"size":2330,"mtime":1641472714227,"results":"70","hashOfConfig":"68"},{"size":6180,"mtime":1640439478636,"results":"71","hashOfConfig":"68"},{"size":12304,"mtime":1643024992286,"results":"72","hashOfConfig":"68"},{"size":11093,"mtime":1643024207826,"results":"73","hashOfConfig":"68"},{"size":3654,"mtime":1641816157334,"results":"74","hashOfConfig":"68"},{"size":500,"mtime":1635575447163,"results":"75","hashOfConfig":"68"},{"size":444,"mtime":1635575447166,"results":"76","hashOfConfig":"68"},{"size":3472,"mtime":1644996738070,"results":"77","hashOfConfig":"68"},{"size":5432,"mtime":1642415454240,"results":"78","hashOfConfig":"68"},{"size":7387,"mtime":1644997145139,"results":"79","hashOfConfig":"68"},{"size":1513,"mtime":1641065351341,"results":"80","hashOfConfig":"68"},{"size":4342,"mtime":1642415446661,"results":"81","hashOfConfig":"68"},{"size":874,"mtime":1641065595574,"results":"82","hashOfConfig":"68"},{"size":211,"mtime":1635575447164,"results":"83","hashOfConfig":"68"},{"size":1554,"mtime":1636383288082,"results":"84","hashOfConfig":"68"},{"size":2372,"mtime":1636312992063,"results":"85","hashOfConfig":"68"},{"size":16071,"mtime":1641305864796,"results":"86","hashOfConfig":"68"},{"size":3686,"mtime":1635575447189,"results":"87","hashOfConfig":"68"},{"size":1663,"mtime":1644475227536,"results":"88","hashOfConfig":"68"},{"size":13534,"mtime":1642409040176,"results":"89","hashOfConfig":"68"},{"size":5846,"mtime":1641065499021,"results":"90","hashOfConfig":"68"},{"size":127,"mtime":1635575447188,"results":"91","hashOfConfig":"68"},{"size":628,"mtime":1640180287505,"results":"92","hashOfConfig":"68"},{"size":11859,"mtime":1637612986469,"results":"93","hashOfConfig":"68"},{"size":4136,"mtime":1635575447174,"results":"94","hashOfConfig":"68"},{"size":893,"mtime":1635575447186,"results":"95","hashOfConfig":"68"},{"size":2122,"mtime":1635575447184,"results":"96","hashOfConfig":"68"},{"size":3483,"mtime":1645029626316,"results":"97","hashOfConfig":"68"},{"size":5325,"mtime":1641472876225,"results":"98","hashOfConfig":"68"},{"size":551,"mtime":1642239724572,"results":"99","hashOfConfig":"68"},{"size":7612,"mtime":1635575447157,"results":"100","hashOfConfig":"68"},{"size":5300,"mtime":1640439588219,"results":"101","hashOfConfig":"68"},{"size":5656,"mtime":1642411133335,"results":"102","hashOfConfig":"68"},{"size":6531,"mtime":1635575447172,"results":"103","hashOfConfig":"68"},{"size":6838,"mtime":1642507026113,"results":"104","hashOfConfig":"68"},{"size":4546,"mtime":1641812974775,"results":"105","hashOfConfig":"68"},{"size":321,"mtime":1635575447161,"results":"106","hashOfConfig":"68"},{"size":3019,"mtime":1639138837870,"results":"107","hashOfConfig":"68"},{"size":2071,"mtime":1639138317318,"results":"108","hashOfConfig":"68"},{"size":440,"mtime":1636312992066,"results":"109","hashOfConfig":"68"},{"size":290,"mtime":1635575447168,"results":"110","hashOfConfig":"68"},{"size":649,"mtime":1642408508880,"results":"111","hashOfConfig":"68"},{"size":3186,"mtime":1635575447175,"results":"112","hashOfConfig":"68"},{"size":2090,"mtime":1644997151544,"results":"113","hashOfConfig":"68"},{"size":2644,"mtime":1642408445908,"results":"114","hashOfConfig":"68"},{"size":3923,"mtime":1636312992068,"results":"115","hashOfConfig":"68"},{"size":933,"mtime":1639138398674,"results":"116","hashOfConfig":"68"},{"size":9900,"mtime":1642597734295,"results":"117","hashOfConfig":"68"},{"size":5105,"mtime":1641812946330,"results":"118","hashOfConfig":"68"},{"size":9056,"mtime":1644997352397,"results":"119","hashOfConfig":"68"},{"size":1252,"mtime":1642408461912,"results":"120","hashOfConfig":"68"},{"size":1479,"mtime":1641817705194,"results":"121","hashOfConfig":"68"},{"size":10083,"mtime":1642173663959,"results":"122","hashOfConfig":"68"},{"size":2023,"mtime":1641065450159,"results":"123","hashOfConfig":"68"},{"size":9800,"mtime":1642407599298,"results":"124","hashOfConfig":"68"},{"size":2059,"mtime":1642409153529,"results":"125","hashOfConfig":"68"},{"size":1335,"mtime":1642508816574,"results":"126","hashOfConfig":"68"},{"size":1272,"mtime":1642508735974,"results":"127","hashOfConfig":"68"},{"size":5221,"mtime":1642411119378,"results":"128","hashOfConfig":"68"},{"size":2429,"mtime":1641065911419,"results":"129","hashOfConfig":"68"},{"size":2689,"mtime":1637146217615,"results":"130","hashOfConfig":"68"},{"size":17980,"mtime":1641305819125,"results":"131","hashOfConfig":"68"},{"size":899,"mtime":1635575447179,"results":"132","hashOfConfig":"68"},{"size":141,"mtime":1635575447169,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"tn93fm",{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"157"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"157"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"157"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"238"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"238"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"157"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"306"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"187"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shriramchenniappa/Desktop/personal/RL_app/src/reportWebVitals.js",[],["315","316"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/sagas/index.js",["317"],"import { all, fork } from \"redux-saga/effects\";\n\n// Sagas\n// import adminSaga from \"./admin.saga\";\n\n// Connect types to sagas\nexport const rootSaga = function* root() {\n  yield all([\n    // fork(adminSaga)\n  ]);\n};\n",["318","319"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/DatabaseUpdater/index.js",["320","321"],"import { BreakActions, PastActions } from \"../../redux/actions\";\nimport { store } from \"../../redux\";\nimport { AWClientService } from \"../../services\";\nimport axios from \"axios\";\nlet client = new AWClientService();\n\n//TO-DO: Modify functions according to which data to backup. Currenly backing up active windows\n\n//updates the local database with data from activity watch, and adds a minute of runnning time to THIS APP for use for interval-break\nexport default function updateDatabase() {\n  // client.getActiveWindowsSinceBeginning().then((dat) => {\n  //   let back = {\n  //     type: \"active-windows\",\n  //     data: dat,\n  //   }\n  //   store.dispatch(PastActions.backupAWData(back))\n  // })\n\n  //Also backing up today's total screen time per app, although unnecessary\n  client.getAppTotals().then(async (dat) => {\n    let all = dat.appTotal;\n    let web = dat.websiteTotals;\n\n    for await (let webInd of web) {\n      delete webInd.data[\"url\"];\n      delete webInd.data[\"$path\"];\n      delete webInd.data[\"$identifier\"];\n      delete webInd.data[\"$options\"];\n      delete webInd.data[\"$params\"];\n      delete webInd.data[\"$protocol\"];\n      webInd.data[\"domain\"] = webInd.data[\"$domain\"];\n      delete webInd.data[\"$domain\"];\n    }\n    let complete = false;\n\n    let i = 0;\n    while (!complete) {\n      let finAll = [];\n      let finWeb = [];\n      let start = false;\n      if (all[i]) {\n        finAll = all.slice(i, i + 50);\n      }\n      if (web[i]) {\n        finWeb = web.slice(i, i + 50);\n      }\n      if (i === 0) {\n        start = true;\n      }\n      let today = new Date();\n      today.setHours(0, 0, 0, 0);\n      let tomorrow = new Date();\n      tomorrow.setHours(23, 59, 59, 999);\n      let body = {\n        user: store.getState().onboarding.user._id,\n        appTotal: finAll,\n        websiteTotals: finWeb,\n        start,\n        today: today,\n        tomorrow: tomorrow,\n        timestamp: new Date(),\n      };\n      let response = await axios.post(\n        \"https://thepallab.com/api/user/aw\",\n        body\n      );\n      i += 50;\n      if (!all[i] && !web[i]) {\n        complete = true;\n      }\n    }\n\n    // console.log(\"data\", dat);\n    // let back = {\n    //   type: \"screen-time\",\n    //   data: dat,\n    // }\n    //\n  });\n\n  //adding a minute of running time\n  store.dispatch(PastActions.addMinute());\n}\n",["322","323"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/EditScheduledBreaks/index.jsx",["324","325"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/activityrule.break.js",["326","327"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/services/awclient.service.js",["328","329","330","331","332"],"import { AWClient } from \"aw-client\";\n\nclass AWClientService {\n  constructor() {\n    this.client = new AWClient(\"test-client\");\n    this.todayDate = new Date();\n    this.tmrwDate = new Date();\n    this.yestDate = new Date();\n    this.yestDate.setDate(this.yestDate.getDate() - 1);\n    this.yestDate.setHours(0, 0, 0, 0);\n    this.todayDate.setHours(0, 0, 0, 0);\n    this.tmrwDate.setHours(23, 59, 59, 999);\n    this.todayDate = this.todayDate.toISOString();\n    this.tmrwDate = this.tmrwDate.toISOString();\n    this.client.getBuckets().then((buckets) => {\n      this.bucketMap = {};\n      for (var bucketid in buckets) {\n        this.bucketMap[buckets[bucketid].client] = bucketid;\n      }\n    });\n  }\n\n  createBucketMap() {\n    return this.client.getBuckets().then((buckets) => {\n      this.bucketMap = {};\n      for (var bucketid in buckets) {\n        this.bucketMap[buckets[bucketid].client] = bucketid;\n      }\n    });\n  }\n\n  updateDate() {\n    this.todayDate = new Date();\n    this.tmrwDate = new Date();\n    this.yestDate = new Date();\n    this.yestDate.setDate(this.yestDate.getDate() - 1);\n    this.yestDate.setHours(0, 0, 0, 0);\n    this.todayDate.setHours(0, 0, 0, 0);\n    this.tmrwDate.setHours(23, 59, 59, 999);\n    this.todayDate = this.todayDate.toISOString();\n    this.tmrwDate = this.tmrwDate.toISOString();\n  }\n\n  //get today's active windows in order\n  async getActiveWindows() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n      const query = [\n        \"RETURN=query_bucket('\" + this.bucketMap[\"aw-watcher-window\"] + \"')\",\n      ];\n      const activeWindows = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n      return activeWindows[0];\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  //get all active windows since the beginning\n  async getActiveWindowsSinceBeginning() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n      const query = [\n        \"RETURN=query_bucket('\" + this.bucketMap[\"aw-watcher-window\"] + \"')\",\n      ];\n      const activeWindows = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n      return activeWindows[0];\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  //get today's afk in order\n  async getAFK() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n\n      var query = [\n        \"bucket='\" + this.bucketMap[\"aw-watcher-afk\"] + \"';\",\n        \"RETURN=query_bucket(bucket);\",\n      ];\n      const afk = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n      return afk[0];\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getAppTotals() {\n    const chrome = [\n      // Chrome\n      \"Google Chrome\",\n      \"Google-chrome\",\n      \"chrome.exe\",\n      \"google-chrome-stable\",\n    ];\n\n    this.updateDate();\n    if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n\n    var query = [\n      \"window_events = query_bucket(find_bucket('aw-watcher-window_'));\",\n      \"merged_events = merge_events_by_keys(window_events, ['app', 'title']);\",\n      \"RETURN = sort_by_duration(merged_events);\"\n    ];\n    var queryUnmerged = [\n      \"window_events = query_bucket(find_bucket('aw-watcher-window_'));\",\n      \"events = sort_by_timestamp(window_events);\",\n      \"RETURN = events;\",\n    ];\n    const queryWindows = [\n      \"window_events = query_bucket('\" + \"aw-watcher-web-chrome\" + \"');\",\n      \"window_events_active = query_bucket(find_bucket('aw-watcher-window_'));\",\n      \"window_events_active = filter_keyvals(window_events_active, 'app', ['Google Chrome','Google Chrome','Google-chrome','chrome.exe','google-chrome-stable','Chromium','Chromium-browser','Chromium-browser-chromium','chromium.exe','Google-chrome-beta','Google-chrome-unstable','Brave-browser','brave.exe']);\",\n      \"window_events = filter_period_intersect(window_events, window_events_active);\",\n      \"events = merge_events_by_keys(window_events, ['title','url']);\",\n      \"events = sort_by_duration(window_events);\",\n      \"events = split_url_events(events);\",\n      \"RETURN = events;\",\n    ];\n    const queryWindowsUnmerged = [\n      \"window_events = query_bucket('\" + \"aw-watcher-web-chrome\" + \"');\",\n      \"window_events_active = query_bucket(find_bucket('aw-watcher-window_'));\",\n      `not_afk = query_bucket(find_bucket(\"aw-watcher-afk_\"));\n          not_afk = filter_keyvals(not_afk, \"status\", [\"not-afk\"]);`,\n      `audible_events = filter_keyvals(window_events, \"audible\", [true]);`,\n      \"window_events_active = filter_keyvals(window_events_active, 'app', ['Google Chrome','Google Chrome','Google-chrome','chrome.exe','google-chrome-stable','Chromium','Chromium-browser','Chromium-browser-chromium','chromium.exe','Google-chrome-beta','Google-chrome-unstable','Brave-browser','brave.exe']);\",\n      \"window_events_active = filter_period_intersect(window_events_active, not_afk);\",\n      \"window_events = filter_period_intersect(window_events, window_events_active);\",\n      `window_events = concat(window_events, audible_events);`,\n      \"events = sort_by_timestamp(window_events);\",\n      \"RETURN = events;\",\n    ];\n    let should_error = false;\n    let appTotalWithoutAudio;\n    let appTotalWithoutAudioUnmerged;\n    let websiteTotals;\n    let websiteTotalsUnmerged;\n\n    try {\n      appTotalWithoutAudio = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n    } catch (error) {\n      should_error = true;\n      appTotalWithoutAudio = [[]];\n      console.log(\"error in apptot\", error);\n    }\n\n    try {\n      appTotalWithoutAudioUnmerged = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        queryUnmerged\n      );\n    } catch (error) {\n      should_error = true;\n      appTotalWithoutAudioUnmerged = [[]];\n      console.log(\"error in apptot unmerged\", error);\n    }\n\n    try {\n      websiteTotals = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        queryWindows\n      );\n    } catch (error) {\n      should_error = true;\n      websiteTotals = [[]];\n      console.log(\"error in webtot\", error);\n    }\n\n    try {\n      websiteTotalsUnmerged = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        queryWindowsUnmerged\n      );\n    } catch (error) {\n      should_error = true;\n      websiteTotalsUnmerged = [[]];\n      console.log(\"error in webtot unmerged\", error);\n    }\n\n    return {\n      appTotal: appTotalWithoutAudio[0],\n      websiteTotals: websiteTotals[0],\n      websiteTotalsUnmerged: websiteTotalsUnmerged[0],\n      appTotalWithoutAudioUnmerged: appTotalWithoutAudioUnmerged[0],\n      should_error,\n    };\n  }\n\n  async getAppTotalsTwo() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n\n      var query = [\n        // Fetch window/app events\n        `events = flood(query_bucket(\"${this.bucketMap[\"aw-watcher-window\"]}\"));`,\n        // Fetch not-afk events\n        `not_afk = flood(query_bucket(\"${this.bucketMap[\"aw-watcher-afk\"]}\"));\n          not_afk = filter_keyvals(not_afk, \"status\", [\"not-afk\"]);`,\n\n        // Filter out window events when the user was afk\n        \"events = filter_period_intersect(events, not_afk);\",\n        \"RETURN = events;\",\n      ];\n      // var query = [\n      //   \"window_events = query_bucket('\" +\n      //     this.bucketMap[\"aw-watcher-window\"] +\n      //     \"');\",\n      //   // \"events = merge_events_by_keys(window_events, ['app','title']);\",\n      //   \"events = sort_by_timestamp(window_events);\",\n      //   \"RETURN = events;\",\n      // ];\n      const appTotalWithoutAudio = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n\n      return {\n        appTotal: appTotalWithoutAudio[0],\n      };\n    } catch (error) {\n      console.log(\"error\", error);\n      throw error;\n    }\n  }\n\n  //find total time per app in the day excluding video streaming AFK\n  async getAppTotalsIntersectAFKWithoutAudio() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n\n      var query = [\n        \"window_events = query_bucket('\" +\n        this.bucketMap[\"aw-watcher-window\"] +\n        \"');\",\n        \"not_afk_events = query_bucket('\" +\n        this.bucketMap[\"aw-watcher-afk\"] +\n        \"');\",\n        \"not_afk_events = filter_keyvals(not_afk_events, 'status', ['not-afk']);\",\n        \"window_events = filter_period_intersect(window_events, not_afk_events);\",\n        \"events = merge_events_by_keys(window_events, ['app']);\",\n        \"events = sort_by_duration(events);\",\n        \"RETURN = events;\",\n      ];\n      const appTotalWithoutAudio = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n      return appTotalWithoutAudio[0];\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  //find total time per app in the day including video streaming AFK\n  async getAppTotalIntersectAFKWithAudio() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n\n      var query = [\n        \"window_events = query_bucket('\" +\n        this.bucketMap[\"aw-watcher-window\"] +\n        \"');\",\n        \"not_afk_events = query_bucket('\" +\n        this.bucketMap[\"aw-watcher-afk\"] +\n        \"');\",\n        \"not_afk_events = filter_keyvals(not_afk_events, 'status', ['not-afk']);\",\n        \"web_events = query_bucket('\" + this.bucketMap[\"aw-client-web\"] + \"');\",\n        \"audible_events = filter_keyvals(web_events, 'audible', [true]);\",\n        \"afk_events = query_bucket('\" +\n        this.bucketMap[\"aw-watcher-afk\"] +\n        \"');\",\n        \"afk_events = filter_keyvals(afk_events, 'status', ['afk']);\",\n        \"audible_afk_events = filter_period_intersect(audible_events,afk_events);\",\n        \"not_afk_events = concat(not_afk_events, audible_afk_events);\",\n        \"window_events = filter_period_intersect(window_events, not_afk_events);\",\n        \"events = merge_events_by_keys(window_events, ['app','url']);\",\n        \"events = sort_by_duration(events);\",\n        \"RETURN = events;\",\n      ];\n\n      const appTotalWithAudio = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n      return appTotalWithAudio[0];\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  //find currently active window\n  async getCurrentlyActiveWindow() {\n    try {\n      this.updateDate();\n      if (typeof this.bucketMap === \"undefined\") await this.createBucketMap();\n\n      var query = [\n        \"RETURN=query_bucket('\" + this.bucketMap[\"aw-watcher-window\"] + \"')\",\n      ];\n\n      const activeWindows = await this.client.query(\n        [this.todayDate + \"/\" + this.tmrwDate],\n        query\n      );\n      return activeWindows[0][0];\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\nexport default AWClientService;\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Games/stroop_test/index.jsx",["333","334","335","336","337","338","339","340","341","342"],"import React from \"react\";\nimport Stroop from \"@orcatech/react-neuropsych-stroop\";\nimport { useState, useEffect } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction StroopTest(props) {\n  const [count, setCount] = useState({\n    total: 0,\n    score: {\n      times: [],\n      score: 0,\n    },\n    lastResult: \"\",\n    words: [],\n    colors: [],\n  });\n\n  useEffect(() => {\n    let tempcount = { ...count };\n    let now = new Date();\n    tempcount.score.times.push(now);\n    setCount(tempcount);\n  }, []);\n\n  if (count.colors.length == 0) {\n    var words = [\n      \"purple\",\n      \"black\",\n      \"green\",\n      \"red\",\n      \"blue\",\n      \"orange\",\n      \"pink\",\n      \"yellow\",\n    ];\n    var words2 = [...words];\n    var colors = [\n      \"9370D8\",\n      \"000000\",\n      \"009900\",\n      \"ff0000\",\n      \"000099\",\n      \"EE7600\",\n      \"FF69B4\",\n      \"FFFF00\",\n    ];\n    var colors2 = [...colors];\n\n    words2 = words.slice(0, props.len || 4);\n    colors2 = colors.slice(0, props.len || 4);\n\n    words = [...words2];\n    colors = [...colors];\n\n    shuffleArray(words2);\n    colors2 = [];\n    words2.forEach((word) => {\n      colors2.push(colors[words.indexOf(word)]);\n    });\n\n    setCount({ ...count, words: words2, colors: colors2 });\n  }\n\n  var words = count.words;\n  var colors = count.colors;\n\n  const combos = [\n    {\n      word: Math.floor(Math.random() * words.length),\n      color: Math.floor(Math.random() * words.length),\n    },\n  ];\n\n  var onComplete = (data) => {\n    // handle test completion\n    const { errors, successes, begin, finish, timeLimitReached } = data;\n    //setCount({ ...count, total: count.total + 1 })\n  };\n\n  var onSuccess = (data) => {\n    let tempcount = { ...count };\n    let now = new Date();\n    tempcount.score.times.push(now);\n    tempcount.score.score = tempcount.score.score + 1;\n    setCount({\n      ...count,\n      total: count.total + 1,\n      score: tempcount.score,\n      lastResult: \"Correct!\",\n    });\n    // handle each success that occurs\n  };\n\n  var onError = (data) => {\n    let tempcount = { ...count };\n    let now = new Date();\n    tempcount.score.times.push(now);\n    setCount({\n      ...count,\n      total: count.total + 1,\n      score: tempcount.score,\n      lastResult: \"Wrong!\",\n    });\n    // handle each error that occurs\n  };\n  if (count.total == 3) {\n    props.onComplete(count.score);\n    return <>Test completed. The score is {count.score.score}</>;\n  }\n  return (\n    <div\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n      key={count.total}\n    >\n      <div>Question {count.total + 1}</div>\n      <CountdownCircleTimer\n        onComplete={() => {\n          setCount({\n            ...count,\n            total: count.total + 1,\n            lastResult: \"Out of time!\",\n          });\n        }}\n        isPlaying\n        duration={10}\n        size={100}\n        colors=\"#000000\"\n        strokeWidth={6}\n      >\n        {({ remainingTime }) => remainingTime}\n      </CountdownCircleTimer>\n\n      <Stroop\n        buttonsPerRow={words.length / 2}\n        colors={colors}\n        combos={combos}\n        onComplete={onComplete}\n        onError={onError}\n        onSuccess={onSuccess}\n        words={words}\n        incorrectMessage=\"Incorrect!\"\n        completionMessage=\"Out of time!\"\n        timeLimit={0}\n      />\n      <div>{count.lastResult}</div>\n      <div>{count.score.score}</div>\n    </div>\n  );\n}\n\nexport default StroopTest;\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/index.js",[],["343","344"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/index.js",["345"],"import { combineReducers, Reducer } from \"redux\";\nimport TestReducer from \"./test.reducer\";\nimport OnboardingReducer from \"./onboarding.reducer\";\nimport BreakReducer from \"./break.reducer\";\nimport PastReducer from \"./past.reducer\";\n\n\nconst allReducers = {\n  onboarding: OnboardingReducer,\n  test: TestReducer,\n  break: BreakReducer,\n  past: PastReducer,\n};\n\nconst rootReducer = combineReducers({ ...allReducers });\n\nexport default rootReducer;\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/EventHandler/index.js",["346","347"],"import { BreakActions, PastActions } from \"../../redux/actions\";\nimport { store } from \"../../redux\";\nvar electron = window.require(\"electron\");\nvar curWindow = electron.remote.getCurrentWindow();\nconst isDev = window.require(\"electron-is-dev\");\nconst path = window.require(\"path\");\n\n//handles window and route changes when break-state changes\nexport default function eventHandler(history) {\n  //sets screen back to normal if no break\n  if (\n    store.getState().break.breakState === \"no-break\" &&\n    !store.getState().break.windowChanged\n  ) {\n    curWindow.setOpacity(1);\n    curWindow.unmaximize();\n    curWindow.setSize(1400, 800);\n    curWindow.minimize();\n    history.push(\"/\");\n    store.dispatch(BreakActions.setWindowChanged());\n    curWindow.setVisibleOnAllWorkspaces(false, {visibleOnFullScreen: false});\n    curWindow.setAlwaysOnTop(false);\n    curWindow.reload();\n  }\n\n  //sets screen to popup window size if break-popup\n  else if (\n    store.getState().break.breakState === \"break-popup\" &&\n    !store.getState().break.windowChanged\n  ) {\n    curWindow.minimize();\n    curWindow.setVisibleOnAllWorkspaces(true, {visibleOnFullScreen: true});\n    curWindow.setAlwaysOnTop(true, \"pop-up-menu\");\n    curWindow.restore();\n    history.push(\"/popup\");\n    //curWindow.maximize()\n    curWindow.unmaximize();\n    curWindow.setSize(1400, 800);\n    curWindow.center();\n\n    store.dispatch(BreakActions.setWindowChanged());\n  } else if (store.getState().break.breakState === \"pre-break-feedback\") {\n    history.push(\"/prefeedback\");\n    curWindow.center();\n  } else if (store.getState().break.breakState === \"break-stroop\") {\n    history.push(\"/stroop\");\n    curWindow.center();\n  } else if (store.getState().break.breakState === \"break-fruit\") {\n    curWindow.unmaximize();\n    curWindow.setSize(1400, 800);\n    curWindow.setOpacity(1);\n    curWindow.center();\n\n    curWindow.setMovable(true);\n    history.push(\"/fruit\");\n  } else if (store.getState().break.breakState === \"break-feedback\") {\n    curWindow.maximize();\n    curWindow.setVisibleOnAllWorkspaces(false, {visibleOnFullScreen: false});\n    curWindow.setAlwaysOnTop(false);\n    history.push(\"/feedback\");\n  }\n  else if (store.getState().break.breakState === \"cancel-break\") {\n    curWindow.setOpacity(1);\n    curWindow.setSize(1400, 800);\n    curWindow.setVisibleOnAllWorkspaces(false, {visibleOnFullScreen: false});\n    curWindow.setAlwaysOnTop(false);\n  }\n\n  //sets window to full screen if break, and also ends the break after break time is over\n  else if (\n    store.getState().break.breakState === \"break\" &&\n    !store.getState().break.windowChanged\n  ) {\n    curWindow.setOpacity(0.8);\n    curWindow.maximize();\n    curWindow.setAlwaysOnTop(true);\n\n    history.push(\"/break\");\n    store.dispatch(BreakActions.setWindowChanged());\n    let s1 = store.getState().break.breakStartTime;\n    setTimeout(() => {\n      if (\n        store.getState().break.breakState === \"break\" &&\n        s1 === store.getState().break.breakStartTime\n      ) {\n        store.dispatch(BreakActions.startFruit());\n      }\n    }, store.getState().break.breakDuration * 1000);\n  } else if (store.getState().onboarding.weeklyRem) {\n    curWindow.restore();\n    // history.push(\"/weekpop\");\n    //curWindow.maximize()\n    curWindow.unmaximize();\n    curWindow.setSize(1400, 800);\n    curWindow.center();\n    setTimeout(() => {\n      store.dispatch(PastActions.setWeeklyRem(false));\n      history.push(\"/home\");\n    }, 60000);\n  }\n}\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/EditRegularBreaksScreen/index.jsx",["348"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Input, Button } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { OnboardingActions } from \"../../redux/actions\";\n\nimport \"./styles.css\";\n\nconst EditRegularBreakScreen = (props) => {\n  const history = useHistory();\n  const [hours, setHours] = useState(\n    Math.floor(props.onboarding.tempRegularBreakInterval / 60)\n  );\n  const [mins, setmins] = useState(\n    props.onboarding.tempRegularBreakInterval % 60\n  );\n  return (\n    <div className=\"step-container\" style={{ padding: \"5%\" }}>\n      <h1>Regular Breaks</h1>\n      <div style={{ marginTop: \"3%\" }}>\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\n          How often would you like to take regular breaks?\n        </p>\n        <div\n          style={{\n            marginTop: \"1%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Input\n            size=\"large\"\n            style={{ width: \"10%\", borderRadius: 5, verticalAlign: \"center\" }}\n            placeholder=\"Interval\"\n            type=\"number\"\n            value={hours.toString()}\n            onChange={(e) => {\n              if (\n                e.target.value.length > 0 &&\n                parseInt(e.target.value) < 61 &&\n                parseInt(e.target.value) > -1\n              ) {\n                setHours(parseInt(e.target.value));\n              } else {\n                setHours(\"0\");\n              }\n            }}\n          />\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\n            hour(s)\n          </p>\n          <Input\n            size=\"large\"\n            style={{\n              width: \"10%\",\n              borderRadius: 5,\n              verticalAlign: \"center\",\n              marginLeft: \"2%\",\n            }}\n            placeholder=\"Interval\"\n            type=\"number\"\n            value={mins.toString()}\n            onChange={(e) => {\n              if (\n                e.target.value.length > 0 &&\n                parseInt(e.target.value) < 61 &&\n                parseInt(e.target.value) > -1\n              ) {\n                setmins(parseInt(e.target.value));\n              } else {\n                setmins(\"0\");\n              }\n            }}\n          />\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\n            minutes(s)\n          </p>\n        </div>\n      </div>\n      <div style={{ marginTop: \"3%\" }}>\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\n          How long would you like your breaks to be?\n        </p>\n        <div\n          style={{\n            marginTop: \"1%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Input\n            size=\"large\"\n            style={{ width: \"10%\", borderRadius: 5, verticalAlign: \"center\" }}\n            placeholder=\"Length\"\n            type=\"number\"\n            value={props.onboarding.tempRegularBreakLength.toString()}\n            onChange={(e) => {\n              if (\n                e.target.value.length > 0 &&\n                parseInt(e.target.value) < 61 &&\n                parseInt(e.target.value) > -1\n              ) {\n                props.addTempReg(parseInt(e.target.value), 60 * hours + mins);\n              } else {\n                props.addTempReg(parseInt(\"\"), 60 * hours + mins);\n              }\n            }}\n          />\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\n            minutes\n          </p>\n        </div>\n      </div>\n      <div>\n        <p>\n          You will get a break every {hours.toString()} hour(s) and{\" \"}\n          {mins.toString()} minute(s) for a duration of{\" \"}\n          {props.onboarding.tempRegularBreakLength.toString()} minute(s).\n        </p>\n      </div>\n\n      <Button\n        onClick={() => {\n          history.push(\"/home\");\n        }}\n      >\n        Cancel\n      </Button>\n      <Button\n        onClick={async () => {\n          props.addTempReg(\n            props.onboarding.tempRegularBreakLength,\n            60 * hours + mins\n          );\n          let body = {\n            regularBreakLength: props.onboarding.tempRegularBreakLength,\n            regularBreakInterval: 60 * hours + mins,\n            user: props.onboarding.user._id,\n          };\n          let response = await axios.post(\n            \"https://thepallab.com/api/user/update-onb\",\n            body\n          );\n          if (response.data.message === \"Successful Update\") {\n            props.setRegularBreakInterval(60 * hours + mins);\n            props.setRegularBreakLength(\n              props.onboarding.tempRegularBreakLength\n            );\n            history.push(\"/home\");\n          }\n        }}\n      >\n        Update Regular Breaks\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setRegularBreakInterval: OnboardingActions.setRegularBreakInterval,\n      setRegularBreakLength: OnboardingActions.setRegularBreakLength,\n      addTempReg: OnboardingActions.addTempReg,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditRegularBreakScreen);\n",["349","350"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/WeeklyForm/index.jsx",["351"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/interval.break.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/RegularBreaks.jsx",["352"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Input } from \"antd\";\n\nimport { OnboardingActions } from \"../../redux/actions\";\n\nimport \"./styles.css\";\n\nconst RegularBreakScreen = (props) => {\n  const [hours, setHours] = useState(1);\n  const [mins, setmins] = useState(0);\n  return (\n    <div className=\"step-container\">\n      <h1>Regular Breaks</h1>\n      <div style={{ marginTop: \"3%\" }}>\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\n          How often would you like to take regular breaks?\n        </p>\n        <div\n          style={{\n            marginTop: \"1%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Input\n            size=\"large\"\n            style={{ width: \"10%\", borderRadius: 5, verticalAlign: \"center\" }}\n            placeholder=\"Interval\"\n            type=\"number\"\n            value={hours.toString()}\n            onChange={(e) => {\n              if (\n                e.target.value.length > 0 &&\n                parseInt(e.target.value) < 61 &&\n                parseInt(e.target.value) > -1\n              ) {\n                setHours(parseInt(e.target.value));\n                props.setRegularBreakInterval(\n                  parseInt(e.target.value) * 60 + mins\n                );\n              } else {\n                setHours(\"0\");\n                props.setRegularBreakInterval(mins);\n              }\n            }}\n          />\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\n            Hour(s)\n          </p>\n          <Input\n            size=\"large\"\n            style={{ width: \"10%\", borderRadius: 5, verticalAlign: \"center\" }}\n            placeholder=\"Interval\"\n            type=\"number\"\n            value={mins.toString()}\n            onChange={(e) => {\n              if (\n                e.target.value.length > 0 &&\n                parseInt(e.target.value) < 61 &&\n                parseInt(e.target.value) > -1\n              ) {\n                setmins(parseInt(e.target.value));\n                props.setRegularBreakInterval(hours * 60 + parseInt(e.target.value));\n              } else {\n                setmins(\"0\");\n                props.setRegularBreakInterval(hours * 60);\n              }\n            }}\n          />\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\n            Minute(s)\n          </p>\n        </div>\n      </div>\n      <div style={{ marginTop: \"3%\" }}>\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\n          How long would you like your breaks to be?\n        </p>\n        <div\n          style={{\n            marginTop: \"1%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Input\n            size=\"large\"\n            style={{ width: \"10%\", borderRadius: 5, verticalAlign: \"center\" }}\n            placeholder=\"Length\"\n            type=\"number\"\n            value={props.onboarding.regularBreakLength.toString()}\n            onChange={(e) => {\n              if (\n                e.target.value.length > 0 &&\n                parseInt(e.target.value) < 61 &&\n                parseInt(e.target.value) > -1\n              ) {\n                props.setRegularBreakLength(parseInt(e.target.value));\n              } else {\n                props.setRegularBreakLength(parseInt(\"\"));\n              }\n            }}\n          />\n          <p style={{ marginTop: \"1%\", marginLeft: \"1%\", fontSize: \"15px\" }}>\n            minutes\n          </p>\n        </div>\n      </div>\n      <div>\n        <p>\n          You will get a break every{\" \"}\n          {hours.toString()} hour(s) and {\" \"} {mins.toString()} minute(s) for a\n          duration of {props.onboarding.regularBreakLength.toString()} minutes.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setRegularBreakInterval: OnboardingActions.setRegularBreakInterval,\n      setRegularBreakLength: OnboardingActions.setRegularBreakLength,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegularBreakScreen);\n",["353","354"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/types/break.types.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/index.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/NewHomeScreen/index.jsx",["355","356","357","358","359"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Button, Tabs, Modal } from \"antd\";\nimport { OnboardingActions } from \"../../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport CalendarComponent from \"../../components/Calendar\";\nimport AnalyticsScreen from \"../AnalyticsScreen\";\nimport AWScreen from \"../AWScreen\";\nimport HomeScreen from \"../HomeScreen\";\nimport TakeWeeklyScreen from \"../TakeWeeklyScreen\";\nconst { TabPane } = Tabs;\n\nconst NewHomeScreen = (props) => {\n  const history = useHistory();\n\n  return (\n    <div>\n      <div>\n        <Tabs defaultActiveKey=\"1\" type=\"card\" size={\"large\"}>\n          <TabPane tab=\"Break Settings\" key=\"1\">\n            <HomeScreen />\n          </TabPane>\n          <TabPane tab=\"Past Breaks\" key=\"2\">\n            <CalendarComponent />\n          </TabPane>\n          <TabPane tab=\"Emotion & Cognition\" key=\"3\">\n            <AnalyticsScreen />\n          </TabPane>\n          <TabPane tab=\"Computer Usage\" key=\"4\">\n            <AWScreen />\n          </TabPane>\n          <TabPane tab=\"Weekly Form\" key=\"5\">\n            <TakeWeeklyScreen />\n          </TabPane>\n        </Tabs>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding, break: state.break };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ resetInfo: OnboardingActions.reset }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewHomeScreen);\n",["360","361"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/scheduled.break.js",["362"],"import { BreakActions, PastActions } from \"../../redux/actions\";\nimport { store } from \"../../redux\";\n\n//TO DO: CONNECT WITH ACTUAL USER SETTINGS. Currently not hardcoded anything\n\n//Checks whether Scheduled break is triggered\nexport default function checkScheduledBreak() {\n  //Scheduled break if condition goes here\n  let weekDays = [\n    \"sunday\",\n    \"monday\",\n    \"tuesday\",\n    \"wednesday\",\n    \"thursday\",\n    \"friday\",\n    \"saturday\",\n  ];\n  let onboardingProps = store.getState().onboarding;\n  for (let indBreak of onboardingProps[\"scheduledBreaks\"]) {\n    let timeNow = new Date();\n    let dayVal = weekDays[timeNow.getDay()];\n    if (indBreak.day === dayVal) {\n      let startTime = new Date(indBreak.start);\n      let endTime = new Date(indBreak.end);\n      let currentStart = new Date();\n      currentStart.setHours(startTime.getHours(), startTime.getMinutes(), 0, 0);\n      let currentEnd = new Date();\n      currentEnd.setHours(endTime.getHours(), endTime.getMinutes(), 0, 0);\n      let lastEndTime = new Date(store.getState().past.lastScheduledBreak);\n      if (currentStart <= timeNow && currentEnd >= timeNow) {\n        if (\n          !(store.getState().break.breakState === \"break\") &&\n          !(store.getState().break.breakState === \"break-feedback\") &&\n          !(store.getState().break.breakState === \"break-popup\") &&\n          !(store.getState().break.breakState === \"break-stroop\") &&\n          !(store.getState().break.breakState === \"break-fruit\") &&\n          !(store.getState().break.breakState === \"cancel-break\") &&\n          !(store.getState().break.breakState === \"pre-break-feedback\") &&\n          !(lastEndTime > currentStart)\n        ) {\n          let timeNowNew = new Date();\n          let breakData = {\n            breakType: \"scheduled\",\n            breakDescription: \"NA\",\n            breakStartTime: timeNowNew,\n            breakDuration: (currentEnd - timeNow) / 1000,\n            breakEndTime: indBreak.end,\n          };\n          store.dispatch(BreakActions.startPopup(timeNowNew, breakData));\n          setTimeout(() => {\n            if (\n              store.getState().break.breakState === \"break-popup\" &&\n              store.getState().break.popupStartTime === timeNowNew\n            ) {\n              store.dispatch(BreakActions.startPrebreakfeedback());\n            }\n          }, 10000);\n        }\n      }\n    }\n  }\n}\n",["363","364"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/AdHocBreaks.jsx",["365","366","367","368","369"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Input, Menu, Dropdown, Button, Modal, message, Checkbox } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\n\nimport { OnboardingActions } from \"../../redux/actions\";\n\nimport \"./styles.css\";\n\nconst AdHocBreakScreen = (props) => {\n  const [siteName, setSiteName] = useState(\"\");\n  const [siteUrl, setSiteUrl] = useState(\"\");\n  const [isWeb, setIsWeb] = useState(true);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [sites, setSites] = useState([\n    { name: \"Youtube\", url: \"https://www.youtube.com\", key: \"1\" },\n  ]);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setSiteName(\"\");\n    setSiteUrl(\"\");\n    setIsWeb(true);\n  };\n\n  const menu = (mainIndex) => (\n    <Menu\n      onClick={({ key }) => {\n        if (key === (props.onboarding.overRideSites.length + 1).toString()) {\n          setIsModalVisible(true);\n        } else {\n          let keyInt = parseInt(key);\n          let tempArray = props.onboarding.allOverRides;\n          let tempObj = tempArray[mainIndex];\n          let siteObject = props.onboarding.overRideSites[keyInt - 1];\n          tempObj.name = siteObject.name;\n          tempObj.url = siteObject.url;\n          tempObj.isWebsite = siteObject.isWebsite\n            ? siteObject.isWebsite\n            : true;\n          tempArray[mainIndex] = tempObj;\n          props.setAllOverrides(tempArray);\n        }\n      }}\n    >\n      {props.onboarding.overRideSites.map((item, index) => {\n        return <Menu.Item key={item.key}>{item.name}</Menu.Item>;\n      })}\n      <Menu.Item key={(props.onboarding.overRideSites.length + 1).toString()}>\n        +ADD ANOTHER\n      </Menu.Item>\n    </Menu>\n  );\n\n  const Capitalize = (str) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <div className=\"step-container\" style={{ marginBottom: \"10px\" }}>\n      <Modal\n        title=\"\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        centered\n        footer={null}\n        width={700}\n      >\n        <div style={{ margin: \"7%\" }}>\n          <h2>Add a Activity</h2>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Input\n              size=\"large\"\n              style={{\n                width: \"45%\",\n                borderRadius: 5,\n                verticalAlign: \"center\",\n                marginRight: \"2.5%\",\n              }}\n              placeholder=\"Activity Name\"\n              value={siteName}\n              onChange={(e) => {\n                setSiteName(e.target.value);\n              }}\n            />\n            <Input\n              size=\"large\"\n              style={{\n                width: \"45%\",\n                borderRadius: 5,\n                verticalAlign: \"center\",\n                marginLeft: \"2.5%\",\n              }}\n              placeholder=\"Activity URL/File Name\"\n              value={siteUrl}\n              onChange={(e) => {\n                setSiteUrl(e.target.value);\n              }}\n            />\n          </div>\n\n          <div\n            style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"5%\" }}\n          >\n            <p style={{ marginRight: \"1%\" }}>Website</p>\n            <Checkbox\n              style={{ flex: 1 }}\n              onChange={(e) => {\n                setIsWeb(true);\n              }}\n              checked={isWeb}\n            />\n          </div>\n          <div\n            style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"0.2%\" }}\n          >\n            <p style={{ marginRight: \"1%\" }}>Desktop Application</p>\n            <Checkbox\n              style={{ flex: 1 }}\n              onChange={(e) => {\n                setIsWeb(false);\n              }}\n              checked={!isWeb}\n            />\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              marginTop: \"8%\",\n            }}\n          >\n            <Button\n              style={{ marginRight: \"2.5%\" }}\n              onClick={() => {\n                setIsModalVisible(false);\n              }}\n            >\n              CANCEL\n            </Button>\n            <Button\n              type=\"primary\"\n              style={{ marginLeft: \"2.5%\" }}\n              onClick={() => {\n                let key = (\n                  props.onboarding.overRideSites.length + 1\n                ).toString();\n                let tempArray = props.onboarding.overRideSites;\n                let finalSiteName = Capitalize(siteName);\n                tempArray.push({\n                  url: siteUrl,\n                  name: finalSiteName,\n                  key,\n                  isWebsite: isWeb,\n                });\n                props.setOverrideSites(tempArray);\n                setIsModalVisible(false);\n              }}\n            >\n              ADD ACTIVITY\n            </Button>\n          </div>\n        </div>\n      </Modal>\n      <h1>Activity Based Breaks</h1>\n\n      <div style={{ marginTop: \"2%\" }}>\n        <p style={{ fontSize: \"15px\", color: \"#696969\", width: \"80%\" }}>\n          This section is to set up any specific breaks that you want to take.\n          For example you can set the app up to start some breaks every time you\n          open a specific app like Facebook.\n        </p>\n        <div\n          style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}\n        >\n          <div\n            style={{\n              marginTop: \"1%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              width: \"100%\",\n            }}\n          >\n            <p style={{ flex: 2, fontSize: \"18px\" }}>Activity Name</p>\n            <p style={{ flex: 1, fontSize: \"18px\" }}>After Every</p>\n            <p style={{ flex: 1, fontSize: \"18px\" }}>take a Break For</p>\n            <p style={{ flex: 1, fontSize: \"18px\" }}></p>\n          </div>\n          {props.onboarding.allOverRides.map((item, index) => {\n            return (\n              <div style={{ marginTop: \"1%\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    width: \"100%\",\n                  }}\n                >\n                  <div style={{ flex: 2 }}>\n                    <Dropdown overlay={menu(index)} trigger={[\"click\"]}>\n                      <Button\n                        size=\"large\"\n                        style={{\n                          borderRadius: 5,\n                          width: \"80%\",\n                        }}\n                      >\n                        {item.name.length !== 0 ? (\n                          <div\n                            style={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            {item.name}\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\n                          </div>\n                        ) : (\n                          <div\n                            style={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            Select Activity\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\n                          </div>\n                        )}\n                      </Button>\n                    </Dropdown>\n                  </div>\n                  <div\n                    style={{\n                      flex: 1,\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Input\n                      size=\"large\"\n                      style={{\n                        borderRadius: 5,\n                        verticalAlign: \"center\",\n                        width: \"45%\",\n                      }}\n                      placeholder=\"Interval\"\n                      type=\"number\"\n                      value={item.interval}\n                      onChange={(e) => {\n                        if (\n                          e.target.value.length > 0 &&\n                          parseInt(e.target.value) < 61 &&\n                          parseInt(e.target.value) > -1\n                        ) {\n                          let tempArray = props.onboarding.allOverRides;\n                          let tempObj = tempArray[index];\n                          tempObj.interval = e.target.value;\n                          tempArray[index] = tempObj;\n                          props.setAllOverrides(tempArray);\n                        } else {\n                          let tempArray = props.onboarding.allOverRides;\n                          let tempObj = tempArray[index];\n                          tempObj.interval = \"\";\n                          tempArray[index] = tempObj;\n                          props.setAllOverrides(tempArray);\n                        }\n                      }}\n                    />\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100%\",\n                      }}\n                    >\n                      <p\n                        style={{\n                          paddingTop: \"20%\",\n                          marginLeft: \"7%\",\n                          fontSize: \"15px\",\n                          flex: 1,\n                          height: \"100%\",\n                        }}\n                      >\n                        minutes\n                      </p>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      flex: 1,\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Input\n                      size=\"large\"\n                      style={{\n                        borderRadius: 5,\n                        verticalAlign: \"center\",\n                        width: \"45%\",\n                      }}\n                      placeholder=\"Length\"\n                      type=\"number\"\n                      value={item.breakLength}\n                      onChange={(e) => {\n                        if (\n                          e.target.value.length > 0 &&\n                          parseInt(e.target.value) < 61 &&\n                          parseInt(e.target.value) > -1\n                        ) {\n                          let tempArray = props.onboarding.allOverRides;\n                          let tempObj = tempArray[index];\n                          tempObj.breakLength = e.target.value;\n                          tempArray[index] = tempObj;\n                          props.setAllOverrides(tempArray);\n                        } else {\n                          let tempArray = props.onboarding.allOverRides;\n                          let tempObj = tempArray[index];\n                          tempObj.breakLength = \"\";\n                          tempArray[index] = tempObj;\n                          props.setAllOverrides(tempArray);\n                        }\n                      }}\n                    />\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100%\",\n                      }}\n                    >\n                      <p\n                        style={{\n                          paddingTop: \"20%\",\n                          marginLeft: \"7%\",\n                          fontSize: \"15px\",\n                          flex: 1,\n                          height: \"100%\",\n                        }}\n                      >\n                        minutes\n                      </p>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      flex: 1,\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Checkbox\n                      checked={item.cumulative}\n                      onChange={(e) => {\n                        let tempArray = props.onboarding.allOverRides;\n                        let tempObj = tempArray[index];\n                        tempObj.cumulative = e.target.checked;\n                        tempArray[index] = tempObj;\n                        props.setAllOverrides(tempArray);\n                      }}\n                    />\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100%\",\n                      }}\n                    >\n                      <p\n                        style={{\n                          paddingTop: \"20%\",\n                          marginLeft: \"7%\",\n                          fontSize: \"15px\",\n                          flex: 1,\n                          height: \"100%\",\n                        }}\n                      >\n                        Cumulative\n                      </p>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      flex: 1,\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Button\n                      style={{ marginLeft: \"2%\" }}\n                      onClick={() => {\n                        let tempArray = props.onboarding.allOverRides;\n                        tempArray.splice(index, 1);\n                        props.setAllOverrides(tempArray);\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          <p\n            style={{\n              textDecorationLine: \"underline\",\n              marginTop: \"2%\",\n              fontSize: \"17px\",\n              cursor: \"pointer\",\n              width: \"15%\",\n            }}\n            onClick={() => {\n              let tempArray = props.onboarding.allOverRides;\n              tempArray.push({\n                name: \"\",\n                url: \"\",\n                interval: 60,\n                breakLength: 1,\n                isWebsite: true,\n              });\n              props.setAllOverrides(tempArray);\n            }}\n          >\n            +Add Override\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setAllOverrides: OnboardingActions.setAllOverrides,\n      setOverrideSites: OnboardingActions.setOverrideSites,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdHocBreakScreen);\n",["370","371"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/utils/dates.js",["372","373","374","375","376"],"import * as dates from 'date-arithmetic'\n\nexport {\n  milliseconds,\n  seconds,\n  minutes,\n  hours,\n  month,\n  startOf,\n  endOf,\n  add,\n  eq,\n  gte,\n  gt,\n  lte,\n  lt,\n  inRange,\n  min,\n  max,\n} from 'date-arithmetic'\n\nconst MILLI = {\n  seconds: 1000,\n  minutes: 1000 * 60,\n  hours: 1000 * 60 * 60,\n  day: 1000 * 60 * 60 * 24,\n}\n\nconst MONTHS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n\nexport function monthsInYear(year) {\n  let date = new Date(year, 0, 1)\n\n  return MONTHS.map(i => dates.month(date, i))\n}\n\nexport function firstVisibleDay(date, localizer) {\n  let firstOfMonth = dates.startOf(date, 'month')\n\n  return dates.startOf(firstOfMonth, 'week', localizer.startOfWeek())\n}\n\nexport function lastVisibleDay(date, localizer) {\n  let endOfMonth = dates.endOf(date, 'month')\n\n  return dates.endOf(endOfMonth, 'week', localizer.startOfWeek())\n}\n\nexport function visibleDays(date, localizer) {\n  let current = firstVisibleDay(date, localizer),\n    last = lastVisibleDay(date, localizer),\n    days = []\n\n  while (dates.lte(current, last, 'day')) {\n    days.push(current)\n    current = dates.add(current, 1, 'day')\n  }\n\n  return days\n}\n\nexport function ceil(date, unit) {\n  let floor = dates.startOf(date, unit)\n\n  return dates.eq(floor, date) ? floor : dates.add(floor, 1, unit)\n}\n\nexport function range(start, end, unit = 'day') {\n  let current = start,\n    days = []\n\n  while (dates.lte(current, end, unit)) {\n    days.push(current)\n    current = dates.add(current, 1, unit)\n  }\n\n  return days\n}\n\nexport function merge(date, time) {\n  if (time == null && date == null) return null\n\n  if (time == null) time = new Date()\n  if (date == null) date = new Date()\n\n  date = dates.startOf(date, 'day')\n  date = dates.hours(date, dates.hours(time))\n  date = dates.minutes(date, dates.minutes(time))\n  date = dates.seconds(date, dates.seconds(time))\n  return dates.milliseconds(date, dates.milliseconds(time))\n}\n\nexport function eqTime(dateA, dateB) {\n  return (\n    dates.hours(dateA) === dates.hours(dateB) &&\n    dates.minutes(dateA) === dates.minutes(dateB) &&\n    dates.seconds(dateA) === dates.seconds(dateB)\n  )\n}\n\nexport function isJustDate(date) {\n  return (\n    dates.hours(date) === 0 &&\n    dates.minutes(date) === 0 &&\n    dates.seconds(date) === 0 &&\n    dates.milliseconds(date) === 0\n  )\n}\n\nexport function duration(start, end, unit, firstOfWeek) {\n  if (unit === 'day') unit = 'date'\n  return Math.abs(\n    dates[unit](start, undefined, firstOfWeek) -\n      dates[unit](end, undefined, firstOfWeek)\n  )\n}\n\nexport function diff(dateA, dateB, unit) {\n  if (!unit || unit === 'milliseconds') return Math.abs(+dateA - +dateB)\n\n  // the .round() handles an edge case\n  // with DST where the total won't be exact\n  // since one day in the range may be shorter/longer by an hour\n  return Math.round(\n    Math.abs(\n      +dates.startOf(dateA, unit) / MILLI[unit] -\n        +dates.startOf(dateB, unit) / MILLI[unit]\n    )\n  )\n}\n\nexport function total(date, unit) {\n  let ms = date.getTime(),\n    div = 1\n\n  switch (unit) {\n    case 'week':\n      div *= 7\n    case 'day':\n      div *= 24\n    case 'hours':\n      div *= 60\n    case 'minutes':\n      div *= 60\n    case 'seconds':\n      div *= 1000\n  }\n\n  return ms / div\n}\n\nexport function week(date) {\n  var d = new Date(date)\n  d.setHours(0, 0, 0)\n  d.setDate(d.getDate() + 4 - (d.getDay() || 7))\n  return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7)\n}\n\nexport function today() {\n  return dates.startOf(new Date(), 'day')\n}\n\nexport function yesterday() {\n  return dates.add(dates.startOf(new Date(), 'day'), -1, 'day')\n}\n\nexport function tomorrow() {\n  return dates.add(dates.startOf(new Date(), 'day'), 1, 'day')\n}",["377","378"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/Checker/index.js",[],["379","380"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/BreakFeedbackScreen/index.jsx",["381","382","383","384","385","386","387","388","389","390"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/break.reducer.js",[],["391","392"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/services/index.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/App.js",["393","394"],"import React, { useEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, useHistory } from \"react-router-dom\";\nimport BreakManager from \"./breakmanager\";\n\n\nimport { store } from \"./redux\";\nimport Main from \"./navigation\";\n\nimport \"antd/dist/antd.css\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nfunction App() {\n  let history = useHistory();\n  useEffect(() => {\n    \n  }, []);\n  return (\n    <Provider store={store}>\n      <HashRouter>\n        <Main />\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n",["395","396"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/index.jsx",["397","398"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Steps, Button } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport PersonalInformationScreen from \"./PersonalInformation\";\nimport ScheduledBreakScreen from \"./ScheduledBreaks\";\nimport RegularBreakScreen from \"./RegularBreaks\";\nimport AdHocBreakScreen from \"./AdHocBreaks\";\nimport FinishingUpScreen from \"./FinishingUp\";\nimport { OnboardingActions } from \"../../redux/actions\";\nimport \"./styles.css\";\nimport { setOnboardingComplete } from \"../../redux/actions/onboarding.action\";\nimport BreakManager from \"../../breakmanager\";\n\nconst { Step } = Steps;\n\nconst OnboardingScreen = (props) => {\n  const [current, setCurrent] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [blocked, setBlocked] = useState([\"\", true]);\n  const history = useHistory();\n\n  const addOnbInfo = async () => {\n    // history.push(\"/home\");\n    // BreakManager(history);\n    let body = { ...props.onboarding };\n    if (props.onboarding.user && props.onboarding.user._id) {\n      body.user = props.onboarding.user._id;\n      body.timestamp = new Date();\n      let response = await axios.post(\n        \"https://thepallab.com/api/user/onb\",\n        body\n      );\n      if (response.data.message === \"Successful Added\") {\n        history.push(\"/home\");\n        BreakManager(history);\n      }\n    } else {\n      history.push(\"/login\");\n    }\n  };\n\n  const checkStart = async () => {\n    let response = await axios.get(\"https://thepallab.com/api/user/getstate\");\n    let startInfo = response.data.link;\n    setBlocked(startInfo.link);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (props.onboarding.complete) {\n      history.push(\"/home\");\n    } else if (\n      props.onboarding.user &&\n      Object.keys(props.onboarding.user).length === 0\n    ) {\n      history.push(\"/login\");\n    } else if (!props.onboarding.awChecked) {\n      history.push(\"/aw\");\n    } else {\n      checkStart();\n    }\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"main\">\n        <p>Loading Information...</p>\n      </div>\n    );\n  } else if (blocked[1]) {\n    return (\n      <div\n        className=\"main\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <h2 style={{ textAlign: \"center\" }}>\n          Thank you for signing up! we appreciate your interest in our\n          experiment. You can start using this app on the {blocked[0]}\n        </h2>\n        <Button\n          onClick={() => {\n            setLoading(true);\n            checkStart();\n          }}\n        >\n          Refresh\n        </Button>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"main\">\n        {props.onboarding.user.type === \"0\" && (\n          <Steps current={current} labelPlacement=\"vertical\">\n            <Step title=\"PERSONAL INFORMATION\" />\n            <Step title=\"SCHEDULED BREAKS\" />\n            <Step title=\"INTERVAL BASED BREAKS\" />\n            <Step title=\"ACTIVITY BASED BREAKS\" />\n            <Step title=\"FINISHING UP\" />\n          </Steps>\n        )}\n        {props.onboarding.user.type === \"1\" && (\n          <Steps current={current} labelPlacement=\"vertical\">\n            <Step title=\"PERSONAL INFORMATION\" />\n            <Step title=\"SCHEDULED BREAKS\" />\n            <Step title=\"FINISHING UP\" />\n          </Steps>\n        )}\n        {props.onboarding.user.type === \"2\" && (\n          <Steps current={current} labelPlacement=\"vertical\">\n            <Step title=\"PERSONAL INFORMATION\" />\n            <Step title=\"INTERVAL BASED BREAKS\" />\n            <Step title=\"FINISHING UP\" />\n          </Steps>\n        )}\n        {props.onboarding.user.type === \"3\" && (\n          <Steps current={current} labelPlacement=\"vertical\">\n            <Step title=\"PERSONAL INFORMATION\" />\n            <Step title=\"ACTIVITY BASED BREAKS\" />\n            <Step title=\"FINISHING UP\" />\n          </Steps>\n        )}\n        {props.onboarding.user.type === \"4\" && (\n          <Steps current={current} labelPlacement=\"vertical\">\n            <Step title=\"PERSONAL INFORMATION\" />\n            <Step title=\"FINISHING UP\" />\n          </Steps>\n        )}\n\n        {props.onboarding.user.type === \"0\" && (\n          <div>\n            {current === 0 && <PersonalInformationScreen />}\n            {current === 1 && <ScheduledBreakScreen />}\n            {current === 2 && <RegularBreakScreen />}\n            {current === 3 && <AdHocBreakScreen />}\n            {current === 4 && <FinishingUpScreen />}\n          </div>\n        )}\n        {props.onboarding.user.type === \"1\" && (\n          <div>\n            {current === 0 && <PersonalInformationScreen />}\n            {current === 1 && <ScheduledBreakScreen />}\n            {current === 2 && <FinishingUpScreen />}\n          </div>\n        )}\n        {props.onboarding.user.type === \"2\" && (\n          <div>\n            {current === 0 && <PersonalInformationScreen />}\n            {current === 1 && <RegularBreakScreen />}\n            {current === 2 && <FinishingUpScreen />}\n          </div>\n        )}\n        {props.onboarding.user.type === \"3\" && (\n          <div>\n            {current === 0 && <PersonalInformationScreen />}\n            {current === 1 && <AdHocBreakScreen />}\n            {current === 2 && <FinishingUpScreen />}\n          </div>\n        )}\n        {props.onboarding.user.type === \"4\" && (\n          <div>\n            {current === 0 && <PersonalInformationScreen />}\n            {current === 1 && <FinishingUpScreen />}\n          </div>\n        )}\n        {props.onboarding.user.type === \"0\" && (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            {current > 0 && (\n              <Button\n                style={{ margin: \"0 8px\" }}\n                onClick={() => {\n                  setCurrent(current - 1);\n                }}\n              >\n                Back\n              </Button>\n            )}\n            {current < 4 && (\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  setCurrent(current + 1);\n                }}\n              >\n                Next\n              </Button>\n            )}\n            {current === 4 && (\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  props.setOnboardingComplete();\n                  // curWindow.minimize();\n                  addOnbInfo();\n                  // history.push(\"/home\");\n                }}\n              >\n                Done\n              </Button>\n            )}\n          </div>\n        )}\n        {props.onboarding.user.type === \"1\" && (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            {current > 0 && (\n              <Button\n                style={{ margin: \"0 8px\" }}\n                onClick={() => {\n                  setCurrent(current - 1);\n                }}\n              >\n                Back\n              </Button>\n            )}\n            {current < 2 && (\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  setCurrent(current + 1);\n                }}\n              >\n                Next\n              </Button>\n            )}\n            {current === 2 && (\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  props.setOnboardingComplete();\n                  // curWindow.minimize();\n                  addOnbInfo();\n                  // history.push(\"/home\");\n                }}\n              >\n                Done\n              </Button>\n            )}\n          </div>\n        )}\n        {props.onboarding.user.type === \"2\" && (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            {current > 0 && (\n              <Button\n                style={{ margin: \"0 8px\" }}\n                onClick={() => {\n                  setCurrent(current - 1);\n                }}\n              >\n                Back\n              </Button>\n            )}\n            {current < 2 && (\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  setCurrent(current + 1);\n                }}\n              >\n                Next\n              </Button>\n            )}\n            {current === 2 && (\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  props.setOnboardingComplete();\n                  // curWindow.minimize();\n                  addOnbInfo();\n                  // history.push(\"/home\");\n                }}\n              >\n                Done\n              </Button>\n            )}\n          </div>\n        )}\n        {props.onboarding.user.type === \"3\" && (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            {current > 0 && (\n              <Button\n                style={{ margin: \"0 8px\" }}\n                onClick={() => {\n                  setCurrent(current - 1);\n                }}\n              >\n                Back\n              </Button>\n            )}\n            {current < 2 && (\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  setCurrent(current + 1);\n                }}\n              >\n                Next\n              </Button>\n            )}\n            {current === 2 && (\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  props.setOnboardingComplete();\n                  // curWindow.minimize();\n                  addOnbInfo();\n                  // history.push(\"/home\");\n                }}\n              >\n                Done\n              </Button>\n            )}\n          </div>\n        )}\n        {props.onboarding.user.type === \"4\" && (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            {current > 0 && (\n              <Button\n                style={{ margin: \"0 8px\" }}\n                onClick={() => {\n                  setCurrent(current - 1);\n                }}\n              >\n                Back\n              </Button>\n            )}\n            {current < 1 && (\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  setCurrent(current + 1);\n                }}\n              >\n                Next\n              </Button>\n            )}\n            {current === 1 && (\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  props.setOnboardingComplete();\n                  // curWindow.minimize();\n                  addOnbInfo();\n                  // history.push(\"/home\");\n                }}\n              >\n                Done\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding, break: state.break };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setOnboardingComplete: OnboardingActions.setOnboardingComplete,\n      reset: OnboardingActions.reset,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OnboardingScreen);\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/CalendarScreen/index.jsx",["399"],"import React, { useState } from \"react\";\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport { Modal, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { OnboardingActions } from \"../../redux/actions\";\nimport * as dates from \"../../utils/dates\";\nimport \"./styles.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst localizer = momentLocalizer(moment);\nconst DnDCalendar = withDragAndDrop(Calendar);\n\nconst ColoredDateCellWrapper = ({ children }) =>\n  React.cloneElement(React.Children.only(children), {\n    style: {\n      backgroundColor: \"lightblue\",\n    },\n  });\n\nconst CalendarScreen = (props) => {\n  const [events, setEvents] = useState([\n    {\n      start: moment().toDate(),\n      end: moment().add(1, \"days\").toDate(),\n      title: \"Test\",\n      id: 1,\n    },\n  ]);\n  const [draggedEvent, setDraggedEvent] = useState(null);\n  const [modalVisible, setModalVisible] = useState(null);\n  const history = useHistory();\n\n  const resizeEvent = ({ event, start, end }) => {\n    const nextEvents = events.map((existingEvent) => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent;\n    });\n\n    setEvents(nextEvents);\n  };\n\n  const moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\n    let allDay = event.allDay;\n\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true;\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false;\n    }\n\n    const nextEvents = events.map((existingEvent) => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end, allDay }\n        : existingEvent;\n    });\n\n    setEvents(nextEvents);\n\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const newEvent = ({ slots, start, end }) => {\n    setModalVisible(true);\n    let idList = events.map((a) => a.id);\n    let newId = Math.max(...idList) + 1;\n    let hour = {\n      id: newId,\n      title: \"New Event\",\n      allDay: slots.length === 1,\n      start: start,\n      end: end,\n    };\n\n    setEvents(events.concat([hour]));\n  };\n\n  const onDropFromOutside = ({ start, end, allDay }) => {\n    const event = {\n      id: draggedEvent.id,\n      title: draggedEvent.title,\n      start,\n      end,\n      allDay: allDay,\n    };\n\n    setDraggedEvent(null);\n    this.moveEvent({ event, start, end });\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Modal\n        visible={modalVisible}\n        onOk={() => {\n          setModalVisible(false);\n        }}\n        onCancel={() => {\n          setModalVisible(false);\n        }}\n      >\n        Hello\n      </Modal>\n      <Button\n        onClick={() => {\n          props.resetInfo();\n          history.push(\"/\")\n        }}\n      >\n        Reset\n      </Button>\n      <DnDCalendar\n        selectable\n        resizable={true}\n        events={events}\n        views={[\"day\", \"week\", \"month\"]}\n        // step={60}\n        showMultiDayTimes\n        defaultDate={new Date()}\n        onSelectSlot={newEvent}\n        components={{\n          timeSlotWrapper: ColoredDateCellWrapper,\n        }}\n        localizer={localizer}\n        max={dates.add(dates.endOf(new Date(), \"day\"), -1, \"hours\")}\n        style={{ height: props.height ? props.height : window.innerHeight }}\n        onEventResize={resizeEvent}\n        onEventDrop={moveEvent}\n        onDropFromOutside={onDropFromOutside}\n        handleDragStart={(event) => {\n          setDraggedEvent(event);\n        }}\n        dragFromOutsideItem={draggedEvent}\n        resizableAccessor={() => false}\n        onSelectEvent={() => {\n          //add code for editing an existing event here\n          setModalVisible(true);\n        }}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ resetInfo: OnboardingActions.reset }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarScreen);\n",["400","401"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/StroopScreen/index.jsx",["402","403","404","405","406","407","408","409","410","411","412","413","414","415"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BreakActions, PastActions } from \"../../redux/actions\";\nimport { Button } from \"antd\";\nimport { store } from \"../../redux\";\nimport Games from \"../../components/Games\";\n\nconst { ipcRenderer, remote } = window.require(\"electron\");\n\nvar s1 = {\n  height: \"100vh\",\n  width: \"100vw\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n//TO-DO: add style\nconst StroopScreen = () => {\n  const [complte, setComplete] = useState(false);\n  const [scores, setScore] = useState([]);\n  let dispatch = useDispatch();\n  var order = Math.floor(Math.random() * 2);\n  return (\n    <Games\n      order={0}\n      status={\"start\"}\n      onComplete={() => {\n        //remove in mobile app\n        // remote.getCurrentWindow().close();\n      }}\n    />\n  );\n};\nexport default StroopScreen;\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/PopupScreen/index.jsx",["416","417"],"import React from \"react\";\nimport \"./styles.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BreakActions, PastActions } from \"../../redux/actions\";\nimport { Button } from \"antd\";\nimport { store } from \"../../redux\";\nimport { useHistory } from \"react-router-dom\";\n\n//TO-DO: add style\nconst PopupScreen = () => {\n  let dispatch = useDispatch();\n  let history = useHistory();\n  return (\n    <div style={{ backgroundColor: \"white\", padding: \"3%\" }}>\n      <div\n        style={{\n          color: \"#7DCAB6\",\n          fontSize: \"22px\",\n          textAlign: \"center\",\n        }}\n      >\n        It's time to break!\n      </div>\n      <div style={{ paddingTop: \"3%\", fontSize: \"15px\" }}>\n        Should we get started? This break will start automatically if you ignore\n        this pop up\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          marginTop: \"10%\",\n        }}\n      >\n        <Button\n          onClick={() => {\n            let breakInfo = store.getState().break;\n            let pastInfo = store.getState().past;\n            let endtime = breakInfo.breakEndTime;\n            if (breakInfo.breakEndTime.length === 0) {\n              endtime = new Date().toISOString();\n            }\n            let data = {\n              endtime: endtime,\n              intervalBreakData: pastInfo.intervalBreakData,\n              initScheduled: pastInfo.initScheduled,\n              breaksTriggered: breakInfo.breaksTriggered,\n            };\n            dispatch(BreakActions.onCancelBreak(data));\n            history.push(\"/cancel\");\n          }}\n          style={{ color: \"#7DCAB6\", borderWidth: 0 }}\n        >\n          CANCEL\n        </Button>\n        <Button\n          onClick={() => {\n            // dispatch(BreakActions.startBreak())\n            dispatch(BreakActions.startPrebreakfeedback());\n            // history.push(\"/stroop\");\n          }}\n          style={{ color: \"#7DCAB6\", borderWidth: 0 }}\n        >\n          CONTINUE\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default PopupScreen;\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/SuddenScreen/index.jsx",["418"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/FinishingUp.jsx",["419","420","421","422","423","424"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Input } from \"antd\";\n\nimport \"./styles.css\";\n\nconst FinishingUpScreen = (props) => {\n  const [breakArray, setBreakArray] = useState([\"https://www.youtube.com\"]);\n\n  return (\n    <div className=\"step-container\">\n      <h1>You're Almost Done!</h1>\n      <div style={{ marginTop: \"3%\", width: \"70%\" }}>\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\n          Thanks for your input!\n          <br />\n          <br />\n        </p>\n        {(props.onboarding.user.type === \"0\" ||\n          props.onboarding.user.type === \"1\") && (\n          <div style={{ width: \"100%\" }}>\n            <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n              Scheduled Breaks :{\" \"}\n            </p>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                width: \"50%\",\n              }}\n            >\n              <p style={{ flex: 1 }}>Day</p>\n              <p style={{ flex: 1 }}>Start Time</p>\n              <p style={{ flex: 1 }}>End Time</p>\n            </div>\n            <div>\n              {props.onboarding.scheduledBreaks.map((item, index) => {\n                if (item.start.length > 0) {\n                  return (\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        width: \"50%\",\n                        marginTop: index !== 0 ? \"1%\" : \"0%\",\n                      }}\n                    >\n                      <p style={{ flex: 1 }}>{item.day}</p>\n                      <p style={{ flex: 1 }}>\n                        {new Date(item.start).getHours() +\n                          \":\" +\n                          (new Date(item.start).getMinutes() < 10 ? \"0\" : \"\") +\n                          new Date(item.start).getMinutes()}\n                      </p>\n                      <p style={{ flex: 1 }}>\n                        {new Date(item.end).getHours() +\n                          \":\" +\n                          (new Date(item.end).getMinutes() < 10 ? \"0\" : \"\") +\n                          new Date(item.end).getMinutes()}\n                      </p>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </div>\n        )}\n        {(props.onboarding.user.type === \"0\" ||\n          props.onboarding.user.type === \"2\") && (\n          <div style={{ width: \"100%\" }}>\n            <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n              Regular Breaks :{\" \"}\n            </p>\n            <p>\n              How often you want to take regular breaks :{\" \"}\n              {Math.floor(parseInt(props.onboarding.regularBreakInterval) / 60)}{\" \"}\n              hour(s) {parseInt(props.onboarding.regularBreakInterval) % 60}{\" \"}\n              minute(s)\n            </p>\n            <p>\n              How long you want these breaks to be :{\" \"}\n              {props.onboarding.regularBreakLength} minute(s)\n            </p>\n          </div>\n        )}\n        {(props.onboarding.user.type === \"0\" ||\n          props.onboarding.user.type === \"3\") && (\n          <div style={{ width: \"100%\" }}>\n            <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n              Activity Based Breaks :{\" \"}\n            </p>\n\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                width: \"50%\",\n              }}\n            >\n              <p style={{ flex: 1 }}>Site</p>\n              <p style={{ flex: 1 }}>Break Interval (minutes)</p>\n              <p style={{ flex: 1 }}>Break Length (minutes)</p>\n            </div>\n            <div>\n              {props.onboarding.allOverRides.map((item, index) => {\n                if (item.name.length > 0) {\n                  return (\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        width: \"50%\",\n                        marginTop: index !== 0 ? \"1%\" : \"0%\",\n                      }}\n                    >\n                      <p style={{ flex: 1 }}>{item.name}</p>\n                      <p style={{ flex: 1 }}>{item.interval}</p>\n                      <p style={{ flex: 1 }}>{item.breakLength}</p>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </div>\n        )}\n        <p style={{ fontSize: \"18px\", marginBottom: \"5%\" }}>\n          If you want to make any changes, click on the back button and change\n          your settings. You can always come back and make edits to your\n          schedule and overrides in 'My Settings'.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinishingUpScreen);\n",["425","426"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Games/fruit_ninja_manager.jsx",["427"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Calendar.jsx",["428","429","430","431","432","433","434","435","436","437","438","439","440","441","442"],"import React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Modal, message } from \"antd\";\nimport * as dates from \"../utils/dates\";\nimport s1 from \"../assets/s1.png\";\nimport s2 from \"../assets/s2.png\";\nimport s3 from \"../assets/s3.png\";\nimport s4 from \"../assets/s4.png\";\nimport s5 from \"../assets/s5.png\";\n\nimport s1y from \"../assets/s1y.png\";\nimport s2y from \"../assets/s2y.png\";\nimport s3y from \"../assets/s3y.png\";\nimport s4y from \"../assets/s4y.png\";\nimport s5y from \"../assets/s5y.png\";\nimport \"./styles.css\";\n\nconst localizer = momentLocalizer(moment);\n\nconst ColoredDateCellWrapper = ({ children }) =>\n  React.cloneElement(React.Children.only(children), {\n    style: {\n      backgroundColor: \"lightblue\",\n    },\n  });\n\nconst CalendarComponent = (props) => {\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(null);\n  const [selectedEvent, setSelectedEvent] = useState({});\n  const [rate, setRate] = useState(0);\n  const [feedbackText, setFeedbackText] = useState(\"\");\n  const number_array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  let mounted = true;\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const getData = async () => {\n    let today = new Date();\n    today.setHours(0, 0, 0, 0);\n    let tomorrow = new Date();\n    tomorrow.setHours(23, 59, 59, 999);\n    let body = {\n      user: props.onboarding.user._id,\n      today: today,\n      tomorrow: tomorrow,\n    };\n    let response = await axios.post(\n      \"https://thepallab.com/api/user/get-break-cal\",\n      body\n    );\n    if (response.data.finalData) {\n      let dataTemp = response.data.finalData;\n      for (let i = 0; i < dataTemp.length; i++) {\n        let newDate = new Date(dataTemp[i].start);\n        dataTemp[i].start = newDate;\n        let newDateEnd = new Date(dataTemp[i].end);\n        dataTemp[i].end = newDateEnd;\n      }\n\n      setEvents(dataTemp);\n    }\n    setLoading(false);\n  };\n\n  const onEventResize = (data) => {};\n\n  const onEventDrop = (data) => {\n    const { start, end } = data;\n    events[0].start = start;\n    events[0].end = end;\n    setEvents(events);\n  };\n  let getImageButton = (name, name2, points, rate, setRate, mounted) => {\n    if (points == rate)\n      return (\n        <div className=\"responsive\">\n          <div className=\"gallery\">\n            <button\n              className=\"feedback-button\"\n              onClick={() => {\n                if (mounted) setRate(points);\n              }}\n            >\n              <p style={{ fontSize: \"50px\" }}>{points - 1}</p>\n            </button>\n          </div>\n        </div>\n      );\n    else\n      return (\n        <div className=\"responsive\">\n          <div className=\"gallery\">\n            <button\n              className=\"feedback-button\"\n              onClick={() => {\n                if (mounted) setRate(points);\n              }}\n            >\n              <p style={{ fontSize: \"50px\", opacity: \"0.5\" }}>{points - 1}</p>\n            </button>\n          </div>\n        </div>\n      );\n  };\n  if (loading) {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <h3 style={{ textAlign: \"center\" }}>Loading data...</h3>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Modal\n          width={\"1000px\"}\n          visible={modalVisible}\n          onOk={async () => {\n            let body = {\n              _id: selectedEvent._id,\n              feedbackText,\n              feedbackScore: rate,\n            };\n            let response = await axios.post(\n              \"https://thepallab.com/api/user/update-break\",\n              body\n            );\n            if (response.data.message !== \"Successful Update\") {\n              message.error(\"Your entry was not updated\");\n            }\n            setModalVisible(false);\n            setLoading(true);\n            getData();\n          }}\n          onCancel={() => {\n            setModalVisible(false);\n          }}\n        >\n          <div>\n            <p>\n              Break Start : {new Date(selectedEvent.start).getDate()}{\" \"}\n              {months[new Date(selectedEvent.start).getMonth()]},{\" \"}\n              {new Date(selectedEvent.start).getHours()}:\n              {(new Date(selectedEvent.start).getMinutes() < 10 ? \"0\" : \"\") +\n                new Date(selectedEvent.start).getMinutes()}\n            </p>\n            <p>\n              Break End : {new Date(selectedEvent.end).getDate()}{\" \"}\n              {months[new Date(selectedEvent.end).getMonth()]},{\" \"}\n              {new Date(selectedEvent.end).getHours()}:\n              {(new Date(selectedEvent.end).getMinutes() < 10 ? \"0\" : \"\") +\n                new Date(selectedEvent.end).getMinutes()}\n            </p>\n            <p>Break Type : {selectedEvent.title}</p>\n            <p>Break Score : </p>\n            <div className=\"break-feedback\">\n              {number_array.map((item, index) => {\n                return getImageButton(\n                  s5,\n                  s5y,\n                  item + 1,\n                  rate,\n                  setRate,\n                  mounted\n                );\n              })}\n              {/* {getImageButton(s5, s5y, 1, rate, setRate, mounted)}\n              {getImageButton(s4, s4y, 2, rate, setRate, mounted)}\n              {getImageButton(s3, s3y, 3, rate, setRate, mounted)}\n              {getImageButton(s2, s2y, 4, rate, setRate, mounted)}\n              {getImageButton(s1, s1y, 5, rate, setRate, mounted)} */}\n            </div>\n            <p>Break Feedback : </p>\n            <div\n              className=\"\"\n              style={{\n                height: \"15%\",\n                width: \"100%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                backgroundColor: \"white\",\n              }}\n            >\n              <textarea\n                onChange={(event) => {\n                  if (mounted) setFeedbackText(event.target.value);\n                }}\n                data-role=\"none\"\n                rows=\"3\"\n                cols=\"80\"\n                placeholder=\"Type in here any notes or reflections about the break that you would like to save\"\n                className=\"feedback-text\"\n                value={feedbackText}\n              />\n            </div>\n          </div>\n        </Modal>\n        <Calendar\n          events={events}\n          views={[\"day\", \"week\", \"month\"]}\n          step={60}\n          showMultiDayTimes\n          localizer={localizer}\n          defaultDate={new Date()}\n          popup\n          style={{ height: 500 }}\n          onSelectEvent={(event) => {\n            //add code for editing an existing event here\n            setSelectedEvent(event);\n            setRate(event.feedbackScore);\n            setFeedbackText(event.feedbackText);\n            setModalVisible(true);\n          }}\n        />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarComponent);\n",["443","444"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/ScheduledBreaks.jsx",["445","446"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { TimePicker, Select, Button } from \"antd\";\nimport moment from \"moment\";\n\nimport { OnboardingActions } from \"../../redux/actions\";\n\nimport \"./styles.css\";\n\nconst { Option } = Select;\n\nconst ScheduledBreakScreen = (props) => {\n  return (\n    <div className=\"step-container\">\n      <h1>Scheduled Breaks</h1>\n\n      <div style={{ marginTop: \"4%\" }}>\n        <p style={{ fontSize: \"17px\" }}>\n          Are there any breaks you would like to schedule on a regular basis?\n        </p>\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          width: \"50%\",\n        }}\n      >\n        <p style={{ flex: 1 }}>Day</p>\n        <p style={{ flex: 1 }}>Start Time</p>\n        <p style={{ flex: 1 }}>End Time</p>\n      </div>\n      <div>\n        {props.onboarding.scheduledBreaks.map((item, index) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                width: \"50%\",\n                marginTop: index !== 0 ? \"1%\" : \"0%\",\n              }}\n            >\n              <Select\n                style={{ flex: 1 }}\n                placeholder=\"Select a day\"\n                onChange={(value) => {\n                  const tempObject = item;\n                  tempObject.day = value;\n                  const tempArray = props.onboarding.scheduledBreaks;\n                  tempArray[index] = tempObject;\n                  props.setScheduledBreaks(tempArray);\n                }}\n                defaultValue={item.day.length !== 0 ? item.day : null}\n              >\n                <Option value=\"monday\">Monday</Option>\n                <Option value=\"tuesday\">Tuesday</Option>\n                <Option value=\"wednesday\">Wednesday</Option>\n                <Option value=\"thursday\">Thursday</Option>\n                <Option value=\"friday\">Friday</Option>\n                <Option value=\"saturday\">Saturday</Option>\n                <Option value=\"sunday\">Sunday</Option>\n              </Select>\n              <TimePicker\n                format={\"HH:mm\"}\n                style={{ flex: 1 }}\n                value={item.start.length !== 0 ? moment(item.start) : null}\n                onChange={(e) => {\n                  const time = e.toString();\n                  const tempObject = item;\n                  tempObject.start = time;\n                  const tempArray = props.onboarding.scheduledBreaks;\n                  tempArray[index] = tempObject;\n                  props.setScheduledBreaks(tempArray);\n                }}\n                onSelect={(e) => {\n                  const time = e.toString();\n                  const tempObject = item;\n                  tempObject.start = time;\n                  const tempArray = props.onboarding.scheduledBreaks;\n                  tempArray[index] = tempObject;\n                  props.setScheduledBreaks(tempArray);\n                }}\n              />\n              <TimePicker\n                format={\"HH:mm\"}\n                style={{ flex: 1 }}\n                value={item.end.length !== 0 ? moment(item.end) : null}\n                onChange={(e) => {\n                  const time = e.toString();\n                  const tempObject = item;\n                  tempObject.end = time;\n                  const tempArray = props.onboarding.scheduledBreaks;\n                  tempArray[index] = tempObject;\n                  props.setScheduledBreaks(tempArray);\n                }}\n                onSelect={(e) => {\n                  const time = e.toString();\n                  const tempObject = item;\n                  tempObject.end = time;\n                  const tempArray = props.onboarding.scheduledBreaks;\n                  tempArray[index] = tempObject;\n                  props.setScheduledBreaks(tempArray);\n                }}\n              />\n              <Button\n                style={{ marginLeft: \"2%\" }}\n                onClick={() => {\n                  let tempArray = props.onboarding.scheduledBreaks;\n                  tempArray.splice(index, 1);\n                  props.setScheduledBreaks(tempArray);\n                }}\n              >\n                Delete\n              </Button>\n            </div>\n          );\n        })}\n      </div>\n\n      <p\n        style={{\n          textDecorationLine: \"underline\",\n          marginTop: \"2%\",\n          fontSize: \"17px\",\n          cursor: \"pointer\",\n          width: \"15%\",\n        }}\n        onClick={() => {\n          let tempArray = props.onboarding.scheduledBreaks;\n          tempArray.push({ start: \"\", end: \"\", day: \"\" });\n          props.setScheduledBreaks(tempArray);\n        }}\n      >\n        +Add a Break\n      </p>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setScheduledBreaks: OnboardingActions.setScheduledBreaks,\n      setScreenTime: OnboardingActions.setScreenTime,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScheduledBreakScreen);\n",["447","448"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/navigation/index.js",["449","450","451","452"],"import React, { Suspense, lazy, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport Loading from \"../components/Loading\";\nimport BreakManager from \"../breakmanager\";\nimport { store } from \"../redux\";\nimport { BreakActions } from \"../redux/actions\";\nimport { Provider, useDispatch } from \"react-redux\";\nconst { ipcRenderer, remote } = window.require(\"electron\");\nvar curWindow = remote.getCurrentWindow();\nconst BreakScreen = lazy(() => import(\"../screens/BreakScreen\"));\nconst HomeScreen = lazy(() => import(\"../screens/HomeScreen\"));\nconst OnboardingScreen = lazy(() => import(\"../screens/OnboardingScreen\"));\nconst CalendarScreen = lazy(() => import(\"../screens/CalendarScreen\"));\nconst PopupScreen = lazy(() => import(\"../screens/PopupScreen\"));\nconst StroopScreen = lazy(() => import(\"../screens/StroopScreen\"));\nconst FruitNinjaScreen = lazy(() => import(\"../screens/FruitNinjaScreen\"));\nconst LoginScreen = lazy(() => import(\"../screens/LoginScreen\"));\nconst AWCheckerScreen = lazy(() => import(\"../screens/AWCheckerScreen\"));\nconst AnalyticsScreen = lazy(() => import(\"../screens/AnalyticsScreen\"));\nconst NewHomeScreen = lazy(() => import(\"../screens/NewHomeScreen\"));\nconst BreakFeedbackScreen = lazy(() =>\n  import(\"../screens/BreakFeedbackScreen\")\n);\nconst CancelScreen = lazy(() => import(\"../screens/CancelScreen\"));\nconst SuddenScreen = lazy(() => import(\"../screens/SuddenScreen\"));\nconst EditScheduledBreakScreen = lazy(() =>\n  import(\"../screens/EditScheduledBreaks\")\n);\nconst EditRegularBreakScreen = lazy(() =>\n  import(\"../screens/EditRegularBreaksScreen\")\n);\nconst EditAdHocBreakScreen = lazy(() =>\n  import(\"../screens/EditActivityBreaksScreen\")\n);\nconst SignupScreen = lazy(() => import(\"../screens/SignUpScreen\"));\n\nconst AWScreen = lazy(() => import(\"../screens/AWScreen\"));\nconst PreBreakFeedbackScreen = lazy(() =>\n  import(\"../screens/PreBreakFeedbackScreen\")\n);\n\nconst CPTScreen = lazy(() => import(\"../screens/CPTScreen\"));\nconst WeeklyForm = lazy(() => import(\"../screens/WeeklyForm\"));\nconst WeeklyPopUp = lazy(() => import(\"../screens/WeeklyPopUp\"));\nconst CBTestScreen = lazy(() => import(\"../screens/CBTestScreen\"));\nconst WeeklyQInputScreen = lazy(() => import(\"../screens/WeeklyQInputScreen\"));\nconst AWCheckerInScreen = lazy(() => import(\"../screens/AWCheckerInScreen\"));\n\nconst Main = () => {\n  let history = useHistory();\n  //script to manage break triggers is called here\n  let dispatch = useDispatch();\n  useEffect(() => {\n    if (store.getState().onboarding.complete) {\n      BreakManager(history);\n      if (store.getState().break.breakState !== \"break\") {\n        history.push(\"/home\");\n        dispatch(BreakActions.resetBreak());\n      }\n    }\n    if (store.getState().break.breakState === \"break-popup\") {\n    } else if (store.getState().break.breakState === \"break\") {\n      dispatch(BreakActions.startBreak());\n    }\n    ipcRenderer.on(\"asynchronous-message\", function (evt, message) {\n      history.push(\"/sud\");\n    });\n    ipcRenderer.on(\"asynchronous-message-two\", function (evt, message) {\n      if (store.getState().break.breakState === \"no-break\") {\n        history.push(\"/home\");\n        dispatch(BreakActions.resetBreak());\n      } else {\n        let breakInfo = store.getState().break;\n        let pastInfo = store.getState().past;\n        let endtime = breakInfo.breakEndTime;\n        if (breakInfo.breakEndTime.length === 0) {\n          endtime = new Date().toISOString();\n        }\n        let data = {\n          endtime: endtime,\n          intervalBreakData: pastInfo.intervalBreakData,\n          initScheduled: pastInfo.initScheduled,\n          breaksTriggered: breakInfo.breaksTriggered,\n        };\n        dispatch(BreakActions.onCancelBreak(data));\n        dispatch(BreakActions.cancelBreak());\n        curWindow.setOpacity(1);\n        curWindow.setVisibleOnAllWorkspaces(false, {visibleOnFullScreen: false});\n        curWindow.setAlwaysOnTop(false);\n        history.push(\"/home\");\n      }\n    });\n  }, []);\n  return (\n    <Suspense fallback={<Loading />}>\n      <Switch>\n        <Route exact path=\"/calendar\" component={CalendarScreen} />\n        <Route exact path=\"/login\" component={LoginScreen} />\n        <Route exact path=\"/\" component={OnboardingScreen} />\n        <Route path=\"/break\" component={BreakScreen} />\n        <Route path=\"/popup\" component={PopupScreen} />\n        <Route path=\"/home\" component={NewHomeScreen} />\n        <Route path=\"/stroop\" component={StroopScreen} />\n        <Route path=\"/fruit\" component={FruitNinjaScreen} />\n        <Route path=\"/aw\" component={AWCheckerScreen} />\n        <Route path=\"/aww\" component={AWCheckerScreen} />\n        <Route path=\"/ana\" component={AnalyticsScreen} />\n        <Route path=\"/feedback\" component={BreakFeedbackScreen} />\n        <Route path=\"/cancel\" component={CancelScreen} />\n        <Route path=\"/sud\" component={SuddenScreen} />\n        <Route path=\"/edit-sched\" component={EditScheduledBreakScreen} />\n        <Route path=\"/edit-reg\" component={EditRegularBreakScreen} />\n        <Route path=\"/edit-act\" component={EditAdHocBreakScreen} />\n        <Route path=\"/awviz\" component={AWScreen} />\n        <Route path=\"/signup\" component={SignupScreen} />\n        <Route path=\"/prefeedback\" component={PreBreakFeedbackScreen} />\n        <Route path=\"/cpt\" component={CPTScreen} />\n        <Route path=\"/week\" component={WeeklyForm} />\n        <Route path=\"/weekq\" component={WeeklyQInputScreen} />\n        <Route path=\"/weekpop\" component={WeeklyPopUp} />\n        <Route path=\"/cbt\" component={CBTestScreen} />\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Main;\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/AnalyticsScreen/index.jsx",["453","454","455"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/onboarding.reducer.js",["456"],"import { OnboardingTypes, PastTypes } from \"../types\";\nconst initialState = {\n  name: \"\",\n  breakMessage: \"\",\n  screenTime: { start: \"\", end: \"\" },\n  scheduledBreaks: [{ start: \"\", end: \"\", day: \"\" }],\n  regularBreakLength: 1,\n  regularBreakInterval: 60,\n  overRideSites: [\n    { name: \"Youtube\", url: \"www.youtube.com\", key: \"1\", isWebsite: true },\n    { name: \"Google Chrome\", url: \"chrome\", key: \"2\", isWebsite: false },\n    { name: \"Safari\", url: \"safari\", key: \"3\", isWebsite: false },\n    { name: \"Mail\", url: \"mail\", key: \"5\", isWebsite: false },\n    { name: \"Spotify\", url: \"spotify\", key: \"6\", isWebsite: false },\n    { name: \"Terminal\", url: \"terminal\", key: \"7\", isWebsite: false },\n    { name: \"Slack\", url: \"slack\", key: \"9\", isWebsite: false },\n    { name: \"Zoom\", url: \"zoom\", key: \"10\", isWebsite: false },\n  ],\n  allOverRides: [\n    {\n      name: \"\",\n      url: \"\",\n      interval: 60,\n      breakLength: 1,\n      cumulative: true,\n      isWebsite: true,\n    },\n  ],\n  loading: false,\n  err: null,\n  complete: false,\n  startTime: \"\",\n  user: {},\n  awChecked: false,\n  tempScheduledBreaks: [{ start: \"\", end: \"\", day: \"\" }],\n  tempRegularBreakLength: 1,\n  tempRegularBreakInterval: 1,\n  tempOverRideSites: [\n    { name: \"Youtube\", url: \"www.youtube.com\", key: \"1\", isWebsite: true },\n    { name: \"Google Chrome\", url: \"chrome\", key: \"2\", isWebsite: false },\n    { name: \"Safari\", url: \"safari\", key: \"3\", isWebsite: false },\n    { name: \"Mail\", url: \"mail\", key: \"5\", isWebsite: false },\n    { name: \"Spotify\", url: \"spotify\", key: \"6\", isWebsite: false },\n    { name: \"Terminal\", url: \"terminal\", key: \"7\", isWebsite: false },\n    { name: \"Slack\", url: \"slack\", key: \"9\", isWebsite: false },\n    { name: \"Zoom\", url: \"zoom\", key: \"10\", isWebsite: false },\n  ],\n  tempAllOverRides: [\n    { name: \"\", url: \"\", interval: 60, breakLength: 1, isWebsite: true },\n  ],\n  timestamp: \"\",\n  weekly: [],\n  weeklyExtra: [],\n  weeklyRem: false,\n  cbt: [],\n  isLoginFlow: false,\n};\n\nconst OnboardingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case OnboardingTypes.SET_NAME:\n      return { ...state, name: action.payload };\n    case OnboardingTypes.SET_ISLOGINFLOW:\n      return { ...state, isLoginFlow: true };\n    case OnboardingTypes.LOGIN_USER:\n      return { ...state, user: action.payload, name: action.payload.name };\n    case OnboardingTypes.UPDATE_USER:\n      return { ...state, user: action.payload };\n    case OnboardingTypes.SET_BREAK_MESSAGE:\n      return { ...state, breakMessage: action.payload };\n    case OnboardingTypes.SET_SCHEDULED_BREAKS:\n      return { ...state, scheduledBreaks: action.payload };\n    case OnboardingTypes.SET_SCREEN_TIME:\n      return { ...state, screenTime: action.payload };\n    case OnboardingTypes.SET_REGULAR_BREAK_INTERVAL:\n      return { ...state, regularBreakInterval: action.payload };\n    case OnboardingTypes.SET_REGULAR_BREAK_LENGTH:\n      return { ...state, regularBreakLength: action.payload };\n    case OnboardingTypes.SET_ALL_OVERRIDES:\n      return { ...state, allOverRides: action.payload };\n    case OnboardingTypes.SET_OVERRIDE_SITES:\n      return { ...state, overRideSites: action.payload };\n    case OnboardingTypes.SET_ONBOARDING_COMPLETE:\n      return { ...state, complete: true, timestamp: new Date().toISOString() };\n    case OnboardingTypes.AW_CHECKED:\n      return { ...state, awChecked: true };\n    case OnboardingTypes.ADD_ONB_INFO:\n      return { ...state, ...action.payload };\n    case OnboardingTypes.ADD_CBT:\n      return { ...state, cbt: action.payload.data };\n    case OnboardingTypes.ADD_TEMP_SCHED:\n      return { ...state, tempScheduledBreaks: action.payload.value };\n    case OnboardingTypes.ADD_TEMP_REG:\n      return {\n        ...state,\n        tempRegularBreakLength: action.payload.length,\n        tempRegularBreakInterval: action.payload.interval,\n      };\n    case OnboardingTypes.ADD_TEMP_ACT:\n      return {\n        ...state,\n        tempOverRideSites: action.payload.site,\n        tempAllOverRides: action.payload.all,\n      };\n    case OnboardingTypes.RESET:\n      return {\n        name: \"\",\n        breakMessage: \"\",\n        screenTime: { start: \"\", end: \"\" },\n        scheduledBreaks: [{ start: \"\", end: \"\", day: \"\" }],\n        regularBreakLength: 1,\n        regularBreakInterval: 60,\n        overRideSites: [\n          {\n            name: \"Youtube\",\n            url: \"www.youtube.com\",\n            key: \"1\",\n            isWebsite: true,\n          },\n          { name: \"Google Chrome\", url: \"chrome\", key: \"2\", isWebsite: false },\n          { name: \"Safari\", url: \"safari\", key: \"3\", isWebsite: false },\n          { name: \"Mail\", url: \"mail\", key: \"5\", isWebsite: false },\n          { name: \"Spotify\", url: \"spotify\", key: \"6\", isWebsite: false },\n          { name: \"Terminal\", url: \"terminal\", key: \"7\", isWebsite: false },\n          { name: \"Slack\", url: \"slack\", key: \"9\", isWebsite: false },\n          { name: \"Zoom\", url: \"zoom\", key: \"10\", isWebsite: false },\n        ],\n        allOverRides: [\n          {\n            name: \"\",\n            url: \"\",\n            interval: 60,\n            breakLength: 1,\n            cumulative: true,\n            isWebsite: true,\n          },\n        ],\n        loading: false,\n        err: null,\n        complete: false,\n        user: {},\n        awChecked: false,\n        tempScheduledBreaks: [{ start: \"\", end: \"\", day: \"\" }],\n        tempRegularBreakLength: 1,\n        tempRegularBreakInterval: 1,\n        tempOverRideSites: [\n          {\n            name: \"Youtube\",\n            url: \"www.youtube.com\",\n            key: \"1\",\n            isWebsite: true,\n          },\n          { name: \"Google Chrome\", url: \"chrome\", key: \"2\", isWebsite: false },\n          { name: \"Safari\", url: \"safari\", key: \"3\", isWebsite: false },\n          { name: \"Mail\", url: \"mail\", key: \"5\", isWebsite: false },\n          { name: \"Spotify\", url: \"spotify\", key: \"6\", isWebsite: false },\n          { name: \"Terminal\", url: \"terminal\", key: \"7\", isWebsite: false },\n          { name: \"Slack\", url: \"slack\", key: \"9\", isWebsite: false },\n          { name: \"Zoom\", url: \"zoom\", key: \"10\", isWebsite: false },\n        ],\n        tempAllOverRides: [\n          {\n            name: \"\",\n            url: \"\",\n            interval: 60,\n            breakLength: 1,\n            isWebsite: true,\n            isWebsite: true,\n          },\n        ],\n        timestamp: \"\",\n        weekly: [],\n        weeklyExtra: [],\n        weeklyRem: false,\n      };\n    case PastTypes.ADD_WEEKLY:\n      return { ...state, weekly: action.payload.data };\n    case PastTypes.ADD_WEEKLY_EXTRA:\n      return { ...state, weeklyExtra: action.payload.data };\n    case PastTypes.SET_WEEKLY_REM:\n      return { ...state, weeklyRem: action.payload.data };\n    default:\n      return state;\n  }\n};\n\nexport default OnboardingReducer;\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/OnboardingScreen/PersonalInformation.jsx",["457","458","459"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Input, Button, Modal } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\n\nimport { OnboardingActions } from \"../../redux/actions\";\n\nimport \"./styles.css\";\n\nconst { shell } = window.require(\"electron\").remote;\n\nconst PersonalInformationScreen = (props) => {\n  const [message, setMessage] = useState(null);\n  const [added, setAdded] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  useEffect(() => {\n    window.ipcRenderer.on(\"calendar-success\", (event, data) => {});\n  }, []);\n\n  const loginUser = async (id) => {\n    let body = { _id: id };\n    let response = await axios.post(\n      \"https://thepallab.com/api/user/login\",\n      body\n    );\n    if (response.data.user) {\n      props.loginUserAction(response.data.user);\n    }\n  };\n\n  return (\n    <div className=\"step-container\">\n      <Modal\n        title=\"Basic Modal\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n      </Modal>\n      <h1>Personal Information</h1>\n      <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>Name</p>\n      <Input\n        size=\"large\"\n        style={{ width: \"30%\", borderRadius: 5, verticalAlign: \"center\" }}\n        placeholder=\"First Name\"\n        value={props.onboarding.name}\n        onChange={(e) => {\n          props.setName(e.target.value);\n        }}\n      />\n      <div style={{ marginTop: \"3%\" }}>\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\n          What would you do during the break? Add a reminder for yourself.\n          (e.g., drink water, smile, stretch, breathe, etc.)\n        </p>\n        {/* <p style={{ fontSize: \"15px\", color: \"#696969\", width: \"60%\" }}>\n          You can set up to 10 messages, the messages will appear interchangebly\n          on different breaks\n        </p> */}\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Input\n            size=\"large\"\n            style={{\n              width: \"30%\",\n              borderRadius: 5,\n              verticalAlign: \"center\",\n            }}\n            placeholder=\"Break Message\"\n            value={props.onboarding.breakMessage}\n            onChange={(e) => {\n              props.setBreakMessage(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <div style={{ marginTop: \"3%\" }}>\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\n          Add a calendar to help us keep track of any meetings/breaks we should\n          work around (Please use the same email you registered with!)\n        </p>\n        {added ? (\n          <Button\n            type=\"primary\"\n            style={{ borderRadius: \"20px\", marginTop: \"1%\" }}\n            size=\"large\"\n          >\n            Calendar Added!\n          </Button>\n        ) : (\n          <Button\n            type=\"primary\"\n            style={{ borderRadius: \"20px\", marginTop: \"1%\" }}\n            size=\"large\"\n            onClick={() => {\n              // ApiCalendar.handleAuthClick();\n              // ApiCalendar.onLoad(() => {\n              //   ApiCalendar.listenSign(signUpdate);\n              // });\n              shell.openExternal(\"https://thepallab.com/auth/google\");\n              let intervalInfo = setInterval(() => {\n                if (props.onboarding.user.token.length > 0) {\n                  setAdded(true);\n                  clearInterval(intervalInfo);\n                } else {\n                  loginUser(props.onboarding.user._id);\n                }\n              }, 10000);\n            }}\n          >\n            <PlusOutlined style={{ color: \"white\" }} />\n            ADD CALENDAR\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setName: OnboardingActions.setName,\n      setBreakMessage: OnboardingActions.setBreakMessage,\n      loginUserAction: OnboardingActions.loginUser,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PersonalInformationScreen);\n",["460","461"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Loading.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/LoginScreen/index.jsx",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/onboarding.action.js",[],["462","463"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/types/past.types.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/reducers/test.reducer.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/index.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/CancelScreen/index.jsx",[],["464","465"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/CBTestScreen/index.jsx",["466","467","468","469"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Toolbar.js",["470","471","472"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/CPTScreen/index.jsx",["473","474","475","476","477","478","479","480","481","482","483","484","485","486"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/types/onboarding.types.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Games/index.jsx",["487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/SignUpScreen/index.jsx",["510"],"import React, { useState } from \"react\";\nimport { OnboardingActions } from \"../../redux/actions\";\nimport { Button, Input, message } from \"antd\";\nimport axios from \"axios\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nvar validator = require(\"email-validator\");\nvar shell = window.require(\"electron\").shell;\n\nconst { TextArea } = Input;\n\nconst SignupScreen = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [occupation, setOccupation] = useState(\"\");\n  const [education, setEducation] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [goal, setGoal] = useState(\"\");\n  const history = useHistory();\n\n  const loginUser = async () => {\n    let body = {\n      email: username,\n      password,\n      name,\n      age,\n      gender,\n      occupation,\n      education,\n      location,\n      goal,\n    };\n    let response = await axios.post(\n      \"https://thepallab.com/api/user/register\",\n      body\n    );\n    if (response.data.message === \"User Added!\") {\n      message.success(\"New user registered\");\n      props.loginUserAction(response.data.newUser);\n      history.push(\"/aw\");\n    }\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        width: \"100%\",\n      }}\n    >\n      <h3 style={{ textAlign: \"center\" }}>Please Register To Continue</h3>\n      <div style={{ marginTop: \"0.5%\", width: \"90%\" }}>\n        <Button\n          onClick={() => {\n            history.push(\"/login\");\n          }}\n        >\n          Back\n        </Button>\n      </div>\n      <div style={{ marginTop: \"2%\", width: \"50%\" }}>\n        <Input\n          placeholder=\"Name *\"\n          style={{ marginBottom: \"3%\", borderRadius: \"8px\" }}\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n        <Input\n          placeholder=\"Email * (Please use your gmail account. You can sync your Google Calendar in the next step!)\"\n          style={{ marginBottom: \"3%\", borderRadius: \"8px\" }}\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n        <Input.Password\n          placeholder=\"Password *\"\n          style={{ marginBottom: \"3%\", borderRadius: \"8px\" }}\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        <Input\n          placeholder=\"Age (Optional)\"\n          style={{ marginBottom: \"3%\", borderRadius: \"8px\" }}\n          value={age}\n          onChange={(e) => {\n            setAge(e.target.value);\n          }}\n        />\n        <Input\n          placeholder=\"Gender (Optional)\"\n          style={{ marginBottom: \"3%\", borderRadius: \"8px\" }}\n          value={gender}\n          onChange={(e) => {\n            setGender(e.target.value);\n          }}\n        />\n        <Input\n          placeholder=\"Occupation (Optional)\"\n          style={{ marginBottom: \"3%\", borderRadius: \"8px\" }}\n          value={occupation}\n          onChange={(e) => {\n            setOccupation(e.target.value);\n          }}\n        />\n        <Input\n          placeholder=\"Education (Optional)\"\n          style={{ marginBottom: \"3%\", borderRadius: \"8px\" }}\n          value={education}\n          onChange={(e) => {\n            setEducation(e.target.value);\n          }}\n        />\n        <Input\n          placeholder=\"Location (Optional)\"\n          style={{ borderRadius: \"8px\" }}\n          value={location}\n          onChange={(e) => {\n            setLocation(e.target.value);\n          }}\n        />\n        <p style={{ marginTop: \"1%\" }}>\n          What is your goal with this application?\n        </p>\n\n        <TextArea\n          placeholder=\"None of the above? Type your reason...\"\n          style={{ marginBottom: \"3%\", borderRadius: \"8px\" }}\n          rows={4}\n          value={goal}\n          onChange={(e) => {\n            setGoal(e.target.value);\n          }}\n        />\n      </div>\n\n      <Button\n        style={{ background: \"white\", marginTop: \"2%\" }}\n        onClick={() => {\n          if (validator.validate(username)) {\n            if (name.length > 0 && password.length > 0) {\n              message.info(\"Registering New User\");\n              loginUser();\n            } else {\n              message.error(\"Please fill all the required fields!\");\n            }\n          } else {\n            message.error(\"Please enter a valid email address!\");\n          }\n        }}\n      >\n        Register\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      loginUserAction: OnboardingActions.loginUser,\n      addOnbInfo: OnboardingActions.addOnbInfo,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupScreen);\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/TakeWeeklyScreen/index.jsx",["511","512","513"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/breakmanager/weeklyChecker.js",["514","515","516"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/WeeklyPopUp/index.jsx",["517","518","519","520","521","522","523","524","525"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/HomeScreen/index.jsx",["526","527","528","529","530"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Button, Input } from \"antd\";\nimport { BreakActions, OnboardingActions } from \"../../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./styles.css\";\nvar shell = window.require(\"electron\").shell;\nvar electron = window.require(\"electron\");\nvar curWindow = electron.remote.getCurrentWindow();\n\nconst HomeScreen = (props) => {\n  const [breakArray, setBreakArray] = useState([\"https://www.youtube.com\"]);\n  const [tempMessage, setTempMessage] = useState(props.onboarding.breakMessage);\n  const history = useHistory();\n\n  useEffect(() => {\n    // checkUpdateApp();\n  }, []);\n\n  const loginUser = async (id) => {\n    let body = { _id: id };\n    let response = await axios.post(\n      \"https://thepallab.com/api/user/login\",\n      body\n    );\n    if (response.data.user) {\n      props.loginUserAction(response.data.user);\n      props.hardReset();\n      curWindow.webContents.reloadIgnoringCache();\n    }\n  };\n\n  let checkUpdateApp = async () => {\n    let body = {\n      user: props.onboarding.user._id,\n    };\n    let response = await axios.post(\n      \"https://thepallab.com/api/user/updateinfo\",\n      body\n    );\n    if (response.data.shouldUpdate) {\n      let onbData = response.data.onbInfo;\n      let findata = onbData[0];\n      delete findata.user;\n      props.addOnbInfo(findata);\n    }\n  };\n\n  return (\n    <div className=\"step-container\">\n      <div style={{ marginTop: \"3%\", width: \"70%\", margin: \"5%\" }}>\n        {(props.onboarding.user.type === \"0\" ||\n          props.onboarding.user.type === \"1\") && (\n          <div style={{ width: \"100%\" }}>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n                Scheduled Breaks :{\" \"}\n              </p>\n              <Button\n                onClick={() => {\n                  props.addTempSched(props.onboarding.scheduledBreaks);\n                  history.push(\"/edit-sched\");\n                }}\n              >\n                Edit Scheduled Breaks\n              </Button>\n            </div>\n\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                width: \"50%\",\n              }}\n            >\n              <p style={{ flex: 1 }}>Day</p>\n              <p style={{ flex: 1 }}>Start Time</p>\n              <p style={{ flex: 1 }}>End Time</p>\n            </div>\n            <div>\n              {props.onboarding.scheduledBreaks.map((item, index) => {\n                if (item.start.length > 0) {\n                  return (\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        width: \"50%\",\n                        marginTop: index !== 0 ? \"1%\" : \"0%\",\n                      }}\n                    >\n                      <p style={{ flex: 1 }}>{item.day}</p>\n                      <p style={{ flex: 1 }}>\n                        {new Date(item.start).getHours() +\n                          \":\" +\n                          (new Date(item.start).getMinutes() < 10 ? \"0\" : \"\") +\n                          new Date(item.start).getMinutes()}\n                      </p>\n                      <p style={{ flex: 1 }}>\n                        {new Date(item.end).getHours() +\n                          \":\" +\n                          (new Date(item.end).getMinutes() < 10 ? \"0\" : \"\") +\n                          new Date(item.end).getMinutes()}\n                      </p>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </div>\n        )}\n        {(props.onboarding.user.type === \"0\" ||\n          props.onboarding.user.type === \"2\") && (\n          <div style={{ width: \"100%\" }}>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n                Regular Breaks :{\" \"}\n              </p>\n              <Button\n                onClick={() => {\n                  props.addTempReg(\n                    props.onboarding.regularBreakLength,\n                    props.onboarding.regularBreakInterval\n                  );\n                  history.push(\"/edit-reg\");\n                }}\n              >\n                Edit Regular Breaks\n              </Button>{\" \"}\n            </div>\n            <p>\n              How often you want to take regular breaks :{\" \"}\n              {Math.floor(parseInt(props.onboarding.regularBreakInterval) / 60)}{\" \"}\n              hour(s) {parseInt(props.onboarding.regularBreakInterval) % 60}{\" \"}\n              minute(s)\n            </p>\n            <p>\n              How long you want these breaks to be :{\" \"}\n              {props.onboarding.regularBreakLength} minute(s)\n            </p>\n          </div>\n        )}\n        {(props.onboarding.user.type === \"0\" ||\n          props.onboarding.user.type === \"3\") && (\n          <div style={{ width: \"100%\" }}>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n                Activity Based Breaks :{\" \"}\n              </p>\n              <Button\n                onClick={() => {\n                  props.addTempAct(\n                    props.onboarding.overRideSites,\n                    props.onboarding.allOverRides\n                  );\n                  history.push(\"/edit-act\");\n                }}\n              >\n                Edit Activity Based Breaks\n              </Button>\n            </div>\n\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                width: \"50%\",\n              }}\n            >\n              <p style={{ flex: 1 }}>Site</p>\n              <p style={{ flex: 1 }}>Break Interval (minutes)</p>\n              <p style={{ flex: 1 }}>Break Length (minutes)</p>\n            </div>\n            <div>\n              {props.onboarding.allOverRides.map((item, index) => {\n                if (item.name.length > 0) {\n                  return (\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        width: \"50%\",\n                        marginTop: index !== 0 ? \"1%\" : \"0%\",\n                      }}\n                    >\n                      <p style={{ flex: 1 }}>{item.name}</p>\n                      <p style={{ flex: 1 }}>{item.interval}</p>\n                      <p style={{ flex: 1 }}>{item.breakLength}</p>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </div>\n        )}\n        <Button\n          onClick={() => {\n            history.push(\"/sud\");\n          }}\n        >\n          Take a Break!\n        </Button>\n\n        <div style={{ marginTop: \"3%\" }}>\n          <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>Break Message</p>\n          {/* <p style={{ fontSize: \"15px\", color: \"#696969\", width: \"60%\" }}>\n          You can set up to 10 messages, the messages will appear interchangebly\n          on different breaks\n        </p> */}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Input\n              size=\"large\"\n              style={{\n                width: \"30%\",\n                borderRadius: 5,\n                verticalAlign: \"center\",\n              }}\n              placeholder=\"Break Message\"\n              value={tempMessage}\n              onChange={(e) => {\n                setTempMessage(e.target.value);\n              }}\n            />\n            <Button\n              onClick={async () => {\n                let body = {\n                  breakMessage: tempMessage,\n                  user: props.onboarding.user._id,\n                };\n                let response = await axios.post(\n                  \"https://thepallab.com/api/user/update-onb\",\n                  body\n                );\n                if (response.data.message === \"Successful Update\") {\n                  props.setBreakMessage(tempMessage);\n                  history.push(\"/home\");\n                }\n              }}\n              style={{ marginLeft: \"1%\" }}\n            >\n              Update Message\n            </Button>\n          </div>\n        </div>\n        <Button\n          onClick={() => {\n            shell.openExternal(\"https://thepallab.com/feedback\");\n          }}\n          style={{ margin: \"2%\" }}\n        >\n          Feedback Form\n        </Button>\n        <Button\n          onClick={() => {\n            loginUser(props.onboarding.user._id);\n          }}\n          style={{ margin: \"2%\" }}\n        >\n          Force Refresh\n        </Button>\n        <Button\n          onClick={() => {\n            props.resetInfo();\n            history.push(\"/\");\n          }}\n          style={{ margin: \"2%\" }}\n        >\n          Sign Out\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding, break: state.break };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      resetInfo: OnboardingActions.reset,\n      addTempSched: OnboardingActions.addTempSched,\n      addTempReg: OnboardingActions.addTempReg,\n      addTempAct: OnboardingActions.addTempAct,\n      loginUserAction: OnboardingActions.loginUser,\n      setBreakMessage: OnboardingActions.setBreakMessage,\n      addOnbInfo: OnboardingActions.addOnbInfo,\n      hardReset: BreakActions.hardReset,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/actions/break.action.js",[],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/PreBreakFeedbackScreen/index.jsx",["531","532","533","534"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Games/stroop_test_manager.jsx",["535","536","537","538","539"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Games/push_info_end.js",["540","541","542","543","544","545"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/components/Games/push_info.jsx",["546","547","548","549","550"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/AWCheckerInScreen/index.jsx",["551","552","553","554","555"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/WeeklyQInputScreen/index.jsx",["556"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/BreakScreen/index.jsx",["557","558","559","560","561","562","563","564"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport \"./styles.css\";\nimport { store } from \"../../redux\";\n\nimport Timer from \"../../components/Timer\";\nimport ToolBar from \"../../components/Toolbar\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BreakActions, PastActions } from \"../../redux/actions\";\n\nvar electron = window.require(\"electron\");\nvar curWindow = electron.remote.getCurrentWindow();\n\nconst BreakScreen = (props) => {\n  let mounted = true;\n\n  useEffect(() => {\n    return () => {\n      mounted = false;\n    };\n  });\n\n  const breakState = useSelector((state) => state.break.breakState);\n  const dispatch = useDispatch();\n\n  const [minimized, setMinimized] = useState(false);\n\n  const breakDuration = store.getState().break.breakDuration;\n  const breakStartTime = store.getState().break.breakStartTime;\n\n  if (breakState === \"break\" && !minimized) {\n    curWindow.maximize();\n    curWindow.setMovable(false);\n    curWindow.setSize(\n      electron.remote.screen.getPrimaryDisplay().size.width,\n      Math.ceil(electron.remote.screen.getPrimaryDisplay().size.height)\n    );\n    curWindow.setPosition(0, 0);\n\n    return (\n      <div className=\"break-div\">\n        <ToolBar\n          type=\"minimize\"\n          minimize={setMinimized}\n          totaltime={breakDuration}\n          startTime={breakStartTime}\n        />\n        {/* <div className=\"circle\"></div> */}\n        <div className=\"break-text\">\n          {store.getState().onboarding.breakMessage}\n        </div>\n      </div>\n    );\n  } else if (breakState === \"break\" && minimized) {\n    curWindow.setAlwaysOnTop(true);\n    curWindow.unmaximize();\n    curWindow.setMovable(false);\n    curWindow.setSize(\n      electron.remote.screen.getPrimaryDisplay().size.width,\n      Math.ceil(electron.remote.screen.getPrimaryDisplay().size.height / 8)\n    );\n    curWindow.setPosition(\n      0,\n      Math.ceil((6 / 8) * electron.remote.screen.getPrimaryDisplay().size.height)\n    );\n\n    return (\n      <div className=\"break-div\">\n        <ToolBar\n          type=\"maximize\"\n          minimize={setMinimized}\n          totaltime={breakDuration}\n          startTime={breakStartTime}\n          message={store.getState().onboarding.breakMessage}\n        />\n      </div>\n    );\n  }\n  return null;\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding, break: state.break };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BreakScreen);\n",["565","566"],"/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/EditActivityBreaksScreen/index.jsx",["567","568","569","570","571"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Input, Menu, Dropdown, Button, Modal, message, Checkbox } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { OnboardingActions } from \"../../redux/actions\";\n\nimport \"./styles.css\";\n\nconst EditAdHocBreakScreen = (props) => {\n  const [siteName, setSiteName] = useState(\"\");\n  const [siteUrl, setSiteUrl] = useState(\"\");\n  const [isWeb, setIsWeb] = useState(true);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [sites, setSites] = useState([\n    { name: \"Youtube\", url: \"https://www.youtube.com\", key: \"1\" },\n  ]);\n  const history = useHistory();\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setSiteName(\"\");\n    setSiteUrl(\"\");\n    setIsWeb(true);\n  };\n\n  const menu = (mainIndex) => (\n    <Menu\n      onClick={({ key }) => {\n        if (\n          key === (props.onboarding.tempOverRideSites.length + 1).toString()\n        ) {\n          setIsModalVisible(true);\n        } else {\n          let keyInt = parseInt(key);\n          let tempArray = props.onboarding.tempAllOverRides;\n          let tempObj = tempArray[mainIndex];\n          let siteObject = props.onboarding.tempOverRideSites[keyInt - 1];\n          tempObj.name = siteObject.name;\n          tempObj.url = siteObject.url;\n          tempObj.isWebsite =\n            siteObject.isWebsite === true || siteObject.isWebsite === false\n              ? siteObject.isWebsite\n              : true;\n          tempArray[mainIndex] = tempObj;\n          props.addTempAct(props.onboarding.tempOverRideSites, tempArray);\n        }\n      }}\n    >\n      {props.onboarding.tempOverRideSites.map((item, index) => {\n        return <Menu.Item key={item.key}>{item.name}</Menu.Item>;\n      })}\n      <Menu.Item\n        key={(props.onboarding.tempOverRideSites.length + 1).toString()}\n      >\n        +ADD ANOTHER\n      </Menu.Item>\n    </Menu>\n  );\n\n  const Capitalize = (str) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <div\n      className=\"step-container\"\n      style={{ marginBottom: \"10px\", margin: \"2%\" }}\n    >\n      <Modal\n        title=\"\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        centered\n        footer={null}\n        width={700}\n      >\n        <div style={{ margin: \"7%\" }}>\n          <h2>Add an Activity</h2>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Input\n              size=\"large\"\n              style={{\n                width: \"45%\",\n                borderRadius: 5,\n                verticalAlign: \"center\",\n                marginRight: \"2.5%\",\n              }}\n              placeholder=\"Activity Name\"\n              value={siteName}\n              onChange={(e) => {\n                setSiteName(e.target.value);\n              }}\n            />\n            <Input\n              size=\"large\"\n              style={{\n                width: \"45%\",\n                borderRadius: 5,\n                verticalAlign: \"center\",\n                marginLeft: \"2.5%\",\n              }}\n              placeholder=\"Activity URL/File Name\"\n              value={siteUrl}\n              onChange={(e) => {\n                setSiteUrl(e.target.value);\n              }}\n            />\n          </div>\n\n          <div\n            style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"5%\" }}\n          >\n            <p style={{ marginRight: \"1%\" }}>Website</p>\n            <Checkbox\n              style={{ flex: 1 }}\n              onChange={(e) => {\n                setIsWeb(true);\n              }}\n              checked={isWeb}\n            />\n          </div>\n          <div\n            style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"0.2%\" }}\n          >\n            <p style={{ marginRight: \"1%\" }}>Desktop Application</p>\n            <Checkbox\n              style={{ flex: 1 }}\n              onChange={(e) => {\n                setIsWeb(false);\n              }}\n              checked={!isWeb}\n            />\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              marginTop: \"8%\",\n            }}\n          >\n            <Button\n              style={{ marginRight: \"2.5%\" }}\n              onClick={() => {\n                setIsModalVisible(false);\n              }}\n            >\n              CANCEL\n            </Button>\n            <Button\n              type=\"primary\"\n              style={{ marginLeft: \"2.5%\" }}\n              onClick={() => {\n                let key = (\n                  props.onboarding.tempOverRideSites.length + 1\n                ).toString();\n                let tempArray = props.onboarding.tempOverRideSites;\n                let finalSiteName = Capitalize(siteName);\n                tempArray.push({\n                  url: siteUrl,\n                  name: finalSiteName,\n                  key,\n                  isWebsite: isWeb,\n                });\n                props.addTempAct(tempArray, props.onboarding.tempAllOverRides);\n                setIsModalVisible(false);\n              }}\n            >\n              ADD ACTIVITY\n            </Button>\n          </div>\n        </div>\n      </Modal>\n      <h1>Break Overrides</h1>\n\n      <div style={{ marginTop: \"2%\" }}>\n        <p style={{ fontSize: \"15px\", color: \"#696969\", width: \"80%\" }}>\n          This section is to set up any specific breaks that you want to take.\n          For example you can set the app up to start some breaks every time you\n          open a specific app like Facebook.\n        </p>\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <div\n            style={{\n              marginTop: \"1%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              width: \"100%\",\n            }}\n          >\n            <p style={{ flex: 2, fontSize: \"18px\" }}>Activity Name</p>\n            <p style={{ flex: 1, fontSize: \"18px\" }}>After Every</p>\n            <p style={{ flex: 1, fontSize: \"18px\" }}>take a Break For</p>\n            <p style={{ flex: 1, fontSize: \"18px\" }}></p>\n          </div>\n          {props.onboarding.tempAllOverRides.map((item, index) => {\n            return (\n              <div style={{ marginTop: \"1%\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    width: \"100%\",\n                  }}\n                >\n                  <div style={{ flex: 2 }}>\n                    <Dropdown overlay={menu(index)} trigger={[\"click\"]}>\n                      <Button\n                        size=\"large\"\n                        style={{\n                          borderRadius: 5,\n                          width: \"80%\",\n                        }}\n                      >\n                        {item.name.length !== 0 ? (\n                          <div\n                            style={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            {item.name}\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\n                          </div>\n                        ) : (\n                          <div\n                            style={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            Select Activity\n                            <DownOutlined style={{ fontSize: \"13px\" }} />\n                          </div>\n                        )}\n                      </Button>\n                    </Dropdown>\n                  </div>\n                  <div\n                    style={{\n                      flex: 1,\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Input\n                      size=\"large\"\n                      style={{\n                        borderRadius: 5,\n                        verticalAlign: \"center\",\n                        width: \"45%\",\n                      }}\n                      placeholder=\"Interval\"\n                      type=\"number\"\n                      value={item.interval}\n                      onChange={(e) => {\n                        if (\n                          e.target.value.length > 0 &&\n                          parseInt(e.target.value) < 61 &&\n                          parseInt(e.target.value) > -1\n                        ) {\n                          let tempArray = props.onboarding.tempAllOverRides;\n                          let tempObj = tempArray[index];\n                          tempObj.interval = e.target.value;\n                          tempArray[index] = tempObj;\n                          props.addTempAct(\n                            props.onboarding.tempOverRideSites,\n                            tempArray\n                          );\n                        } else {\n                          let tempArray = props.onboarding.tempAllOverRides;\n                          let tempObj = tempArray[index];\n                          tempObj.interval = \"\";\n                          tempArray[index] = tempObj;\n                          props.addTempAct(\n                            props.onboarding.tempOverRideSites,\n                            tempArray\n                          );\n                        }\n                      }}\n                    />\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100%\",\n                      }}\n                    >\n                      <p\n                        style={{\n                          paddingTop: \"20%\",\n                          marginLeft: \"7%\",\n                          fontSize: \"15px\",\n                          flex: 1,\n                          height: \"100%\",\n                        }}\n                      >\n                        minutes\n                      </p>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      flex: 1,\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Input\n                      size=\"large\"\n                      style={{\n                        borderRadius: 5,\n                        verticalAlign: \"center\",\n                        width: \"45%\",\n                      }}\n                      placeholder=\"Length\"\n                      type=\"number\"\n                      value={item.breakLength}\n                      onChange={(e) => {\n                        if (\n                          e.target.value.length > 0 &&\n                          parseInt(e.target.value) < 61 &&\n                          parseInt(e.target.value) > -1\n                        ) {\n                          let tempArray = props.onboarding.tempAllOverRides;\n                          let tempObj = tempArray[index];\n                          tempObj.breakLength = e.target.value;\n                          tempArray[index] = tempObj;\n                          props.addTempAct(\n                            props.onboarding.tempOverRideSites,\n                            tempArray\n                          );\n                        } else {\n                          let tempArray = props.onboarding.tempAllOverRides;\n                          let tempObj = tempArray[index];\n                          tempObj.breakLength = \"\";\n                          tempArray[index] = tempObj;\n                          props.addTempAct(\n                            props.onboarding.tempOverRideSites,\n                            tempArray\n                          );\n                        }\n                      }}\n                    />\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100%\",\n                      }}\n                    >\n                      <p\n                        style={{\n                          paddingTop: \"20%\",\n                          marginLeft: \"7%\",\n                          fontSize: \"15px\",\n                          flex: 1,\n                          height: \"100%\",\n                        }}\n                      >\n                        minutes\n                      </p>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      flex: 1,\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Checkbox\n                      checked={item.cumulative}\n                      onChange={(e) => {\n                        let tempArray = props.onboarding.tempAllOverRides;\n                        let tempObj = tempArray[index];\n                        tempObj.cumulative = e.target.checked;\n                        tempArray[index] = tempObj;\n                        props.addTempAct(\n                          props.onboarding.tempOverRideSites,\n                          tempArray\n                        );\n                      }}\n                    />\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100%\",\n                      }}\n                    >\n                      <p\n                        style={{\n                          paddingTop: \"20%\",\n                          marginLeft: \"7%\",\n                          fontSize: \"15px\",\n                          flex: 1,\n                          height: \"100%\",\n                        }}\n                      >\n                        Cumulative\n                      </p>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      flex: 1,\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Button\n                      style={{ marginLeft: \"2%\" }}\n                      onClick={() => {\n                        let tempArray = props.onboarding.tempAllOverRides;\n                        tempArray.splice(index, 1);\n                        props.addTempAct(\n                          props.onboarding.tempOverRideSites,\n                          tempArray\n                        );\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          <p\n            style={{\n              textDecorationLine: \"underline\",\n              marginTop: \"2%\",\n              fontSize: \"17px\",\n              cursor: \"pointer\",\n              width: \"15%\",\n            }}\n            onClick={() => {\n              let tempArray = props.onboarding.tempAllOverRides;\n              tempArray.push({\n                name: \"\",\n                url: \"\",\n                interval: 60,\n                breakLength: 1,\n                isWebsite: true,\n              });\n              props.addTempAct(props.onboarding.tempOverRideSites, tempArray);\n            }}\n          >\n            +Add Override\n          </p>\n        </div>\n      </div>\n      <Button\n        onClick={() => {\n          history.push(\"/home\");\n        }}\n      >\n        Cancel\n      </Button>\n      <Button\n        onClick={async () => {\n          let body = {\n            overRideSites: props.onboarding.tempOverRideSites,\n            allOverRides: props.onboarding.tempAllOverRides,\n            user: props.onboarding.user._id,\n          };\n          let response = await axios.post(\n            \"https://thepallab.com/api/user/update-onb\",\n            body\n          );\n          if (response.data.message === \"Successful Update\") {\n            props.setAllOverrides(props.onboarding.tempAllOverRides);\n            props.setOverrideSites(props.onboarding.tempOverRideSites);\n            history.push(\"/home\");\n          }\n        }}\n      >\n        Update Activity Based Breaks\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { onboarding: state.onboarding };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setAllOverrides: OnboardingActions.setAllOverrides,\n      setOverrideSites: OnboardingActions.setOverrideSites,\n      addTempAct: OnboardingActions.addTempAct,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditAdHocBreakScreen);\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/screens/FruitNinjaScreen/index.jsx",["572","573","574","575","576","577","578","579","580","581","582","583","584","585"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BreakActions, PastActions } from \"../../redux/actions\";\nimport { Button } from \"antd\";\nimport { store } from \"../../redux\";\nimport Games from \"../../components/Games\";\n\nconst { ipcRenderer, remote } = window.require(\"electron\");\n\nvar s1 = {\n  height: \"100vh\",\n  width: \"100vw\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n//TO-DO: add style\nconst FruitNinjaScreen = () => {\n  const [complte, setComplete] = useState(false);\n  const [scores, setScore] = useState([]);\n  let dispatch = useDispatch();\n  var order = Math.floor(Math.random() * 2);\n  return (\n    <Games\n      order={0}\n      status={\"end\"}\n      onComplete={() => {\n        //remove in mobile app\n        // remote.getCurrentWindow().close();\n      }}\n    />\n  );\n};\nexport default FruitNinjaScreen;\n","/Users/shriramchenniappa/Desktop/personal/RL_app/src/redux/types/index.js",[],{"ruleId":"586","replacedBy":"587"},{"ruleId":"588","replacedBy":"589"},{"ruleId":"590","severity":1,"message":"591","line":1,"column":15,"nodeType":"592","messageId":"593","endLine":1,"endColumn":19},{"ruleId":"586","replacedBy":"594"},{"ruleId":"588","replacedBy":"595"},{"ruleId":"590","severity":1,"message":"596","line":1,"column":10,"nodeType":"592","messageId":"593","endLine":1,"endColumn":22},{"ruleId":"590","severity":1,"message":"597","line":63,"column":11,"nodeType":"592","messageId":"593","endLine":63,"endColumn":19},{"ruleId":"586","replacedBy":"598"},{"ruleId":"588","replacedBy":"599"},{"ruleId":"590","severity":1,"message":"600","line":1,"column":17,"nodeType":"592","messageId":"593","endLine":1,"endColumn":26},{"ruleId":"590","severity":1,"message":"601","line":1,"column":28,"nodeType":"592","messageId":"593","endLine":1,"endColumn":36},{"ruleId":"602","severity":1,"message":"603","line":61,"column":45,"nodeType":"604","messageId":"605","endLine":61,"endColumn":47},{"ruleId":"602","severity":1,"message":"603","line":77,"column":41,"nodeType":"604","messageId":"605","endLine":77,"endColumn":43},{"ruleId":"590","severity":1,"message":"606","line":101,"column":11,"nodeType":"592","messageId":"593","endLine":101,"endColumn":17},{"ruleId":"607","severity":1,"message":"608","line":123,"column":40,"nodeType":"609","messageId":"610","endLine":123,"endColumn":41},{"ruleId":"607","severity":1,"message":"608","line":123,"column":66,"nodeType":"609","messageId":"610","endLine":123,"endColumn":67},{"ruleId":"607","severity":1,"message":"608","line":133,"column":40,"nodeType":"609","messageId":"610","endLine":133,"endColumn":41},{"ruleId":"607","severity":1,"message":"608","line":133,"column":66,"nodeType":"609","messageId":"610","endLine":133,"endColumn":67},{"ruleId":"611","severity":1,"message":"612","line":30,"column":6,"nodeType":"613","endLine":30,"endColumn":8,"suggestions":"614"},{"ruleId":"615","severity":1,"message":"616","line":32,"column":27,"nodeType":"609","messageId":"617","endLine":32,"endColumn":29},{"ruleId":"618","severity":1,"message":"619","line":71,"column":7,"nodeType":"592","messageId":"620","endLine":71,"endColumn":12},{"ruleId":"618","severity":1,"message":"621","line":72,"column":7,"nodeType":"592","messageId":"620","endLine":72,"endColumn":13},{"ruleId":"590","severity":1,"message":"622","line":83,"column":13,"nodeType":"592","messageId":"593","endLine":83,"endColumn":19},{"ruleId":"590","severity":1,"message":"623","line":83,"column":21,"nodeType":"592","messageId":"593","endLine":83,"endColumn":30},{"ruleId":"590","severity":1,"message":"624","line":83,"column":32,"nodeType":"592","messageId":"593","endLine":83,"endColumn":37},{"ruleId":"590","severity":1,"message":"625","line":83,"column":39,"nodeType":"592","messageId":"593","endLine":83,"endColumn":45},{"ruleId":"590","severity":1,"message":"626","line":83,"column":47,"nodeType":"592","messageId":"593","endLine":83,"endColumn":63},{"ruleId":"615","severity":1,"message":"616","line":113,"column":19,"nodeType":"609","messageId":"617","endLine":113,"endColumn":21},{"ruleId":"586","replacedBy":"627"},{"ruleId":"588","replacedBy":"628"},{"ruleId":"590","severity":1,"message":"629","line":1,"column":27,"nodeType":"592","messageId":"593","endLine":1,"endColumn":34},{"ruleId":"590","severity":1,"message":"630","line":5,"column":7,"nodeType":"592","messageId":"593","endLine":5,"endColumn":12},{"ruleId":"590","severity":1,"message":"631","line":6,"column":7,"nodeType":"592","messageId":"593","endLine":6,"endColumn":11},{"ruleId":"590","severity":1,"message":"600","line":1,"column":17,"nodeType":"592","messageId":"593","endLine":1,"endColumn":26},{"ruleId":"586","replacedBy":"632"},{"ruleId":"588","replacedBy":"633"},{"ruleId":"590","severity":1,"message":"600","line":1,"column":27,"nodeType":"592","messageId":"593","endLine":1,"endColumn":36},{"ruleId":"590","severity":1,"message":"600","line":1,"column":17,"nodeType":"592","messageId":"593","endLine":1,"endColumn":26},{"ruleId":"586","replacedBy":"634"},{"ruleId":"588","replacedBy":"635"},{"ruleId":"590","severity":1,"message":"600","line":1,"column":17,"nodeType":"592","messageId":"593","endLine":1,"endColumn":26},{"ruleId":"590","severity":1,"message":"601","line":1,"column":28,"nodeType":"592","messageId":"593","endLine":1,"endColumn":36},{"ruleId":"590","severity":1,"message":"636","line":4,"column":10,"nodeType":"592","messageId":"593","endLine":4,"endColumn":16},{"ruleId":"590","severity":1,"message":"637","line":4,"column":24,"nodeType":"592","messageId":"593","endLine":4,"endColumn":29},{"ruleId":"590","severity":1,"message":"638","line":15,"column":9,"nodeType":"592","messageId":"593","endLine":15,"endColumn":16},{"ruleId":"586","replacedBy":"639"},{"ruleId":"588","replacedBy":"640"},{"ruleId":"590","severity":1,"message":"641","line":1,"column":24,"nodeType":"592","messageId":"593","endLine":1,"endColumn":35},{"ruleId":"586","replacedBy":"642"},{"ruleId":"588","replacedBy":"643"},{"ruleId":"590","severity":1,"message":"600","line":1,"column":17,"nodeType":"592","messageId":"593","endLine":1,"endColumn":26},{"ruleId":"590","severity":1,"message":"644","line":4,"column":48,"nodeType":"592","messageId":"593","endLine":4,"endColumn":55},{"ruleId":"590","severity":1,"message":"645","line":16,"column":10,"nodeType":"592","messageId":"593","endLine":16,"endColumn":15},{"ruleId":"590","severity":1,"message":"646","line":16,"column":17,"nodeType":"592","messageId":"593","endLine":16,"endColumn":25},{"ruleId":"590","severity":1,"message":"647","line":20,"column":9,"nodeType":"592","messageId":"593","endLine":20,"endColumn":18},{"ruleId":"586","replacedBy":"648"},{"ruleId":"588","replacedBy":"649"},{"ruleId":"650","severity":1,"message":"651","line":136,"column":3,"nodeType":"652","messageId":"653","endLine":147,"endColumn":4},{"ruleId":"654","severity":1,"message":"655","line":139,"column":5,"nodeType":"656","messageId":"657","endLine":140,"endColumn":16},{"ruleId":"654","severity":1,"message":"655","line":141,"column":5,"nodeType":"656","messageId":"657","endLine":142,"endColumn":16},{"ruleId":"654","severity":1,"message":"655","line":143,"column":5,"nodeType":"656","messageId":"657","endLine":144,"endColumn":16},{"ruleId":"654","severity":1,"message":"655","line":145,"column":5,"nodeType":"656","messageId":"657","endLine":146,"endColumn":18},{"ruleId":"586","replacedBy":"658"},{"ruleId":"588","replacedBy":"659"},{"ruleId":"586","replacedBy":"660"},{"ruleId":"588","replacedBy":"661"},{"ruleId":"590","severity":1,"message":"600","line":1,"column":17,"nodeType":"592","messageId":"593","endLine":1,"endColumn":26},{"ruleId":"590","severity":1,"message":"662","line":7,"column":8,"nodeType":"592","messageId":"593","endLine":7,"endColumn":15},{"ruleId":"590","severity":1,"message":"663","line":8,"column":10,"nodeType":"592","messageId":"593","endLine":8,"endColumn":25},{"ruleId":"590","severity":1,"message":"664","line":19,"column":10,"nodeType":"592","messageId":"593","endLine":19,"endColumn":17},{"ruleId":"590","severity":1,"message":"665","line":19,"column":19,"nodeType":"592","messageId":"593","endLine":19,"endColumn":29},{"ruleId":"590","severity":1,"message":"666","line":22,"column":19,"nodeType":"592","messageId":"593","endLine":22,"endColumn":26},{"ruleId":"590","severity":1,"message":"638","line":49,"column":9,"nodeType":"592","messageId":"593","endLine":49,"endColumn":16},{"ruleId":"615","severity":1,"message":"616","line":54,"column":16,"nodeType":"609","messageId":"617","endLine":54,"endColumn":18},{"ruleId":"590","severity":1,"message":"667","line":156,"column":19,"nodeType":"592","messageId":"593","endLine":156,"endColumn":28},{"ruleId":"590","severity":1,"message":"668","line":184,"column":12,"nodeType":"592","messageId":"593","endLine":184,"endColumn":24},{"ruleId":"586","replacedBy":"669"},{"ruleId":"588","replacedBy":"670"},{"ruleId":"590","severity":1,"message":"671","line":4,"column":8,"nodeType":"592","messageId":"593","endLine":4,"endColumn":20},{"ruleId":"590","severity":1,"message":"638","line":15,"column":7,"nodeType":"592","messageId":"593","endLine":15,"endColumn":14},{"ruleId":"586","replacedBy":"672"},{"ruleId":"588","replacedBy":"673"},{"ruleId":"590","severity":1,"message":"674","line":15,"column":10,"nodeType":"592","messageId":"593","endLine":15,"endColumn":31},{"ruleId":"611","severity":1,"message":"675","line":66,"column":6,"nodeType":"613","endLine":66,"endColumn":8,"suggestions":"676"},{"ruleId":"590","severity":1,"message":"677","line":2,"column":37,"nodeType":"592","messageId":"593","endLine":2,"endColumn":42},{"ruleId":"586","replacedBy":"678"},{"ruleId":"588","replacedBy":"679"},{"ruleId":"590","severity":1,"message":"680","line":2,"column":23,"nodeType":"592","messageId":"593","endLine":2,"endColumn":34},{"ruleId":"590","severity":1,"message":"596","line":3,"column":10,"nodeType":"592","messageId":"593","endLine":3,"endColumn":22},{"ruleId":"590","severity":1,"message":"641","line":3,"column":24,"nodeType":"592","messageId":"593","endLine":3,"endColumn":35},{"ruleId":"590","severity":1,"message":"636","line":4,"column":10,"nodeType":"592","messageId":"593","endLine":4,"endColumn":16},{"ruleId":"590","severity":1,"message":"681","line":5,"column":10,"nodeType":"592","messageId":"593","endLine":5,"endColumn":15},{"ruleId":"590","severity":1,"message":"682","line":8,"column":9,"nodeType":"592","messageId":"593","endLine":8,"endColumn":20},{"ruleId":"590","severity":1,"message":"683","line":8,"column":22,"nodeType":"592","messageId":"593","endLine":8,"endColumn":28},{"ruleId":"590","severity":1,"message":"684","line":10,"column":5,"nodeType":"592","messageId":"593","endLine":10,"endColumn":7},{"ruleId":"590","severity":1,"message":"685","line":19,"column":10,"nodeType":"592","messageId":"593","endLine":19,"endColumn":17},{"ruleId":"590","severity":1,"message":"686","line":19,"column":19,"nodeType":"592","messageId":"593","endLine":19,"endColumn":30},{"ruleId":"590","severity":1,"message":"687","line":20,"column":10,"nodeType":"592","messageId":"593","endLine":20,"endColumn":16},{"ruleId":"590","severity":1,"message":"688","line":20,"column":18,"nodeType":"592","messageId":"593","endLine":20,"endColumn":26},{"ruleId":"590","severity":1,"message":"689","line":21,"column":7,"nodeType":"592","messageId":"593","endLine":21,"endColumn":15},{"ruleId":"590","severity":1,"message":"690","line":22,"column":7,"nodeType":"592","messageId":"593","endLine":22,"endColumn":12},{"ruleId":"590","severity":1,"message":"680","line":3,"column":23,"nodeType":"592","messageId":"593","endLine":3,"endColumn":34},{"ruleId":"590","severity":1,"message":"641","line":4,"column":24,"nodeType":"592","messageId":"593","endLine":4,"endColumn":35},{"ruleId":"590","severity":1,"message":"691","line":4,"column":8,"nodeType":"592","messageId":"593","endLine":4,"endColumn":13},{"ruleId":"590","severity":1,"message":"600","line":1,"column":17,"nodeType":"592","messageId":"593","endLine":1,"endColumn":26},{"ruleId":"590","severity":1,"message":"692","line":4,"column":10,"nodeType":"592","messageId":"593","endLine":4,"endColumn":15},{"ruleId":"590","severity":1,"message":"693","line":9,"column":10,"nodeType":"592","messageId":"593","endLine":9,"endColumn":20},{"ruleId":"590","severity":1,"message":"694","line":9,"column":22,"nodeType":"592","messageId":"593","endLine":9,"endColumn":35},{"ruleId":"602","severity":1,"message":"695","line":39,"column":67,"nodeType":"604","messageId":"696","endLine":39,"endColumn":69},{"ruleId":"602","severity":1,"message":"695","line":109,"column":64,"nodeType":"604","messageId":"696","endLine":109,"endColumn":66},{"ruleId":"586","replacedBy":"697"},{"ruleId":"588","replacedBy":"698"},{"ruleId":"590","severity":1,"message":"636","line":1,"column":10,"nodeType":"592","messageId":"593","endLine":1,"endColumn":16},{"ruleId":"590","severity":1,"message":"677","line":2,"column":37,"nodeType":"592","messageId":"593","endLine":2,"endColumn":42},{"ruleId":"590","severity":1,"message":"699","line":8,"column":13,"nodeType":"592","messageId":"593","endLine":8,"endColumn":18},{"ruleId":"590","severity":1,"message":"700","line":9,"column":8,"nodeType":"592","messageId":"593","endLine":9,"endColumn":10},{"ruleId":"590","severity":1,"message":"701","line":10,"column":8,"nodeType":"592","messageId":"593","endLine":10,"endColumn":10},{"ruleId":"590","severity":1,"message":"702","line":11,"column":8,"nodeType":"592","messageId":"593","endLine":11,"endColumn":10},{"ruleId":"590","severity":1,"message":"703","line":12,"column":8,"nodeType":"592","messageId":"593","endLine":12,"endColumn":10},{"ruleId":"590","severity":1,"message":"704","line":15,"column":8,"nodeType":"592","messageId":"593","endLine":15,"endColumn":11},{"ruleId":"590","severity":1,"message":"705","line":16,"column":8,"nodeType":"592","messageId":"593","endLine":16,"endColumn":11},{"ruleId":"590","severity":1,"message":"706","line":17,"column":8,"nodeType":"592","messageId":"593","endLine":17,"endColumn":11},{"ruleId":"590","severity":1,"message":"707","line":18,"column":8,"nodeType":"592","messageId":"593","endLine":18,"endColumn":11},{"ruleId":"590","severity":1,"message":"708","line":24,"column":7,"nodeType":"592","messageId":"593","endLine":24,"endColumn":29},{"ruleId":"611","severity":1,"message":"709","line":57,"column":6,"nodeType":"613","endLine":57,"endColumn":8,"suggestions":"710"},{"ruleId":"590","severity":1,"message":"711","line":86,"column":9,"nodeType":"592","messageId":"593","endLine":86,"endColumn":22},{"ruleId":"590","severity":1,"message":"712","line":88,"column":9,"nodeType":"592","messageId":"593","endLine":88,"endColumn":20},{"ruleId":"615","severity":1,"message":"616","line":95,"column":16,"nodeType":"609","messageId":"617","endLine":95,"endColumn":18},{"ruleId":"586","replacedBy":"713"},{"ruleId":"588","replacedBy":"714"},{"ruleId":"590","severity":1,"message":"600","line":1,"column":17,"nodeType":"592","messageId":"593","endLine":1,"endColumn":26},{"ruleId":"590","severity":1,"message":"601","line":1,"column":28,"nodeType":"592","messageId":"593","endLine":1,"endColumn":36},{"ruleId":"586","replacedBy":"715"},{"ruleId":"588","replacedBy":"716"},{"ruleId":"590","severity":1,"message":"717","line":7,"column":10,"nodeType":"592","messageId":"593","endLine":7,"endColumn":18},{"ruleId":"590","severity":1,"message":"718","line":11,"column":7,"nodeType":"592","messageId":"593","endLine":11,"endColumn":17},{"ruleId":"590","severity":1,"message":"719","line":47,"column":7,"nodeType":"592","messageId":"593","endLine":47,"endColumn":24},{"ruleId":"611","severity":1,"message":"720","line":93,"column":6,"nodeType":"613","endLine":93,"endColumn":8,"suggestions":"721"},{"ruleId":"590","severity":1,"message":"722","line":2,"column":10,"nodeType":"592","messageId":"593","endLine":2,"endColumn":27},{"ruleId":"590","severity":1,"message":"692","line":3,"column":18,"nodeType":"592","messageId":"593","endLine":3,"endColumn":23},{"ruleId":"611","severity":1,"message":"709","line":22,"column":6,"nodeType":"613","endLine":22,"endColumn":8,"suggestions":"723"},{"ruleId":"724","severity":1,"message":"725","line":168,"column":13,"nodeType":"726","messageId":"617","endLine":168,"endColumn":22},{"ruleId":"590","severity":1,"message":"727","line":15,"column":10,"nodeType":"592","messageId":"593","endLine":15,"endColumn":17},{"ruleId":"590","severity":1,"message":"728","line":15,"column":19,"nodeType":"592","messageId":"593","endLine":15,"endColumn":29},{"ruleId":"590","severity":1,"message":"647","line":19,"column":9,"nodeType":"592","messageId":"593","endLine":19,"endColumn":18},{"ruleId":"586","replacedBy":"729"},{"ruleId":"588","replacedBy":"730"},{"ruleId":"586","replacedBy":"731"},{"ruleId":"588","replacedBy":"732"},{"ruleId":"586","replacedBy":"733"},{"ruleId":"588","replacedBy":"734"},{"ruleId":"590","severity":1,"message":"596","line":2,"column":10,"nodeType":"592","messageId":"593","endLine":2,"endColumn":22},{"ruleId":"590","severity":1,"message":"644","line":3,"column":25,"nodeType":"592","messageId":"593","endLine":3,"endColumn":32},{"ruleId":"590","severity":1,"message":"735","line":8,"column":9,"nodeType":"592","messageId":"593","endLine":8,"endColumn":17},{"ruleId":"736","severity":1,"message":"737","line":27,"column":7,"nodeType":"738","endLine":27,"endColumn":78},{"ruleId":"590","severity":1,"message":"641","line":2,"column":24,"nodeType":"592","messageId":"593","endLine":2,"endColumn":35},{"ruleId":"611","severity":1,"message":"739","line":12,"column":17,"nodeType":"740","endLine":12,"endColumn":22},{"ruleId":"615","severity":1,"message":"741","line":21,"column":15,"nodeType":"609","messageId":"617","endLine":21,"endColumn":17},{"ruleId":"590","severity":1,"message":"636","line":3,"column":10,"nodeType":"592","messageId":"593","endLine":3,"endColumn":16},{"ruleId":"590","severity":1,"message":"692","line":3,"column":18,"nodeType":"592","messageId":"593","endLine":3,"endColumn":23},{"ruleId":"590","severity":1,"message":"644","line":3,"column":25,"nodeType":"592","messageId":"593","endLine":3,"endColumn":32},{"ruleId":"590","severity":1,"message":"691","line":4,"column":8,"nodeType":"592","messageId":"593","endLine":4,"endColumn":13},{"ruleId":"590","severity":1,"message":"742","line":10,"column":10,"nodeType":"592","messageId":"593","endLine":10,"endColumn":18},{"ruleId":"590","severity":1,"message":"743","line":12,"column":10,"nodeType":"592","messageId":"593","endLine":12,"endColumn":14},{"ruleId":"590","severity":1,"message":"744","line":12,"column":16,"nodeType":"592","messageId":"593","endLine":12,"endColumn":23},{"ruleId":"590","severity":1,"message":"638","line":13,"column":9,"nodeType":"592","messageId":"593","endLine":13,"endColumn":16},{"ruleId":"590","severity":1,"message":"745","line":14,"column":10,"nodeType":"592","messageId":"593","endLine":14,"endColumn":20},{"ruleId":"590","severity":1,"message":"746","line":14,"column":22,"nodeType":"592","messageId":"593","endLine":14,"endColumn":35},{"ruleId":"590","severity":1,"message":"747","line":15,"column":10,"nodeType":"592","messageId":"593","endLine":15,"endColumn":19},{"ruleId":"590","severity":1,"message":"748","line":15,"column":21,"nodeType":"592","messageId":"593","endLine":15,"endColumn":33},{"ruleId":"590","severity":1,"message":"749","line":78,"column":11,"nodeType":"592","messageId":"593","endLine":78,"endColumn":16},{"ruleId":"611","severity":1,"message":"750","line":137,"column":6,"nodeType":"613","endLine":137,"endColumn":8,"suggestions":"751"},{"ruleId":"590","severity":1,"message":"691","line":6,"column":8,"nodeType":"592","messageId":"593","endLine":6,"endColumn":13},{"ruleId":"590","severity":1,"message":"680","line":12,"column":23,"nodeType":"592","messageId":"593","endLine":12,"endColumn":34},{"ruleId":"590","severity":1,"message":"682","line":14,"column":9,"nodeType":"592","messageId":"593","endLine":14,"endColumn":20},{"ruleId":"590","severity":1,"message":"683","line":14,"column":22,"nodeType":"592","messageId":"593","endLine":14,"endColumn":28},{"ruleId":"615","severity":1,"message":"616","line":47,"column":27,"nodeType":"609","messageId":"617","endLine":47,"endColumn":29},{"ruleId":"615","severity":1,"message":"616","line":48,"column":28,"nodeType":"609","messageId":"617","endLine":48,"endColumn":30},{"ruleId":"615","severity":1,"message":"616","line":49,"column":27,"nodeType":"609","messageId":"617","endLine":49,"endColumn":29},{"ruleId":"615","severity":1,"message":"616","line":56,"column":32,"nodeType":"609","messageId":"617","endLine":56,"endColumn":34},{"ruleId":"615","severity":1,"message":"616","line":56,"column":57,"nodeType":"609","messageId":"617","endLine":56,"endColumn":59},{"ruleId":"615","severity":1,"message":"616","line":85,"column":19,"nodeType":"609","messageId":"617","endLine":85,"endColumn":21},{"ruleId":"736","severity":1,"message":"737","line":150,"column":11,"nodeType":"738","endLine":150,"endColumn":81},{"ruleId":"615","severity":1,"message":"616","line":190,"column":18,"nodeType":"609","messageId":"617","endLine":190,"endColumn":20},{"ruleId":"615","severity":1,"message":"616","line":190,"column":38,"nodeType":"609","messageId":"617","endLine":190,"endColumn":40},{"ruleId":"615","severity":1,"message":"616","line":191,"column":18,"nodeType":"609","messageId":"617","endLine":191,"endColumn":20},{"ruleId":"615","severity":1,"message":"616","line":191,"column":38,"nodeType":"609","messageId":"617","endLine":191,"endColumn":40},{"ruleId":"615","severity":1,"message":"616","line":196,"column":19,"nodeType":"609","messageId":"617","endLine":196,"endColumn":21},{"ruleId":"736","severity":1,"message":"737","line":223,"column":11,"nodeType":"738","endLine":226,"endColumn":13},{"ruleId":"736","severity":1,"message":"737","line":276,"column":11,"nodeType":"738","endLine":279,"endColumn":13},{"ruleId":"615","severity":1,"message":"616","line":307,"column":18,"nodeType":"609","messageId":"617","endLine":307,"endColumn":20},{"ruleId":"615","severity":1,"message":"616","line":307,"column":38,"nodeType":"609","messageId":"617","endLine":307,"endColumn":40},{"ruleId":"615","severity":1,"message":"616","line":308,"column":18,"nodeType":"609","messageId":"617","endLine":308,"endColumn":20},{"ruleId":"615","severity":1,"message":"616","line":308,"column":38,"nodeType":"609","messageId":"617","endLine":308,"endColumn":40},{"ruleId":"615","severity":1,"message":"616","line":312,"column":19,"nodeType":"609","messageId":"617","endLine":312,"endColumn":21},{"ruleId":"590","severity":1,"message":"752","line":9,"column":5,"nodeType":"592","messageId":"593","endLine":9,"endColumn":10},{"ruleId":"590","severity":1,"message":"692","line":3,"column":18,"nodeType":"592","messageId":"593","endLine":3,"endColumn":23},{"ruleId":"590","severity":1,"message":"753","line":3,"column":25,"nodeType":"592","messageId":"593","endLine":3,"endColumn":33},{"ruleId":"590","severity":1,"message":"691","line":4,"column":8,"nodeType":"592","messageId":"593","endLine":4,"endColumn":13},{"ruleId":"590","severity":1,"message":"596","line":1,"column":10,"nodeType":"592","messageId":"593","endLine":1,"endColumn":22},{"ruleId":"590","severity":1,"message":"641","line":1,"column":24,"nodeType":"592","messageId":"593","endLine":1,"endColumn":35},{"ruleId":"590","severity":1,"message":"691","line":3,"column":8,"nodeType":"592","messageId":"593","endLine":3,"endColumn":13},{"ruleId":"590","severity":1,"message":"600","line":1,"column":27,"nodeType":"592","messageId":"593","endLine":1,"endColumn":36},{"ruleId":"590","severity":1,"message":"753","line":3,"column":25,"nodeType":"592","messageId":"593","endLine":3,"endColumn":33},{"ruleId":"590","severity":1,"message":"644","line":3,"column":35,"nodeType":"592","messageId":"593","endLine":3,"endColumn":42},{"ruleId":"590","severity":1,"message":"691","line":4,"column":8,"nodeType":"592","messageId":"593","endLine":4,"endColumn":13},{"ruleId":"590","severity":1,"message":"735","line":9,"column":9,"nodeType":"592","messageId":"593","endLine":9,"endColumn":17},{"ruleId":"590","severity":1,"message":"742","line":12,"column":10,"nodeType":"592","messageId":"593","endLine":12,"endColumn":18},{"ruleId":"590","severity":1,"message":"754","line":12,"column":20,"nodeType":"592","messageId":"593","endLine":12,"endColumn":31},{"ruleId":"590","severity":1,"message":"755","line":13,"column":10,"nodeType":"592","messageId":"593","endLine":13,"endColumn":18},{"ruleId":"590","severity":1,"message":"756","line":13,"column":20,"nodeType":"592","messageId":"593","endLine":13,"endColumn":31},{"ruleId":"590","severity":1,"message":"693","line":15,"column":10,"nodeType":"592","messageId":"593","endLine":15,"endColumn":20},{"ruleId":"590","severity":1,"message":"694","line":15,"column":22,"nodeType":"592","messageId":"593","endLine":15,"endColumn":35},{"ruleId":"590","severity":1,"message":"757","line":36,"column":7,"nodeType":"592","messageId":"593","endLine":36,"endColumn":21},{"ruleId":"602","severity":1,"message":"695","line":85,"column":67,"nodeType":"604","messageId":"696","endLine":85,"endColumn":69},{"ruleId":"602","severity":1,"message":"695","line":181,"column":64,"nodeType":"604","messageId":"696","endLine":181,"endColumn":66},{"ruleId":"590","severity":1,"message":"691","line":4,"column":8,"nodeType":"592","messageId":"593","endLine":4,"endColumn":13},{"ruleId":"590","severity":1,"message":"638","line":17,"column":9,"nodeType":"592","messageId":"593","endLine":17,"endColumn":16},{"ruleId":"615","severity":1,"message":"616","line":45,"column":16,"nodeType":"609","messageId":"617","endLine":45,"endColumn":18},{"ruleId":"615","severity":1,"message":"741","line":306,"column":20,"nodeType":"609","messageId":"617","endLine":306,"endColumn":22},{"ruleId":"615","severity":1,"message":"616","line":11,"column":20,"nodeType":"609","messageId":"617","endLine":11,"endColumn":22},{"ruleId":"615","severity":1,"message":"616","line":29,"column":20,"nodeType":"609","messageId":"617","endLine":29,"endColumn":22},{"ruleId":"615","severity":1,"message":"616","line":42,"column":20,"nodeType":"609","messageId":"617","endLine":42,"endColumn":22},{"ruleId":"615","severity":1,"message":"616","line":60,"column":20,"nodeType":"609","messageId":"617","endLine":60,"endColumn":22},{"ruleId":"615","severity":1,"message":"616","line":73,"column":20,"nodeType":"609","messageId":"617","endLine":73,"endColumn":22},{"ruleId":"590","severity":1,"message":"691","line":2,"column":8,"nodeType":"592","messageId":"593","endLine":2,"endColumn":13},{"ruleId":"590","severity":1,"message":"681","line":4,"column":10,"nodeType":"592","messageId":"593","endLine":4,"endColumn":15},{"ruleId":"590","severity":1,"message":"680","line":6,"column":23,"nodeType":"592","messageId":"593","endLine":6,"endColumn":34},{"ruleId":"590","severity":1,"message":"682","line":7,"column":9,"nodeType":"592","messageId":"593","endLine":7,"endColumn":20},{"ruleId":"590","severity":1,"message":"683","line":7,"column":22,"nodeType":"592","messageId":"593","endLine":7,"endColumn":28},{"ruleId":"611","severity":1,"message":"758","line":23,"column":6,"nodeType":"613","endLine":23,"endColumn":8,"suggestions":"759"},{"ruleId":"590","severity":1,"message":"691","line":2,"column":8,"nodeType":"592","messageId":"593","endLine":2,"endColumn":13},{"ruleId":"590","severity":1,"message":"681","line":4,"column":10,"nodeType":"592","messageId":"593","endLine":4,"endColumn":15},{"ruleId":"590","severity":1,"message":"680","line":6,"column":23,"nodeType":"592","messageId":"593","endLine":6,"endColumn":34},{"ruleId":"590","severity":1,"message":"682","line":7,"column":9,"nodeType":"592","messageId":"593","endLine":7,"endColumn":20},{"ruleId":"611","severity":1,"message":"758","line":23,"column":6,"nodeType":"613","endLine":23,"endColumn":8,"suggestions":"760"},{"ruleId":"590","severity":1,"message":"671","line":7,"column":8,"nodeType":"592","messageId":"593","endLine":7,"endColumn":20},{"ruleId":"611","severity":1,"message":"761","line":22,"column":6,"nodeType":"613","endLine":22,"endColumn":8,"suggestions":"762"},{"ruleId":"736","severity":1,"message":"737","line":108,"column":9,"nodeType":"738","endLine":108,"endColumn":59},{"ruleId":"736","severity":1,"message":"737","line":129,"column":9,"nodeType":"738","endLine":129,"endColumn":58},{"ruleId":"736","severity":1,"message":"737","line":141,"column":9,"nodeType":"738","endLine":141,"endColumn":60},{"ruleId":"590","severity":1,"message":"644","line":3,"column":25,"nodeType":"592","messageId":"593","endLine":3,"endColumn":32},{"ruleId":"590","severity":1,"message":"763","line":2,"column":10,"nodeType":"592","messageId":"593","endLine":2,"endColumn":20},{"ruleId":"590","severity":1,"message":"691","line":3,"column":8,"nodeType":"592","messageId":"593","endLine":3,"endColumn":13},{"ruleId":"590","severity":1,"message":"764","line":10,"column":8,"nodeType":"592","messageId":"593","endLine":10,"endColumn":13},{"ruleId":"590","severity":1,"message":"596","line":14,"column":10,"nodeType":"592","messageId":"593","endLine":14,"endColumn":22},{"ruleId":"590","severity":1,"message":"641","line":14,"column":24,"nodeType":"592","messageId":"593","endLine":14,"endColumn":35},{"ruleId":"590","severity":1,"message":"765","line":24,"column":7,"nodeType":"592","messageId":"593","endLine":24,"endColumn":14},{"ruleId":"611","severity":1,"message":"739","line":24,"column":17,"nodeType":"740","endLine":24,"endColumn":22},{"ruleId":"590","severity":1,"message":"689","line":29,"column":9,"nodeType":"592","messageId":"593","endLine":29,"endColumn":17},{"ruleId":"586","replacedBy":"766"},{"ruleId":"588","replacedBy":"767"},{"ruleId":"590","severity":1,"message":"600","line":1,"column":17,"nodeType":"592","messageId":"593","endLine":1,"endColumn":26},{"ruleId":"590","severity":1,"message":"644","line":4,"column":48,"nodeType":"592","messageId":"593","endLine":4,"endColumn":55},{"ruleId":"590","severity":1,"message":"645","line":18,"column":10,"nodeType":"592","messageId":"593","endLine":18,"endColumn":15},{"ruleId":"590","severity":1,"message":"646","line":18,"column":17,"nodeType":"592","messageId":"593","endLine":18,"endColumn":25},{"ruleId":"590","severity":1,"message":"647","line":23,"column":9,"nodeType":"592","messageId":"593","endLine":23,"endColumn":18},{"ruleId":"590","severity":1,"message":"680","line":2,"column":23,"nodeType":"592","messageId":"593","endLine":2,"endColumn":34},{"ruleId":"590","severity":1,"message":"596","line":3,"column":10,"nodeType":"592","messageId":"593","endLine":3,"endColumn":22},{"ruleId":"590","severity":1,"message":"641","line":3,"column":24,"nodeType":"592","messageId":"593","endLine":3,"endColumn":35},{"ruleId":"590","severity":1,"message":"636","line":4,"column":10,"nodeType":"592","messageId":"593","endLine":4,"endColumn":16},{"ruleId":"590","severity":1,"message":"681","line":5,"column":10,"nodeType":"592","messageId":"593","endLine":5,"endColumn":15},{"ruleId":"590","severity":1,"message":"682","line":8,"column":9,"nodeType":"592","messageId":"593","endLine":8,"endColumn":20},{"ruleId":"590","severity":1,"message":"683","line":8,"column":22,"nodeType":"592","messageId":"593","endLine":8,"endColumn":28},{"ruleId":"590","severity":1,"message":"684","line":10,"column":5,"nodeType":"592","messageId":"593","endLine":10,"endColumn":7},{"ruleId":"590","severity":1,"message":"685","line":19,"column":10,"nodeType":"592","messageId":"593","endLine":19,"endColumn":17},{"ruleId":"590","severity":1,"message":"686","line":19,"column":19,"nodeType":"592","messageId":"593","endLine":19,"endColumn":30},{"ruleId":"590","severity":1,"message":"687","line":20,"column":10,"nodeType":"592","messageId":"593","endLine":20,"endColumn":16},{"ruleId":"590","severity":1,"message":"688","line":20,"column":18,"nodeType":"592","messageId":"593","endLine":20,"endColumn":26},{"ruleId":"590","severity":1,"message":"689","line":21,"column":7,"nodeType":"592","messageId":"593","endLine":21,"endColumn":15},{"ruleId":"590","severity":1,"message":"690","line":22,"column":7,"nodeType":"592","messageId":"593","endLine":22,"endColumn":12},"no-native-reassign",["768"],"no-negated-in-lhs",["769"],"no-unused-vars","'fork' is defined but never used.","Identifier","unusedVar",["768"],["769"],"'BreakActions' is defined but never used.","'response' is assigned a value but never used.",["768"],["769"],"'useEffect' is defined but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'chrome' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.","ArrayExpression",["770"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","no-redeclare","'words' is already defined.","redeclared","'colors' is already defined.","'errors' is assigned a value but never used.","'successes' is assigned a value but never used.","'begin' is assigned a value but never used.","'finish' is assigned a value but never used.","'timeLimitReached' is assigned a value but never used.",["768"],["769"],"'Reducer' is defined but never used.","'isDev' is assigned a value but never used.","'path' is assigned a value but never used.",["768"],["769"],["768"],["769"],"'Button' is defined but never used.","'Modal' is defined but never used.","'history' is assigned a value but never used.",["768"],["769"],"'PastActions' is defined but never used.",["768"],["769"],"'message' is defined but never used.","'sites' is assigned a value but never used.","'setSites' is assigned a value but never used.","'showModal' is assigned a value but never used.",["768"],["769"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case",["768"],["769"],["768"],["769"],"'Loading' is defined but never used.","'AWClientService' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setNext' is assigned a value but never used.","'insertCal' is assigned a value but never used.","'shuffleArray' is defined but never used.",["768"],["769"],"'BreakManager' is defined but never used.",["768"],["769"],"'setOnboardingComplete' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'props.onboarding.awChecked', 'props.onboarding.complete', and 'props.onboarding.user'. Either include them or remove the dependency array.",["771"],"'Views' is defined but never used.",["768"],["769"],"'useSelector' is defined but never used.","'store' is defined but never used.","'ipcRenderer' is assigned a value but never used.","'remote' is assigned a value but never used.","'s1' is assigned a value but never used.","'complte' is assigned a value but never used.","'setComplete' is assigned a value but never used.","'scores' is assigned a value but never used.","'setScore' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'order' is assigned a value but never used.","'axios' is defined but never used.","'Input' is defined but never used.","'breakArray' is assigned a value but never used.","'setBreakArray' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["768"],["769"],"'dates' is defined but never used.","'s1' is defined but never used.","'s2' is defined but never used.","'s3' is defined but never used.","'s4' is defined but never used.","'s1y' is defined but never used.","'s2y' is defined but never used.","'s3y' is defined but never used.","'s4y' is defined but never used.","'ColoredDateCellWrapper' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["772"],"'onEventResize' is assigned a value but never used.","'onEventDrop' is assigned a value but never used.",["768"],["769"],["768"],["769"],"'Provider' is defined but never used.","'HomeScreen' is assigned a value but never used.","'AWCheckerInScreen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["773"],"'OnboardingActions' is defined but never used.",["774"],"no-dupe-keys","Duplicate key 'isWebsite'.","ObjectExpression","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.",["768"],["769"],["768"],["769"],["768"],["769"],"'TextArea' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Assignments to the 'mounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Expected '!==' and instead saw '!='.","'username' is assigned a value but never used.","'wait' is assigned a value but never used.","'setwait' is assigned a value but never used.","'keyPressed' is assigned a value but never used.","'setKeyPressed' is assigned a value but never used.","'tempTrial' is assigned a value but never used.","'setTempTrial' is assigned a value but never used.","'times' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params' and 'runStuff'. Either include them or remove the dependency array.",["775"],"'shell' is assigned a value but never used.","'Checkbox' is defined but never used.","'setUsername' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'checkUpdateApp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.stage.scores'. Either include them or remove the dependency array.",["776"],["777"],"React Hook useEffect has a missing dependency: 'awcheck'. Either include it or remove the dependency array.",["778"],"'useHistory' is defined but never used.","'Timer' is defined but never used.","'mounted' is assigned a value but never used.",["768"],["769"],"no-global-assign","no-unsafe-negation",{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},{"desc":"783","fix":"787"},{"desc":"788","fix":"789"},{"desc":"790","fix":"791"},{"desc":"790","fix":"792"},{"desc":"793","fix":"794"},"Update the dependencies array to be: [count]",{"range":"795","text":"796"},"Update the dependencies array to be: [history, props.onboarding.awChecked, props.onboarding.complete, props.onboarding.user]",{"range":"797","text":"798"},"Update the dependencies array to be: [getData]",{"range":"799","text":"800"},"Update the dependencies array to be: [dispatch, history]",{"range":"801","text":"802"},{"range":"803","text":"800"},"Update the dependencies array to be: [params, runStuff]",{"range":"804","text":"805"},"Update the dependencies array to be: [dispatch, props.stage.scores]",{"range":"806","text":"807"},{"range":"808","text":"807"},"Update the dependencies array to be: [awcheck]",{"range":"809","text":"810"},[723,725],"[count]",[2082,2084],"[history, props.onboarding.awChecked, props.onboarding.complete, props.onboarding.user]",[1595,1597],"[getData]",[4014,4016],"[dispatch, history]",[766,768],[3294,3296],"[params, runStuff]",[715,717],"[dispatch, props.stage.scores]",[711,713],[777,779],"[awcheck]"]