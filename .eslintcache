[{"C:\\code\\mit\\RL_app\\src\\reportWebVitals.js":"1","C:\\code\\mit\\RL_app\\src\\screens\\BreakScreen\\index.jsx":"2","C:\\code\\mit\\RL_app\\src\\screens\\CalendarScreen\\index.jsx":"3","C:\\code\\mit\\RL_app\\src\\breakmanager\\DatabaseUpdater\\index.js":"4","C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test\\index.jsx":"5","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\index.jsx":"6","C:\\code\\mit\\RL_app\\src\\screens\\HomeScreen\\index.jsx":"7","C:\\code\\mit\\RL_app\\src\\screens\\NewHomeScreen\\index.jsx":"8","C:\\code\\mit\\RL_app\\src\\navigation\\index.js":"9","C:\\code\\mit\\RL_app\\src\\index.js":"10","C:\\code\\mit\\RL_app\\src\\screens\\FruitNinjaScreen\\index.jsx":"11","C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja\\index.jsx":"12","C:\\code\\mit\\RL_app\\src\\screens\\StroopScreen\\index.jsx":"13","C:\\code\\mit\\RL_app\\src\\redux\\types\\break.types.js":"14","C:\\code\\mit\\RL_app\\src\\redux\\actions\\break.action.js":"15","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\break.reducer.js":"16","C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info.jsx":"17","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\index.js":"18","C:\\code\\mit\\RL_app\\src\\breakmanager\\EventHandler\\index.js":"19","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\activityrule.break.js":"20","C:\\code\\mit\\RL_app\\src\\components\\Calendar.jsx":"21","C:\\code\\mit\\RL_app\\src\\components\\Games\\index.jsx":"22","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx":"23","C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info_end.js":"24","C:\\code\\mit\\RL_app\\src\\App.js":"25","C:\\code\\mit\\RL_app\\src\\screens\\LoginScreen\\index.jsx":"26","C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja_manager.jsx":"27","C:\\code\\mit\\RL_app\\src\\screens\\BreakFeedbackScreen\\index.jsx":"28","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\index.js":"29","C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test_manager.jsx":"30","C:\\code\\mit\\RL_app\\src\\redux\\sagas\\index.js":"31","C:\\code\\mit\\RL_app\\src\\redux\\actions\\index.js":"32","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\FinishingUp.jsx":"33","C:\\code\\mit\\RL_app\\src\\screens\\PopupScreen\\index.jsx":"34","C:\\code\\mit\\RL_app\\src\\screens\\AnalyticsScreen\\index.jsx":"35","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\interval.break.js":"36","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\scheduled.break.js":"37","C:\\code\\mit\\RL_app\\src\\services\\awclient.service.js":"38","C:\\code\\mit\\RL_app\\src\\screens\\AWCheckerScreen\\index.jsx":"39","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\past.reducer.js":"40","C:\\code\\mit\\RL_app\\src\\breakmanager\\index.js":"41","C:\\code\\mit\\RL_app\\src\\screens\\CancelScreen\\index.jsx":"42","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\onboarding.reducer.js":"43","C:\\code\\mit\\RL_app\\src\\redux\\actions\\onboarding.action.js":"44","C:\\code\\mit\\RL_app\\src\\components\\Timer.js":"45","C:\\code\\mit\\RL_app\\src\\services\\index.js":"46","C:\\code\\mit\\RL_app\\src\\redux\\types\\index.js":"47","C:\\code\\mit\\RL_app\\src\\screens\\SuddenScreen\\index.jsx":"48","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\AdHocBreaks.jsx":"49","C:\\code\\mit\\RL_app\\src\\redux\\actions\\past.action.js":"50","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\test.reducer.js":"51","C:\\code\\mit\\RL_app\\src\\components\\Toolbar.js":"52","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\RegularBreaks.jsx":"53","C:\\code\\mit\\RL_app\\src\\utils\\dates.js":"54","C:\\code\\mit\\RL_app\\src\\redux\\types\\past.types.js":"55","C:\\code\\mit\\RL_app\\src\\redux\\types\\onboarding.types.js":"56","C:\\code\\mit\\RL_app\\src\\screens\\EditScheduledBreaks\\index.jsx":"57","C:\\code\\mit\\RL_app\\src\\screens\\EditRegularBreaksScreen\\index.jsx":"58","C:\\code\\mit\\RL_app\\src\\screens\\EditActivityBreaksScreen\\index.jsx":"59","C:\\code\\mit\\RL_app\\src\\redux\\index.js":"60","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\ScheduledBreaks.jsx":"61"},{"size":375,"mtime":1609573919416,"results":"62","hashOfConfig":"63"},{"size":5953,"mtime":1632820645834,"results":"64","hashOfConfig":"63"},{"size":4290,"mtime":1632818583075,"results":"65","hashOfConfig":"63"},{"size":2051,"mtime":1633437730988,"results":"66","hashOfConfig":"63"},{"size":3483,"mtime":1633765744198,"results":"67","hashOfConfig":"63"},{"size":3792,"mtime":1633000551884,"results":"68","hashOfConfig":"63"},{"size":6124,"mtime":1633766072696,"results":"69","hashOfConfig":"63"},{"size":1302,"mtime":1632997081305,"results":"70","hashOfConfig":"63"},{"size":3388,"mtime":1633439158590,"results":"71","hashOfConfig":"63"},{"size":517,"mtime":1609573919413,"results":"72","hashOfConfig":"63"},{"size":933,"mtime":1632819052562,"results":"73","hashOfConfig":"63"},{"size":2394,"mtime":1632818570694,"results":"74","hashOfConfig":"63"},{"size":927,"mtime":1632819062790,"results":"75","hashOfConfig":"63"},{"size":611,"mtime":1632912107976,"results":"76","hashOfConfig":"63"},{"size":1460,"mtime":1632913172614,"results":"77","hashOfConfig":"63"},{"size":3781,"mtime":1632921075927,"results":"78","hashOfConfig":"63"},{"size":1071,"mtime":1632819150553,"results":"79","hashOfConfig":"63"},{"size":349,"mtime":1632817649632,"results":"80","hashOfConfig":"63"},{"size":2473,"mtime":1633437734633,"results":"81","hashOfConfig":"63"},{"size":4646,"mtime":1633437723089,"results":"82","hashOfConfig":"63"},{"size":7245,"mtime":1632998706582,"results":"83","hashOfConfig":"63"},{"size":4178,"mtime":1633778291148,"results":"84","hashOfConfig":"63"},{"size":3626,"mtime":1632818593549,"results":"85","hashOfConfig":"63"},{"size":1135,"mtime":1632921574755,"results":"86","hashOfConfig":"63"},{"size":656,"mtime":1632483733427,"results":"87","hashOfConfig":"63"},{"size":2323,"mtime":1632577267328,"results":"88","hashOfConfig":"63"},{"size":1579,"mtime":1626085976390,"results":"89","hashOfConfig":"63"},{"size":8800,"mtime":1633440182003,"results":"90","hashOfConfig":"63"},{"size":461,"mtime":1610597903300,"results":"91","hashOfConfig":"63"},{"size":1398,"mtime":1626085976392,"results":"92","hashOfConfig":"63"},{"size":226,"mtime":1609573919415,"results":"93","hashOfConfig":"63"},{"size":217,"mtime":1610597903298,"results":"94","hashOfConfig":"63"},{"size":3520,"mtime":1632915236320,"results":"95","hashOfConfig":"63"},{"size":2183,"mtime":1632921680702,"results":"96","hashOfConfig":"63"},{"size":5450,"mtime":1632992361852,"results":"97","hashOfConfig":"63"},{"size":1470,"mtime":1632914979560,"results":"98","hashOfConfig":"63"},{"size":2348,"mtime":1632915171406,"results":"99","hashOfConfig":"63"},{"size":9013,"mtime":1633003493112,"results":"100","hashOfConfig":"63"},{"size":4430,"mtime":1633765051467,"results":"101","hashOfConfig":"63"},{"size":3439,"mtime":1633005865129,"results":"102","hashOfConfig":"63"},{"size":447,"mtime":1633439271874,"results":"103","hashOfConfig":"63"},{"size":2642,"mtime":1632920627918,"results":"104","hashOfConfig":"63"},{"size":3579,"mtime":1633002537354,"results":"105","hashOfConfig":"63"},{"size":1860,"mtime":1633002513521,"results":"106","hashOfConfig":"63"},{"size":1081,"mtime":1610597903297,"results":"107","hashOfConfig":"63"},{"size":129,"mtime":1609674823101,"results":"108","hashOfConfig":"63"},{"size":144,"mtime":1610597903301,"results":"109","hashOfConfig":"63"},{"size":2107,"mtime":1632921891710,"results":"110","hashOfConfig":"63"},{"size":12047,"mtime":1610783290468,"results":"111","hashOfConfig":"63"},{"size":757,"mtime":1633005849926,"results":"112","hashOfConfig":"63"},{"size":306,"mtime":1609847029298,"results":"113","hashOfConfig":"63"},{"size":2123,"mtime":1632819774632,"results":"114","hashOfConfig":"63"},{"size":2723,"mtime":1632575489987,"results":"115","hashOfConfig":"63"},{"size":3854,"mtime":1610597903306,"results":"116","hashOfConfig":"63"},{"size":334,"mtime":1633004346489,"results":"117","hashOfConfig":"63"},{"size":824,"mtime":1633002486221,"results":"118","hashOfConfig":"63"},{"size":5283,"mtime":1633000524026,"results":"119","hashOfConfig":"63"},{"size":4072,"mtime":1633002189368,"results":"120","hashOfConfig":"63"},{"size":13569,"mtime":1633002822062,"results":"121","hashOfConfig":"63"},{"size":669,"mtime":1631884843872,"results":"122","hashOfConfig":"63"},{"size":4360,"mtime":1631704993601,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"138jipk",{"filePath":"127","messages":"128","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"142"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"142"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"142"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"142"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"134"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"142"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"134"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"142"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"142"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"130"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\code\\mit\\RL_app\\src\\reportWebVitals.js",[],["279","280"],"C:\\code\\mit\\RL_app\\src\\screens\\BreakScreen\\index.jsx",["281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport \"./styles.css\";\r\nimport { store } from \"../../redux\";\r\n\r\nimport Timer from \"../../components/Timer\";\r\nimport ToolBar from \"../../components/Toolbar\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\n\r\nimport s1 from \"../../assets/s1.png\";\r\nimport s2 from \"../../assets/s2.png\";\r\nimport s3 from \"../../assets/s3.png\";\r\nimport s4 from \"../../assets/s4.png\";\r\nimport s5 from \"../../assets/s5.png\";\r\n\r\nimport s1y from \"../../assets/s1y.png\";\r\nimport s2y from \"../../assets/s2y.png\";\r\nimport s3y from \"../../assets/s3y.png\";\r\nimport s4y from \"../../assets/s4y.png\";\r\nimport s5y from \"../../assets/s5y.png\";\r\n\r\nvar electron = window.require(\"electron\");\r\nvar curWindow = electron.remote.getCurrentWindow();\r\n\r\nconst BreakScreen = (props) => {\r\n  let mounted = true;\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  });\r\n\r\n  const breakState = useSelector((state) => state.break.breakState);\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  const [minimized, setMinimized] = useState(false);\r\n\r\n  const breakDuration = store.getState().break.breakDuration;\r\n  const breakStartTime = store.getState().break.breakStartTime;\r\n\r\n  if (breakState === \"break\" && !minimized) {\r\n    curWindow.maximize();\r\n    curWindow.setMovable(false);\r\n    curWindow.setSize(\r\n      electron.remote.screen.getPrimaryDisplay().size.width,\r\n      Math.ceil(electron.remote.screen.getPrimaryDisplay().size.height)\r\n    );\r\n    curWindow.setPosition(0, 0);\r\n\r\n    return (\r\n      <div className=\"break-div\">\r\n        <ToolBar\r\n          type=\"minimize\"\r\n          minimize={setMinimized}\r\n          totaltime={breakDuration}\r\n          startTime={breakStartTime}\r\n        />\r\n        <div className=\"circle\"></div>\r\n        <div className=\"break-text\">\r\n          {store.getState().onboarding.breakMessage}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (breakState === \"break\" && minimized) {\r\n    curWindow.unmaximize();\r\n    curWindow.setMovable(true);\r\n    curWindow.setSize(\r\n      electron.remote.screen.getPrimaryDisplay().size.width,\r\n      Math.ceil(electron.remote.screen.getPrimaryDisplay().size.height / 8)\r\n    );\r\n    curWindow.setPosition(\r\n      0,\r\n      (7 / 8) * electron.remote.screen.getPrimaryDisplay().size.height\r\n    );\r\n\r\n    return (\r\n      <div className=\"break-div\">\r\n        <ToolBar\r\n          type=\"maximize\"\r\n          minimize={setMinimized}\r\n          totaltime={breakDuration}\r\n          startTime={breakStartTime}\r\n          message={\"Be kind!\"}\r\n        />\r\n      </div>\r\n    );\r\n  } \r\n  // else {\r\n  //   curWindow.maximize();\r\n  //   curWindow.setAlwaysOnTop(false);\r\n\r\n  //   return (\r\n  //     <div className=\"break-div\">\r\n  //       <button\r\n  //         className=\"close-break\"\r\n  //         onClick={() => {\r\n  //           addBreakInfo();\r\n  //         }}\r\n  //       >\r\n  //         <div>&#10006;</div>\r\n  //         <div className=\"save-button-text\">Save feedback and close</div>\r\n  //       </button>\r\n  //       <div className=\"break-completed-text\">\r\n  //         Break completed successfully!\r\n  //       </div>\r\n\r\n  //       <div className=\"feedback-text-box\">\r\n  //         <div className=\"floating-label\">Notes</div>\r\n  //         <textarea\r\n  //           onChange={(event) => {\r\n  //             if (mounted) setFeedbackText(event.target.value);\r\n  //           }}\r\n  //           data-role=\"none\"\r\n  //           rows=\"3\"\r\n  //           cols=\"80\"\r\n  //           placeholder=\"Type in here any notes or reflections about the break that you would like to save\"\r\n  //           className=\"feedback-text\"\r\n  //         />\r\n  //       </div>\r\n\r\n  //       <div className=\"feedback-request-text\">How was this break?</div>\r\n\r\n  //       <div className=\"break-feedback\">\r\n  //         {getImageButton(s5, s5y, 1, rate, setRate, mounted)}\r\n  //         {getImageButton(s4, s4y, 2, rate, setRate, mounted)}\r\n  //         {getImageButton(s3, s3y, 3, rate, setRate, mounted)}\r\n  //         {getImageButton(s2, s2y, 4, rate, setRate, mounted)}\r\n  //         {getImageButton(s1, s1y, 5, rate, setRate, mounted)}\r\n  //       </div>\r\n\r\n  //       <div style={{ display: \"flex\" }}>\r\n  //         <div style={{ width: \"7vw\", textAlign: \"left\", paddingLeft: \"0vw\" }}>\r\n  //           Not Helpful\r\n  //         </div>\r\n  //         <div style={{ width: \"28vw\" }} />\r\n  //         <div\r\n  //           style={{ width: \"4vw\", textAlign: \"right\", paddingRight: \"1vw\" }}\r\n  //         >\r\n  //           Helpful\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  return null;\r\n};\r\n\r\nlet getImageButton = (name, name2, points, rate, setRate, mounted) => {\r\n  if (points == rate)\r\n    return (\r\n      <div className=\"responsive\">\r\n        <div className=\"gallery\">\r\n          <button\r\n            className=\"feedback-button\"\r\n            onClick={() => {\r\n              if (mounted) setRate(points);\r\n            }}\r\n          >\r\n            <p style={{ fontSize: \"50px\" }}>{points - 1}</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div className=\"responsive\">\r\n        <div className=\"gallery\">\r\n          <button\r\n            className=\"feedback-button\"\r\n            onClick={() => {\r\n              if (mounted) setRate(points);\r\n            }}\r\n          >\r\n            <p style={{ fontSize: \"50px\" }}>{points - 1}</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding, break: state.break };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BreakScreen);\r\n",["301","302"],"C:\\code\\mit\\RL_app\\src\\screens\\CalendarScreen\\index.jsx",["303"],"import React, { useState } from \"react\";\r\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport * as dates from \"../../utils/dates\";\r\nimport \"./styles.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\nconst ColoredDateCellWrapper = ({ children }) =>\r\n  React.cloneElement(React.Children.only(children), {\r\n    style: {\r\n      backgroundColor: \"lightblue\",\r\n    },\r\n  });\r\n\r\nconst CalendarScreen = (props) => {\r\n  const [events, setEvents] = useState([\r\n    {\r\n      start: moment().toDate(),\r\n      end: moment().add(1, \"days\").toDate(),\r\n      title: \"Test\",\r\n      id: 1,\r\n    },\r\n  ]);\r\n  const [draggedEvent, setDraggedEvent] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const resizeEvent = ({ event, start, end }) => {\r\n    const nextEvents = events.map((existingEvent) => {\r\n      return existingEvent.id === event.id\r\n        ? { ...existingEvent, start, end }\r\n        : existingEvent;\r\n    });\r\n\r\n    setEvents(nextEvents);\r\n  };\r\n\r\n  const moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\r\n    let allDay = event.allDay;\r\n\r\n    if (!event.allDay && droppedOnAllDaySlot) {\r\n      allDay = true;\r\n    } else if (event.allDay && !droppedOnAllDaySlot) {\r\n      allDay = false;\r\n    }\r\n\r\n    const nextEvents = events.map((existingEvent) => {\r\n      return existingEvent.id === event.id\r\n        ? { ...existingEvent, start, end, allDay }\r\n        : existingEvent;\r\n    });\r\n\r\n    setEvents(nextEvents);\r\n\r\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\r\n  };\r\n\r\n  const newEvent = ({ slots, start, end }) => {\r\n    setModalVisible(true);\r\n    let idList = events.map((a) => a.id);\r\n    let newId = Math.max(...idList) + 1;\r\n    let hour = {\r\n      id: newId,\r\n      title: \"New Event\",\r\n      allDay: slots.length === 1,\r\n      start: start,\r\n      end: end,\r\n    };\r\n\r\n    setEvents(events.concat([hour]));\r\n  };\r\n\r\n  const onDropFromOutside = ({ start, end, allDay }) => {\r\n    const event = {\r\n      id: draggedEvent.id,\r\n      title: draggedEvent.title,\r\n      start,\r\n      end,\r\n      allDay: allDay,\r\n    };\r\n\r\n    setDraggedEvent(null);\r\n    this.moveEvent({ event, start, end });\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      <Modal\r\n        visible={modalVisible}\r\n        onOk={() => {\r\n          setModalVisible(false);\r\n        }}\r\n        onCancel={() => {\r\n          setModalVisible(false);\r\n        }}\r\n      >\r\n        Hello\r\n      </Modal>\r\n      <Button\r\n        onClick={() => {\r\n          props.resetInfo();\r\n          history.push(\"/\")\r\n        }}\r\n      >\r\n        Reset\r\n      </Button>\r\n      <DnDCalendar\r\n        selectable\r\n        resizable={true}\r\n        events={events}\r\n        views={[\"day\", \"week\", \"month\"]}\r\n        // step={60}\r\n        showMultiDayTimes\r\n        defaultDate={new Date()}\r\n        onSelectSlot={newEvent}\r\n        components={{\r\n          timeSlotWrapper: ColoredDateCellWrapper,\r\n        }}\r\n        localizer={localizer}\r\n        max={dates.add(dates.endOf(new Date(), \"day\"), -1, \"hours\")}\r\n        style={{ height: props.height ? props.height : window.innerHeight }}\r\n        onEventResize={resizeEvent}\r\n        onEventDrop={moveEvent}\r\n        onDropFromOutside={onDropFromOutside}\r\n        handleDragStart={(event) => {\r\n          setDraggedEvent(event);\r\n        }}\r\n        dragFromOutsideItem={draggedEvent}\r\n        resizableAccessor={() => false}\r\n        onSelectEvent={() => {\r\n          //add code for editing an existing event here\r\n          setModalVisible(true);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ resetInfo: OnboardingActions.reset }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarScreen);\r\n",["304","305"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\DatabaseUpdater\\index.js",["306","307"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test\\index.jsx",["308","309","310","311","312","313","314","315","316","317"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\index.jsx",["318","319"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Steps, Button } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport PersonalInformationScreen from \"./PersonalInformation\";\r\nimport ScheduledBreakScreen from \"./ScheduledBreaks\";\r\nimport RegularBreakScreen from \"./RegularBreaks\";\r\nimport AdHocBreakScreen from \"./AdHocBreaks\";\r\nimport FinishingUpScreen from \"./FinishingUp\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport \"./styles.css\";\r\nimport { setOnboardingComplete } from \"../../redux/actions/onboarding.action\";\r\nimport BreakManager from \"../../breakmanager\";\r\n\r\nconst { Step } = Steps;\r\n\r\nconst OnboardingScreen = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const addOnbInfo = async () => {\r\n    // history.push(\"/home\");\r\n    // BreakManager(history);\r\n    let body = { ...props.onboarding };\r\n    if (props.onboarding.user && props.onboarding.user._id) {\r\n      body.user = props.onboarding.user._id;\r\n      let response = await axios.post(\r\n        \"https://thepallab.com/api/user/onb\",\r\n        body\r\n      );\r\n      if (response.data.message === \"Successful Added\") {\r\n        history.push(\"/home\");\r\n        BreakManager(history);\r\n      }\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.onboarding.complete) {\r\n      history.push(\"/home\");\r\n    } else if (\r\n      props.onboarding.user &&\r\n      Object.keys(props.onboarding.user).length === 0\r\n    ) {\r\n      history.push(\"/login\");\r\n    } else if (!props.onboarding.awChecked) {\r\n      history.push(\"/aw\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Steps current={current} labelPlacement=\"vertical\">\r\n        <Step title=\"PERSONAL INFORMATION\" />\r\n        <Step title=\"SCHEDULED BREAKS\" />\r\n        <Step title=\"INTERVAL BASED BREAKS\" />\r\n        <Step title=\"ACTIVITY BASED BREAKS\" />\r\n        <Step title=\"FINISHING UP\" />\r\n      </Steps>\r\n      <div>\r\n        {current === 0 && <PersonalInformationScreen />}\r\n        {current === 1 && <ScheduledBreakScreen />}\r\n        {current === 2 && <RegularBreakScreen />}\r\n        {current === 3 && <AdHocBreakScreen />}\r\n        {current === 4 && <FinishingUpScreen />}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {current > 0 && (\r\n          <Button\r\n            style={{ margin: \"0 8px\" }}\r\n            onClick={() => {\r\n              setCurrent(current - 1);\r\n            }}\r\n          >\r\n            Back\r\n          </Button>\r\n        )}\r\n        {current < 4 && (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setCurrent(current + 1);\r\n            }}\r\n          >\r\n            Next\r\n          </Button>\r\n        )}\r\n        {current === 4 && (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              props.setOnboardingComplete();\r\n              // curWindow.minimize();\r\n              addOnbInfo();\r\n              // history.push(\"/home\");\r\n              \r\n            }}\r\n          >\r\n            Done\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding, break: state.break };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setOnboardingComplete: OnboardingActions.setOnboardingComplete,\r\n      reset: OnboardingActions.reset,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OnboardingScreen);\r\n",["320","321"],"C:\\code\\mit\\RL_app\\src\\screens\\HomeScreen\\index.jsx",["322","323","324","325","326"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Button } from \"antd\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst HomeScreen = (props) => {\r\n  const [breakArray, setBreakArray] = useState([\"https://www.youtube.com\"]);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <div style={{ marginTop: \"3%\", width: \"70%\", margin: \"5%\" }}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n              Scheduled Breaks :{\" \"}\r\n            </p>\r\n            <Button\r\n              onClick={() => {\r\n                props.addTempSched(props.onboarding.scheduledBreaks);\r\n                history.push(\"/edit-sched\");\r\n              }}\r\n            >\r\n              Edit Scheduled Breaks\r\n            </Button>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              width: \"50%\",\r\n            }}\r\n          >\r\n            <p style={{ flex: 1 }}>Day</p>\r\n            <p style={{ flex: 1 }}>Start Time</p>\r\n            <p style={{ flex: 1 }}>End Time</p>\r\n          </div>\r\n          <div>\r\n            {props.onboarding.scheduledBreaks.map((item, index) => {\r\n              if (item.start.length > 0) {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                      width: \"50%\",\r\n                      marginTop: index !== 0 ? \"1%\" : \"0%\",\r\n                    }}\r\n                  >\r\n                    <p style={{ flex: 1 }}>{item.day}</p>\r\n                    <p style={{ flex: 1 }}>\r\n                      {new Date(item.start).getHours() +\r\n                        \":\" +\r\n                        (new Date(item.start).getMinutes() < 10 ? \"0\" : \"\") +\r\n                        new Date(item.start).getMinutes()}\r\n                    </p>\r\n                    <p style={{ flex: 1 }}>\r\n                      {new Date(item.end).getHours() +\r\n                        \":\" +\r\n                        (new Date(item.end).getMinutes() < 10 ? \"0\" : \"\") +\r\n                        new Date(item.end).getMinutes()}\r\n                    </p>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n              Regular Breaks :{\" \"}\r\n            </p>\r\n            <Button\r\n              onClick={() => {\r\n                props.addTempReg(\r\n                  props.onboarding.regularBreakLength,\r\n                  props.onboarding.regularBreakInterval\r\n                );\r\n                history.push(\"/edit-reg\");\r\n              }}\r\n            >\r\n              Edit Regular Breaks\r\n            </Button>{\" \"}\r\n          </div>\r\n          <p>\r\n            How often you want to take regular breaks :{\" \"}\r\n            {props.onboarding.regularBreakInterval} minute(s)\r\n          </p>\r\n          <p>\r\n            How long you want these breaks to be :{\" \"}\r\n            {props.onboarding.regularBreakLength} minute(s)\r\n          </p>\r\n        </div>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n              Activity Based Breaks :{\" \"}\r\n            </p>\r\n            <Button\r\n              onClick={() => {\r\n                props.addTempAct(\r\n                  props.onboarding.overRideSites,\r\n                  props.onboarding.allOverRides\r\n                );\r\n                history.push(\"/edit-act\");\r\n              }}\r\n            >\r\n              Edit Activity Based Breaks\r\n            </Button>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              width: \"50%\",\r\n            }}\r\n          >\r\n            <p style={{ flex: 1 }}>Site</p>\r\n            <p style={{ flex: 1 }}>Break Interval</p>\r\n            <p style={{ flex: 1 }}>Break Length</p>\r\n          </div>\r\n          <div>\r\n            {props.onboarding.allOverRides.map((item, index) => {\r\n              if (item.name.length > 0) {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                      width: \"50%\",\r\n                      marginTop: index !== 0 ? \"1%\" : \"0%\",\r\n                    }}\r\n                  >\r\n                    <p style={{ flex: 1 }}>{item.name}</p>\r\n                    <p style={{ flex: 1 }}>{item.interval}</p>\r\n                    <p style={{ flex: 1 }}>{item.breakLength}</p>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            props.resetInfo();\r\n            history.push(\"/\");\r\n          }}\r\n        >\r\n          Sign Out\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding, break: state.break };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      resetInfo: OnboardingActions.reset,\r\n      addTempSched: OnboardingActions.addTempSched,\r\n      addTempReg: OnboardingActions.addTempReg,\r\n      addTempAct: OnboardingActions.addTempAct,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);\r\n","C:\\code\\mit\\RL_app\\src\\screens\\NewHomeScreen\\index.jsx",["327","328","329","330","331"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Button, Tabs, Modal } from \"antd\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CalendarComponent from \"../../components/Calendar\";\r\nimport AnalyticsScreen from \"../AnalyticsScreen\";\r\nimport HomeScreen from \"../HomeScreen\";\r\nconst { TabPane } = Tabs;\r\n\r\nconst NewHomeScreen = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Tabs defaultActiveKey=\"1\" type=\"card\" size={\"large\"}>\r\n          <TabPane tab=\"Break Settings\" key=\"1\">\r\n            <HomeScreen />\r\n          </TabPane>\r\n          <TabPane tab=\"Past Breaks\" key=\"2\">\r\n            <CalendarComponent />\r\n          </TabPane>\r\n          <TabPane tab=\"Analytics\" key=\"3\">\r\n            <AnalyticsScreen />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding, break: state.break };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ resetInfo: OnboardingActions.reset }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewHomeScreen);\r\n","C:\\code\\mit\\RL_app\\src\\navigation\\index.js",["332","333","334","335"],"C:\\code\\mit\\RL_app\\src\\index.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\FruitNinjaScreen\\index.jsx",["336","337","338","339","340","341","342","343","344","345","346","347","348","349"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport Games from \"../../components/Games\";\r\n\r\nconst { ipcRenderer, remote } = window.require(\"electron\");\r\n\r\nvar s1 = {\r\n  height: \"100vh\",\r\n  width: \"100vw\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n//TO-DO: add style\r\nconst FruitNinjaScreen = () => {\r\n  const [complte, setComplete] = useState(false);\r\n  const [scores, setScore] = useState([]);\r\n  let dispatch = useDispatch();\r\n  var order = Math.floor(Math.random() * 2);\r\n  return (\r\n    <Games\r\n      order={0}\r\n      status={\"end\"}\r\n      onComplete={() => {\r\n        //remove in mobile app\r\n        // remote.getCurrentWindow().close();\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default FruitNinjaScreen;\r\n","C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja\\index.jsx",["350","351","352","353"],"import React, { useEffect } from \"react\";\r\nimport ScriptTag from 'react-script-tag';\r\nimport InnerHTML from 'dangerously-set-html-content'\r\n\r\nfunction FruitNinja(props) {\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n\r\n        if ((props.version || 1) == 1) {\r\n            script.src = \"scripts/all3.js\";\r\n            //replace in mobile app\r\n            //script.src = \"scripts/all1.js\";\r\n        }\r\n        else {\r\n            script.src = \"scripts/all4.js\";\r\n            //replace in mobile app\r\n            //script.src = \"scripts/all2.js\";\r\n        }\r\n            \r\n\r\n        script.async = true;\r\n\r\n        document.body.appendChild(script);\r\n\r\n\r\n\r\n        const targetNode = document.getElementById('fruit_ninja_score')\r\n        const config = { attributes: true, childList: true, subtree: true };\r\n        const callback = function (mutationsList, observer) {\r\n            for (const mutation of mutationsList) {\r\n                if (mutation.type === 'childList') {\r\n                    props.onComplete(parseInt(targetNode.innerHTML))\r\n                }\r\n            }\r\n        };\r\n\r\n        const observer = new MutationObserver(callback);\r\n        observer.observe(targetNode, config);\r\n        return () => {\r\n            observer.disconnect();\r\n\r\n            document.body.removeChild(script);\r\n        }\r\n    }, []);\r\n\r\n    var r=1\r\n    //replace in mobile app\r\n    //var r = document.documentElement.clientHeight * parseFloat(document.getElementById('height_ratio').innerHTML) / 420\r\n    var w = 640 * r \r\n    var h = 420 * r\r\n    return <div id='fruit_ninja_container_container' style={{display: 'flex', justifyContent: 'center' }}>\r\n    <span id='fruit_ninja_container'>\r\n            <div id=\"fruit_ninja_extra\" width={w} height={h}></div>\r\n            <canvas id=\"fruit_ninja_view\" width={w} height={h}></canvas>\r\n        <div id=\"fruit_ninja_desc\">\r\n\t            <div id='fruit_ninja_score'></div>\r\n                <div id=\"fruit_ninja_browser\"></div>\r\n                <div id='fruit_ninja_bombprob_inverse' style={{ display: 'none' }}>{props.bpi || 8}</div>\r\n                <div id='height_ratio' style={{ display: 'none' }}>{1}</div>\r\n                <div id='fruit_ninja_time_limit' style={{ display: 'none' }}>{props.timelimit||3600}</div>\r\n\r\n           </div>\r\n        </span >\r\n        </div>\r\n\r\n}\r\n\r\nexport default FruitNinja;\r\n","C:\\code\\mit\\RL_app\\src\\screens\\StroopScreen\\index.jsx",["354","355","356","357","358","359","360","361","362","363","364","365","366","367"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport Games from \"../../components/Games\";\r\n\r\nconst { ipcRenderer, remote } = window.require(\"electron\");\r\n\r\nvar s1 = {\r\n  height: \"100vh\",\r\n  width: \"100vw\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n//TO-DO: add style\r\nconst StroopScreen = () => {\r\n  const [complte, setComplete] = useState(false);\r\n  const [scores, setScore] = useState([]);\r\n  let dispatch = useDispatch();\r\n  var order = Math.floor(Math.random() * 2);\r\n  return (\r\n    <Games\r\n      order={0}\r\n      status={\"start\"}\r\n      onComplete={() => {\r\n        //remove in mobile app\r\n        // remote.getCurrentWindow().close();\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default StroopScreen;\r\n","C:\\code\\mit\\RL_app\\src\\redux\\types\\break.types.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\break.action.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\break.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info.jsx",["368","369","370","371","372"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\index.js",[],["373","374"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\EventHandler\\index.js",["375","376","377"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\activityrule.break.js",["378"],"import { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { store } from \"../../redux\";\r\nimport { AWClientService } from \"../../services\";\r\nimport psl from \"psl\";\r\nlet client = new AWClientService();\r\n\r\n//TO DO: CONNECT WITH ACTUAL USER SETTINGS. Currently hardcoded for Facebook continuous usage above 20 seconds\r\n//TO DO: SIMILAR CHECK FOR CUMULATIVE USAGE\r\n\r\n//checks whether activity rule break is to be triggered\r\nexport default function checkActivityRuleBreak() {\r\n  client\r\n    .getAppTotals()\r\n    .then((allValues) => {\r\n      let onboardingProps = store.getState().onboarding;\r\n      const activityBreaks = onboardingProps.allOverRides;\r\n      const websiteTotals = allValues.websiteTotals;\r\n      for (let indBreak of activityBreaks) {\r\n        if (indBreak.url.length > 0) {\r\n          let totalUsage = 0;\r\n          let parsed = psl.parse(indBreak.url);\r\n          let siteName = parsed.sld;\r\n          websiteTotals.map((ob, index) => {\r\n            if (\r\n              siteName.length > 0 &&\r\n              ob.data.url.includes(siteName) &&\r\n              !(store.getState().break.breakState === \"break\") &&\r\n              !(store.getState().break.breakState === \"break-feedback\") &&\r\n              !(store.getState().break.breakState === \"break-popup\") &&\r\n              !(store.getState().break.breakState === \"break-stroop\") &&\r\n              !(store.getState().break.breakState === \"break-fruit\") &&\r\n              !(store.getState().break.breakState === \"cancel-break\")\r\n            ) {\r\n              totalUsage = totalUsage + ob.duration;\r\n            }\r\n          });\r\n          let preGame = Math.ceil(totalUsage / (60 * indBreak.interval));\r\n          let initScheduled = store.getState().past.initScheduled;\r\n          let today = store.getState().past.initScheduled;\r\n          if (today.length === 0) {\r\n            today = new Date();\r\n            store.dispatch(PastActions.setToday(today.toISOString()));\r\n          } else {\r\n            today = new Date(today);\r\n          }\r\n          if (\r\n            today.getDate() !== new Date().getDate() ||\r\n            today.getMonth() !== new Date().getMonth()\r\n          ) {\r\n            today = new Date();\r\n            store.dispatch(PastActions.setToday(today.toISOString()));\r\n          } else {\r\n            initScheduled[indBreak.url] = preGame;\r\n          }\r\n          if (initScheduled[indBreak.url]) {\r\n            preGame = initScheduled[indBreak.url];\r\n          }\r\n\r\n          initScheduled[indBreak.url] = preGame;\r\n          store.dispatch(PastActions.saveInitBreakData(initScheduled));\r\n          if (preGame === 0) {\r\n            if (totalUsage / 60 > indBreak.interval && totalUsage > 0) {\r\n              initScheduled[indBreak.url] += 1;\r\n\r\n              store.dispatch(PastActions.saveInitBreakData(initScheduled));\r\n              let timeNow = new Date().toISOString();\r\n\r\n              let breakData = {\r\n                breakType: \"activity-rule (continuous)\",\r\n                breakDescription: indBreak.name,\r\n                breakDuration: indBreak.breakLength * 60,\r\n                breakStartTime: timeNow,\r\n              };\r\n              store.dispatch(BreakActions.startPopup(timeNow, breakData));\r\n              setTimeout(() => {\r\n                if (\r\n                  store.getState().break.breakState === \"break-popup\" &&\r\n                  store.getState().break.popupStartTime === timeNow\r\n                ) {\r\n                  store.dispatch(BreakActions.startStroop());\r\n                }\r\n              }, 10000);\r\n            }\r\n          } else {\r\n            if (\r\n              totalUsage / 60 > indBreak.interval * preGame &&\r\n              totalUsage > 0\r\n            ) {\r\n              initScheduled[indBreak.url] += 1;\r\n\r\n              store.dispatch(PastActions.saveInitBreakData(initScheduled));\r\n              let timeNow = new Date().toISOString();\r\n\r\n              let breakData = {\r\n                breakType: \"activity-rule (continuous)\",\r\n                breakDescription: indBreak.name,\r\n                breakDuration: indBreak.breakLength * 60,\r\n                breakStartTime: timeNow,\r\n              };\r\n              store.dispatch(BreakActions.startPopup(timeNow, breakData));\r\n              setTimeout(() => {\r\n                if (\r\n                  store.getState().break.breakState === \"break-popup\" &&\r\n                  store.getState().break.popupStartTime === timeNow\r\n                ) {\r\n                  store.dispatch(BreakActions.startStroop());\r\n                }\r\n              }, 10000);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(console.log);\r\n}\r\n","C:\\code\\mit\\RL_app\\src\\components\\Calendar.jsx",["379","380","381","382","383","384","385"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\index.jsx",["386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\PersonalInformation.jsx",["409","410","411","412","413","414","415"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Input, Button, Modal } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport ApiCalendar from \"react-google-calendar-api\";\r\n\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst { shell } = window.require(\"electron\").remote;\r\n\r\nconst PersonalInformationScreen = (props) => {\r\n  const [message, setMessage] = useState(\"Drink Water\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.ipcRenderer.on(\"calendar-success\", (event, data) => {\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <Modal\r\n        title=\"Basic Modal\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n      </Modal>\r\n      <h1>Personal Information</h1>\r\n      <Input\r\n        size=\"large\"\r\n        style={{ width: \"30%\", borderRadius: 5, verticalAlign: \"center\" }}\r\n        placeholder=\"First Name\"\r\n        value={props.onboarding.name}\r\n        onChange={(e) => {\r\n          props.setName(e.target.value);\r\n        }}\r\n      />\r\n      <div style={{ marginTop: \"3%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          Would you like any message to show up during the break? (e.g. drink\r\n          water, be kind, etc.)\r\n        </p>\r\n        {/* <p style={{ fontSize: \"15px\", color: \"#696969\", width: \"60%\" }}>\r\n          You can set up to 10 messages, the messages will appear interchangebly\r\n          on different breaks\r\n        </p> */}\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <Input\r\n            size=\"large\"\r\n            style={{\r\n              width: \"30%\",\r\n              borderRadius: 5,\r\n              verticalAlign: \"center\",\r\n            }}\r\n            placeholder=\"Break Message\"\r\n            value={props.onboarding.breakMessage}\r\n            onChange={(e) => {\r\n              props.setBreakMessage(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <div style={{ marginTop: \"3%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          Add a calendar to help us keep track of any meetings/breaks we should\r\n          work around\r\n        </p>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ borderRadius: \"20px\", marginTop: \"1%\" }}\r\n          size=\"large\"\r\n          onClick={() => {\r\n            // ApiCalendar.handleAuthClick();\r\n            // ApiCalendar.onLoad(() => {\r\n            //   ApiCalendar.listenSign(signUpdate);\r\n            // });\r\n            shell.openExternal(\"http://localhost:3006/\");\r\n          }}\r\n        >\r\n          <PlusOutlined style={{ color: \"white\" }} />\r\n          ADD CALENDAR\r\n        </Button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setName: OnboardingActions.setName,\r\n      setBreakMessage: OnboardingActions.setBreakMessage,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PersonalInformationScreen);\r\n","C:\\code\\mit\\RL_app\\src\\components\\Games\\push_info_end.js",["416","417","418","419","420","421"],"C:\\code\\mit\\RL_app\\src\\App.js",["422","423"],"import React, { useEffect } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter, useHistory } from \"react-router-dom\";\r\nimport BreakManager from \"./breakmanager\";\r\n\r\n\r\nimport { store } from \"./redux\";\r\nimport Main from \"./navigation\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nfunction App() {\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    \r\n  }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <Main />\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\code\\mit\\RL_app\\src\\screens\\LoginScreen\\index.jsx",[],"C:\\code\\mit\\RL_app\\src\\components\\Games\\fruit_ninja_manager.jsx",["424","425","426","427","428"],"C:\\code\\mit\\RL_app\\src\\screens\\BreakFeedbackScreen\\index.jsx",["429","430","431","432","433","434","435"],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\index.js",["436"],"import { combineReducers, Reducer } from \"redux\";\r\nimport TestReducer from \"./test.reducer\";\r\nimport OnboardingReducer from \"./onboarding.reducer\";\r\nimport BreakReducer from \"./break.reducer\";\r\nimport PastReducer from \"./past.reducer\";\r\n\r\n\r\nconst allReducers = {\r\n  onboarding: OnboardingReducer,\r\n  test: TestReducer,\r\n  break: BreakReducer,\r\n  past: PastReducer,\r\n};\r\n\r\nconst rootReducer = combineReducers({ ...allReducers });\r\n\r\nexport default rootReducer;\r\n",["437","438"],"C:\\code\\mit\\RL_app\\src\\components\\Games\\stroop_test_manager.jsx",["439","440","441","442","443"],"C:\\code\\mit\\RL_app\\src\\redux\\sagas\\index.js",["444"],"import { all, fork } from \"redux-saga/effects\";\r\n\r\n// Sagas\r\n// import adminSaga from \"./admin.saga\";\r\n\r\n// Connect types to sagas\r\nexport const rootSaga = function* root() {\r\n  yield all([\r\n    // fork(adminSaga)\r\n  ]);\r\n};\r\n",["445","446"],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\index.js",[],["447","448"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\FinishingUp.jsx",["449","450","451","452","453"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Input } from \"antd\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst FinishingUpScreen = (props) => {\r\n  const [breakArray, setBreakArray] = useState([\"https://www.youtube.com\"]);\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <h1>You're Almost Done!</h1>\r\n      <div style={{ marginTop: \"3%\", width: \"70%\" }}>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"0\" }}>\r\n          Thanks for your input! Based on your preferences, we have created a\r\n          schedule as shown below\r\n          <br />\r\n          <br />\r\n        </p>\r\n        <div style={{ width: \"100%\" }}>\r\n          <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n            Scheduled Breaks :{\" \"}\r\n          </p>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              width: \"50%\",\r\n            }}\r\n          >\r\n            <p style={{ flex: 1 }}>Day</p>\r\n            <p style={{ flex: 1 }}>Start Time</p>\r\n            <p style={{ flex: 1 }}>End Time</p>\r\n          </div>\r\n          <div>\r\n            {props.onboarding.scheduledBreaks.map((item, index) => {\r\n              if (item.start.length > 0) {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                      width: \"50%\",\r\n                      marginTop: index !== 0 ? \"1%\" : \"0%\",\r\n                    }}\r\n                  >\r\n                    <p style={{ flex: 1 }}>{item.day}</p>\r\n                    <p style={{ flex: 1 }}>\r\n                      {new Date(item.start).getHours() +\r\n                        \":\" +\r\n                        (new Date(item.start).getMinutes() < 10 ? \"0\" : \"\") +\r\n                        new Date(item.start).getMinutes()}\r\n                    </p>\r\n                    <p style={{ flex: 1 }}>\r\n                      {new Date(item.end).getHours() +\r\n                        \":\" +\r\n                        (new Date(item.end).getMinutes() < 10 ? \"0\" : \"\") +\r\n                        new Date(item.end).getMinutes()}\r\n                    </p>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div style={{ width: \"100%\" }}>\r\n          <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n            Regular Breaks :{\" \"}\r\n          </p>\r\n          <p>\r\n            How often you want to take regular breaks :{\" \"}\r\n            {props.onboarding.regularBreakInterval} minute(s)\r\n          </p>\r\n          <p>\r\n            How long you want these breaks to be :{\" \"}\r\n            {props.onboarding.regularBreakLength} minute(s)\r\n          </p>\r\n        </div>\r\n        <p style={{ fontSize: \"18px\", marginBottom: \"5%\" }}>\r\n          If you want to make any changes, click on the back button and change\r\n          your settings. You can always come back and make edits to your\r\n          schedule and overrides in 'My Settings'.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FinishingUpScreen);\r\n","C:\\code\\mit\\RL_app\\src\\screens\\PopupScreen\\index.jsx",["454","455"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { store } from \"../../redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//TO-DO: add style\r\nconst PopupScreen = () => {\r\n  let dispatch = useDispatch();\r\n  let history = useHistory();\r\n  return (\r\n    <div style={{ backgroundColor: \"white\", padding: \"3%\" }}>\r\n      <div\r\n        style={{\r\n          color: \"#7DCAB6\",\r\n          fontSize: \"22px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        It's time to break!\r\n      </div>\r\n      <div style={{ paddingTop: \"3%\", fontSize: \"15px\" }}>\r\n        Should we get started? This break will start automatically if you ignore\r\n        this pop up\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n          marginTop: \"10%\",\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={() => {\r\n            let breakInfo = store.getState().break;\r\n            let pastInfo = store.getState().past;\r\n            let endtime = breakInfo.breakEndTime;\r\n            if (breakInfo.breakEndTime.length === 0) {\r\n              endtime = new Date().toISOString();\r\n            }\r\n            let data = {\r\n              endtime: endtime,\r\n              intervalBreakData: pastInfo.intervalBreakData,\r\n              initScheduled: pastInfo.initScheduled,\r\n              breaksTriggered: breakInfo.breaksTriggered,\r\n            };\r\n            dispatch(BreakActions.onCancelBreak(data));\r\n            history.push(\"/cancel\");\r\n          }}\r\n          style={{ color: \"#7DCAB6\", borderWidth: 0 }}\r\n        >\r\n          CANCEL\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            // dispatch(BreakActions.startBreak())\r\n            dispatch(BreakActions.startStroop());\r\n            // history.push(\"/stroop\");\r\n          }}\r\n          style={{ color: \"#7DCAB6\", borderWidth: 0 }}\r\n        >\r\n          CONTINUE\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PopupScreen;\r\n",["456","457"],"C:\\code\\mit\\RL_app\\src\\screens\\AnalyticsScreen\\index.jsx",["458","459","460"],"import React, { useEffect, useState } from \"react\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport { Button, Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nconst AnalyticsScreen = (props) => {\r\n  const [stroop, setstroop] = useState([]);\r\n  const [fruit, setfruit] = useState([]);\r\n  const [score, setscore] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  const getData = async () => {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let tomorrow = new Date();\r\n    tomorrow.setHours(23, 59, 59, 999);\r\n    let body = {\r\n      user: props.onboarding.user._id,\r\n      today: today,\r\n      tomorrow: tomorrow,\r\n    };\r\n    let response = await axios.post(\r\n      \"https://thepallab.com/api/user/get-break\",\r\n      body\r\n    );\r\n    if (response.data.finalArrayStroop) {\r\n      let stroopDataTemp = response.data.finalArrayStroop;\r\n      for (let i = 1; i < stroopDataTemp.length; i++) {\r\n        let newDate = new Date(stroopDataTemp[i][0]);\r\n        stroopDataTemp[i][0] =\r\n          newDate.getHours() +\r\n          \":\" +\r\n          (newDate.getMinutes() < 10 ? \"0\" : \"\") +\r\n          newDate.getMinutes();\r\n      }\r\n      setstroop(stroopDataTemp);\r\n    }\r\n    if (response.data.finalArrayFruit) {\r\n      let fruitDataTemp = response.data.finalArrayFruit;\r\n      for (let i = 1; i < fruitDataTemp.length; i++) {\r\n        let newDate = new Date(fruitDataTemp[i][0]);\r\n        fruitDataTemp[i][0] =\r\n          newDate.getHours() +\r\n          \":\" +\r\n          (newDate.getMinutes() < 10 ? \"0\" : \"\") +\r\n          newDate.getMinutes();\r\n      }\r\n      setfruit(fruitDataTemp);\r\n    }\r\n    if (response.data.finalScore) {\r\n      let scoreDataTemp = response.data.finalScore;\r\n      for (let i = 1; i < scoreDataTemp.length; i++) {\r\n        let newDate = new Date(scoreDataTemp[i][0]);\r\n        scoreDataTemp[i][0] =\r\n          newDate.getHours() +\r\n          \":\" +\r\n          (newDate.getMinutes() < 10 ? \"0\" : \"\") +\r\n          newDate.getMinutes();\r\n      }\r\n      setscore(scoreDataTemp);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <h3 style={{ textAlign: \"center\" }}>Loading data...</h3>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{ padding: \"2%\" }}>\r\n        <Button\r\n          onClick={() => {\r\n            setLoading(true);\r\n            getData();\r\n          }}\r\n        >\r\n          Refresh\r\n        </Button>\r\n        <div\r\n          style={{\r\n            borderWidth: \"1px\",\r\n            borderColor: \"lightgray\",\r\n            borderStyle: \"solid\",\r\n            padding: \"2%\",\r\n            margin: \"1%\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <Chart\r\n            width={\"1000px\"}\r\n            height={\"300px\"}\r\n            chartType=\"Bar\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={stroop}\r\n            options={{\r\n              // Material design options\r\n              vAxis: {\r\n                title: \"Score\",\r\n              },\r\n              colors: [\"#0092C8\", \"#EA8600\"],\r\n              chart: {\r\n                title: \"Stroop Score\",\r\n              },\r\n            }}\r\n            // For tests\r\n            rootProps={{ \"data-testid\": \"2\" }}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            borderWidth: \"1px\",\r\n            borderColor: \"lightgray\",\r\n            borderStyle: \"solid\",\r\n            padding: \"2%\",\r\n            margin: \"1%\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <Chart\r\n            width={\"1000px\"}\r\n            height={\"300px\"}\r\n            chartType=\"Bar\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={fruit}\r\n            options={{\r\n              // Material design options\r\n              vAxis: {\r\n                title: \"Score\",\r\n              },\r\n              colors: [\"#0092C8\", \"#EA8600\"],\r\n              chart: {\r\n                title: \"Fruit Ninja Score\",\r\n              },\r\n            }}\r\n            // For tests\r\n            rootProps={{ \"data-testid\": \"2\" }}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            borderWidth: \"1px\",\r\n            borderColor: \"lightgray\",\r\n            borderStyle: \"solid\",\r\n            padding: \"2%\",\r\n            margin: \"1%\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          {score.length > 1 && (\r\n            <Chart\r\n              width={\"1000px\"}\r\n              height={\"300px\"}\r\n              chartType=\"Line\"\r\n              loader={<div>Loading Chart</div>}\r\n              data={score}\r\n              options={{\r\n                chart: {\r\n                  title: \"How helpful was the break?\",\r\n                },\r\n              }}\r\n              rootProps={{ \"data-testid\": \"3\" }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyticsScreen);\r\n","C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\interval.break.js",[],["461","462"],"C:\\code\\mit\\RL_app\\src\\breakmanager\\Checker\\scheduled.break.js",["463"],"import { BreakActions, PastActions } from \"../../redux/actions\";\r\nimport { store } from \"../../redux\";\r\n\r\n//TO DO: CONNECT WITH ACTUAL USER SETTINGS. Currently not hardcoded anything\r\n\r\n//Checks whether Scheduled break is triggered\r\nexport default function checkScheduledBreak() {\r\n  //Scheduled break if condition goes here\r\n  let weekDays = [\r\n    \"sunday\",\r\n    \"monday\",\r\n    \"tuesday\",\r\n    \"wednesday\",\r\n    \"thursday\",\r\n    \"friday\",\r\n    \"saturday\",\r\n  ];\r\n  let onboardingProps = store.getState().onboarding;\r\n  for (let indBreak of onboardingProps[\"scheduledBreaks\"]) {\r\n    let timeNow = new Date();\r\n    let dayVal = weekDays[timeNow.getDay()];\r\n    if (indBreak.day === dayVal) {\r\n      let startTime = new Date(indBreak.start);\r\n      let endTime = new Date(indBreak.end);\r\n      let currentStart = new Date();\r\n      currentStart.setHours(startTime.getHours(), startTime.getMinutes(), 0, 0);\r\n      let currentEnd = new Date();\r\n      currentEnd.setHours(endTime.getHours(), endTime.getMinutes(), 0, 0);\r\n      let lastEndTime = new Date(store.getState().past.lastScheduledBreak);\r\n      if (currentStart <= timeNow && currentEnd >= timeNow) {\r\n        if (\r\n          !(store.getState().break.breakState === \"break\") &&\r\n          !(store.getState().break.breakState === \"break-feedback\") &&\r\n          !(store.getState().break.breakState === \"break-popup\") &&\r\n          !(store.getState().break.breakState === \"break-stroop\") &&\r\n          !(store.getState().break.breakState === \"break-fruit\") &&\r\n          !(store.getState().break.breakState === \"cancel-break\") &&\r\n          !(lastEndTime > currentStart)\r\n        ) {\r\n          let timeNowNew = new Date();\r\n          let breakData = {\r\n            breakType: \"scheduled\",\r\n            breakDescription: \"NA\",\r\n            breakStartTime: timeNowNew,\r\n            breakDuration: (currentEnd - timeNow) / 1000,\r\n            breakEndTime: indBreak.end,\r\n          };\r\n          store.dispatch(BreakActions.startPopup(timeNowNew, breakData));\r\n          setTimeout(() => {\r\n            if (\r\n              store.getState().break.breakState === \"break-popup\" &&\r\n              store.getState().break.popupStartTime === timeNowNew\r\n            ) {\r\n              store.dispatch(BreakActions.startStroop());\r\n            }\r\n          }, 10000);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","C:\\code\\mit\\RL_app\\src\\services\\awclient.service.js",["464","465","466","467"],"C:\\code\\mit\\RL_app\\src\\screens\\AWCheckerScreen\\index.jsx",["468","469","470"],"import React, { useEffect, useState } from \"react\";\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\nimport { Button } from \"antd\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport BreakManager from \"../../breakmanager\";\r\nimport { AWClientService } from \"../../services\";\r\nimport AWError from \"../../assets/awerror.png\";\r\nimport AWFull from \"../../assets/awfull.png\";\r\nimport \"./styles.css\";\r\nvar shell = window.require(\"electron\").shell;\r\nlet client = new AWClientService();\r\n\r\nconst AWCheckerScreen = (props) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    awcheck();\r\n  }, []);\r\n\r\n  const awcheck = async () => {\r\n    // props.awChecked();\r\n    // history.push(\"/\");\r\n    try {\r\n      let resp = await client.getAppTotals();\r\n      if (Object.keys(resp).length > 0) {\r\n        props.awChecked();\r\n        if (props.onboarding.complete) {\r\n          BreakManager(history);\r\n          history.push(\"/home\");\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"look\", error);\r\n    }\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <h3 style={{ textAlign: \"center\" }}>\r\n          Checking if you have activity watch\r\n        </h3>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          width: \"100%\",\r\n          padding: \"5%\",\r\n        }}\r\n      >\r\n        <h3 style={{ textAlign: \"center\" }}>\r\n          You need to install and turn on activity watch! Please hit refresh\r\n          after installing and turning on activity watch\r\n        </h3>\r\n        <h4>How to install activity watch:</h4>\r\n        <p\r\n          className=\"linktext\"\r\n          style={{ color: \"blue\" }}\r\n          onClick={() => {\r\n            shell.openExternal(\"https://activitywatch.net/downloads/\");\r\n          }}\r\n        >\r\n          1. Download the latest version of activity watch by clicking here.\r\n        </p>\r\n        <p\r\n          className=\"linktext\"\r\n          style={{ color: \"blue\" }}\r\n          onClick={() => {\r\n            shell.openExternal(\r\n              \"https://docs.activitywatch.net/en/latest/getting-started.html#installation\"\r\n            );\r\n          }}\r\n        >\r\n          2. Click here and follow the instructions to install activity watch.\r\n        </p>\r\n        <p>\r\n          3. After installing , launch activity watch. You may encounter the\r\n          following error :\r\n        </p>\r\n        <img src={AWError} width=\"350px\" height=\"200px\" />\r\n        <p>If you do see this error then follow these instructions :</p>\r\n        <p>\r\n          3.1 : Go in \"System Preferences / Security & Privacy / General\":\r\n          you'll see text close to the bottom of the window mentioning the\r\n          offending file and a button to allow execution\r\n        </p>\r\n        <p>3.2 : Click the \"Allow\" button in the Security & Privacy window</p>\r\n        <p>3.3 : Close and restart activity watch</p>\r\n        <p\r\n          className=\"linktext\"\r\n          style={{ color: \"blue\" }}\r\n          onClick={() => {\r\n            shell.openExternal(\r\n              \"https://chrome.google.com/webstore/detail/activitywatch-web-watcher/nglaklhklhcoonedhgnpgddginnjdadi\"\r\n            );\r\n          }}\r\n        >\r\n          4. Install activity watch chrome extension by clicking here\r\n        </p>\r\n        <p>5. You will see a small activty watch logo in your tray : </p>\r\n        <img src={AWFull} width=\"100px\" height=\"100px\" />\r\n        <p>6. You have successfully installed activity watch. Please press refresh to continue </p>\r\n        <Button\r\n          onClick={() => {\r\n            setLoading(true);\r\n            awcheck();\r\n          }}\r\n        >\r\n          Refresh\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ awChecked: OnboardingActions.awChecked }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AWCheckerScreen);\r\n","C:\\code\\mit\\RL_app\\src\\redux\\reducers\\past.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\breakmanager\\index.js",[],["471","472"],"C:\\code\\mit\\RL_app\\src\\screens\\CancelScreen\\index.jsx",[],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\onboarding.reducer.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\onboarding.action.js",[],"C:\\code\\mit\\RL_app\\src\\components\\Timer.js",[],"C:\\code\\mit\\RL_app\\src\\services\\index.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\types\\index.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\SuddenScreen\\index.jsx",["473","474","475","476","477"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\AdHocBreaks.jsx",["478","479","480","481","482"],"C:\\code\\mit\\RL_app\\src\\redux\\actions\\past.action.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\reducers\\test.reducer.js",[],["483","484"],"C:\\code\\mit\\RL_app\\src\\components\\Toolbar.js",["485","486","487"],"import \"./styles.css\";\r\nimport { BreakActions, PastActions } from \"../redux/actions\";\r\nimport exitFullscreen from \"../assets/exit-fullscreen.png\";\r\nimport fullscreen from \"../assets/fullscreen.png\";\r\nimport { store } from \"../redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Toolbar(props) {\r\n  let mounted = true;\r\n  useEffect(() => {\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  });\r\n\r\n  const [minsRem, setMinsRem] = useState(Math.ceil(props.totaltime / 60));\r\n  setTimeout(() => {\r\n    setMinsRem(minsRem - 1);\r\n  }, 60000);\r\n  let str;\r\n  if (minsRem != 1) str = minsRem + \" Minutes remaining\";\r\n  else str = minsRem + \" Minute remaining\";\r\n  if (props.type === \"minimize\")\r\n    return (\r\n      <div className=\"toolbar\">\r\n        <div className=\"minutes-remaining\">{str}</div>\r\n        <button\r\n          className=\"minimize-break2\"\r\n          onClick={() => {\r\n            if (mounted) props.minimize(true);\r\n          }}\r\n        >\r\n          <img\r\n            src={exitFullscreen}\r\n            alt=\"Mountains\"\r\n            width=\"70\"\r\n            height=\"70\"\r\n          ></img>\r\n        </button>\r\n        <button\r\n          className=\"close-break2\"\r\n          onClick={() => {\r\n            store.dispatch(BreakActions.startFruit());\r\n          }}\r\n        >\r\n          &#10006;\r\n        </button>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div className=\"toolbar2\">\r\n        <div className=\"minutes-remaining2\">{str}</div>\r\n        <div className=\"break-text-min\">{props.message}</div>\r\n        <div>\r\n          <button\r\n            className=\"minimize-break3\"\r\n            onClick={() => {\r\n              if (mounted) props.minimize(false);\r\n            }}\r\n          >\r\n            <img src={fullscreen} alt=\"Mountains\" width=\"70\" height=\"70\"></img>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"close-break3\"\r\n            onClick={() => {\r\n              store.dispatch(BreakActions.startFruit());\r\n            }}\r\n          >\r\n            &#10006;\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\RegularBreaks.jsx",["488","489"],"C:\\code\\mit\\RL_app\\src\\utils\\dates.js",["490","491","492","493","494"],"C:\\code\\mit\\RL_app\\src\\redux\\types\\past.types.js",[],"C:\\code\\mit\\RL_app\\src\\redux\\types\\onboarding.types.js",[],"C:\\code\\mit\\RL_app\\src\\screens\\EditScheduledBreaks\\index.jsx",["495","496"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { TimePicker, Select, Button } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { OnboardingActions } from \"../../redux/actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst EditScheduledBreakScreen = (props) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"step-container\" style={{ padding: \"5%\" }}>\r\n      <h1>Scheduled Breaks</h1>\r\n\r\n      <div style={{ marginTop: \"4%\" }}>\r\n        <p style={{ fontSize: \"17px\" }}>\r\n          Are there any breaks you would like to schedule on a regular basis?\r\n        </p>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          width: \"50%\",\r\n        }}\r\n      >\r\n        <p style={{ flex: 1 }}>Day</p>\r\n        <p style={{ flex: 1 }}>Start Time</p>\r\n        <p style={{ flex: 1 }}>End Time</p>\r\n      </div>\r\n      <div>\r\n        {props.onboarding.tempScheduledBreaks.map((item, index) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                width: \"50%\",\r\n                marginTop: index !== 0 ? \"1%\" : \"0%\",\r\n              }}\r\n            >\r\n              <Select\r\n                style={{ flex: 1 }}\r\n                placeholder=\"Select a day\"\r\n                onChange={(value) => {\r\n                  const tempObject = item;\r\n                  tempObject.day = value;\r\n                  const tempArray = props.onboarding.tempScheduledBreaks;\r\n                  tempArray[index] = tempObject;\r\n                  props.addTempSched(tempArray);\r\n                }}\r\n                defaultValue={item.day.length !== 0 ? item.day : null}\r\n              >\r\n                <Option value=\"monday\">Monday</Option>\r\n                <Option value=\"tuesday\">Tuesday</Option>\r\n                <Option value=\"wednesday\">Wednesday</Option>\r\n                <Option value=\"thursday\">Thursday</Option>\r\n                <Option value=\"friday\">Friday</Option>\r\n                <Option value=\"saturday\">Saturday</Option>\r\n                <Option value=\"sunday\">Sunday</Option>\r\n              </Select>\r\n              <TimePicker\r\n                format={\"HH:mm\"}\r\n                style={{ flex: 1 }}\r\n                value={item.start.length !== 0 ? moment(item.start) : null}\r\n                onChange={(e) => {\r\n                  const time = e.toString();\r\n                  const tempObject = item;\r\n                  tempObject.start = time;\r\n                  const tempArray = props.onboarding.tempScheduledBreaks;\r\n                  tempArray[index] = tempObject;\r\n                  props.addTempSched(tempArray);\r\n                }}\r\n              />\r\n              <TimePicker\r\n                format={\"HH:mm\"}\r\n                style={{ flex: 1 }}\r\n                value={item.end.length !== 0 ? moment(item.end) : null}\r\n                onChange={(e) => {\r\n                  const time = e.toString();\r\n                  const tempObject = item;\r\n                  tempObject.end = time;\r\n                  const tempArray = props.onboarding.tempScheduledBreaks;\r\n                  tempArray[index] = tempObject;\r\n                  props.addTempSched(tempArray);\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <p\r\n        style={{\r\n          textDecorationLine: \"underline\",\r\n          marginTop: \"2%\",\r\n          fontSize: \"17px\",\r\n          cursor: \"pointer\",\r\n          width: \"15%\",\r\n        }}\r\n        onClick={() => {\r\n          let tempArray = props.onboarding.tempScheduledBreaks;\r\n          tempArray.push({ start: \"\", end: \"\", day: \"\" });\r\n          props.addTempSched(tempArray);\r\n        }}\r\n      >\r\n        +Add a Break\r\n      </p>\r\n      <Button\r\n        onClick={() => {\r\n          history.push(\"/home\");\r\n        }}\r\n      >\r\n        Cancel\r\n      </Button>\r\n      <Button\r\n        onClick={async () => {\r\n          let body = {\r\n            scheduledBreaks: props.onboarding.tempScheduledBreaks,\r\n            user: props.onboarding.user._id,\r\n          };\r\n          let response = await axios.post(\r\n            \"https://thepallab.com/api/user/update-onb\",\r\n            body\r\n          );\r\n          if (response.data.message === \"Successful Update\") {\r\n            props.setScheduledBreaks(props.onboarding.tempScheduledBreaks);\r\n            history.push(\"/home\");\r\n          }\r\n        }}\r\n      >\r\n        Update Scheduled Breaks\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onboarding: state.onboarding };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setScheduledBreaks: OnboardingActions.setScheduledBreaks,\r\n      addTempSched: OnboardingActions.addTempSched,\r\n      setScreenTime: OnboardingActions.setScreenTime,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditScheduledBreakScreen);\r\n","C:\\code\\mit\\RL_app\\src\\screens\\EditRegularBreaksScreen\\index.jsx",["497","498"],"C:\\code\\mit\\RL_app\\src\\screens\\EditActivityBreaksScreen\\index.jsx",["499","500","501","502","503"],"C:\\code\\mit\\RL_app\\src\\redux\\index.js",[],["504","505"],"C:\\code\\mit\\RL_app\\src\\screens\\OnboardingScreen\\ScheduledBreaks.jsx",["506","507"],{"ruleId":"508","replacedBy":"509"},{"ruleId":"510","replacedBy":"511"},{"ruleId":"512","severity":1,"message":"513","line":2,"column":10,"nodeType":"514","messageId":"515","endLine":2,"endColumn":20},{"ruleId":"512","severity":1,"message":"516","line":3,"column":8,"nodeType":"514","messageId":"515","endLine":3,"endColumn":13},{"ruleId":"512","severity":1,"message":"517","line":10,"column":8,"nodeType":"514","messageId":"515","endLine":10,"endColumn":13},{"ruleId":"512","severity":1,"message":"518","line":14,"column":10,"nodeType":"514","messageId":"515","endLine":14,"endColumn":22},{"ruleId":"512","severity":1,"message":"519","line":14,"column":24,"nodeType":"514","messageId":"515","endLine":14,"endColumn":35},{"ruleId":"512","severity":1,"message":"520","line":16,"column":8,"nodeType":"514","messageId":"515","endLine":16,"endColumn":10},{"ruleId":"512","severity":1,"message":"521","line":17,"column":8,"nodeType":"514","messageId":"515","endLine":17,"endColumn":10},{"ruleId":"512","severity":1,"message":"522","line":18,"column":8,"nodeType":"514","messageId":"515","endLine":18,"endColumn":10},{"ruleId":"512","severity":1,"message":"523","line":19,"column":8,"nodeType":"514","messageId":"515","endLine":19,"endColumn":10},{"ruleId":"512","severity":1,"message":"524","line":20,"column":8,"nodeType":"514","messageId":"515","endLine":20,"endColumn":10},{"ruleId":"512","severity":1,"message":"525","line":22,"column":8,"nodeType":"514","messageId":"515","endLine":22,"endColumn":11},{"ruleId":"512","severity":1,"message":"526","line":23,"column":8,"nodeType":"514","messageId":"515","endLine":23,"endColumn":11},{"ruleId":"512","severity":1,"message":"527","line":24,"column":8,"nodeType":"514","messageId":"515","endLine":24,"endColumn":11},{"ruleId":"512","severity":1,"message":"528","line":25,"column":8,"nodeType":"514","messageId":"515","endLine":25,"endColumn":11},{"ruleId":"512","severity":1,"message":"529","line":26,"column":8,"nodeType":"514","messageId":"515","endLine":26,"endColumn":11},{"ruleId":"512","severity":1,"message":"530","line":36,"column":7,"nodeType":"514","messageId":"515","endLine":36,"endColumn":14},{"ruleId":"531","severity":1,"message":"532","line":36,"column":17,"nodeType":"533","endLine":36,"endColumn":22},{"ruleId":"512","severity":1,"message":"534","line":41,"column":9,"nodeType":"514","messageId":"515","endLine":41,"endColumn":17},{"ruleId":"512","severity":1,"message":"535","line":156,"column":5,"nodeType":"514","messageId":"515","endLine":156,"endColumn":19},{"ruleId":"536","severity":1,"message":"537","line":157,"column":14,"nodeType":"538","messageId":"539","endLine":157,"endColumn":16},{"ruleId":"508","replacedBy":"540"},{"ruleId":"510","replacedBy":"541"},{"ruleId":"512","severity":1,"message":"542","line":2,"column":37,"nodeType":"514","messageId":"515","endLine":2,"endColumn":42},{"ruleId":"508","replacedBy":"543"},{"ruleId":"510","replacedBy":"544"},{"ruleId":"512","severity":1,"message":"518","line":1,"column":10,"nodeType":"514","messageId":"515","endLine":1,"endColumn":22},{"ruleId":"512","severity":1,"message":"545","line":52,"column":11,"nodeType":"514","messageId":"515","endLine":52,"endColumn":19},{"ruleId":"512","severity":1,"message":"546","line":3,"column":20,"nodeType":"514","messageId":"515","endLine":3,"endColumn":29},{"ruleId":"536","severity":1,"message":"537","line":29,"column":27,"nodeType":"538","messageId":"539","endLine":29,"endColumn":29},{"ruleId":"547","severity":1,"message":"548","line":68,"column":7,"nodeType":"514","messageId":"549","endLine":68,"endColumn":12},{"ruleId":"547","severity":1,"message":"550","line":69,"column":7,"nodeType":"514","messageId":"549","endLine":69,"endColumn":13},{"ruleId":"512","severity":1,"message":"551","line":80,"column":13,"nodeType":"514","messageId":"515","endLine":80,"endColumn":19},{"ruleId":"512","severity":1,"message":"552","line":80,"column":21,"nodeType":"514","messageId":"515","endLine":80,"endColumn":30},{"ruleId":"512","severity":1,"message":"553","line":80,"column":32,"nodeType":"514","messageId":"515","endLine":80,"endColumn":37},{"ruleId":"512","severity":1,"message":"554","line":80,"column":39,"nodeType":"514","messageId":"515","endLine":80,"endColumn":45},{"ruleId":"512","severity":1,"message":"555","line":80,"column":47,"nodeType":"514","messageId":"515","endLine":80,"endColumn":63},{"ruleId":"536","severity":1,"message":"537","line":98,"column":19,"nodeType":"538","messageId":"539","endLine":98,"endColumn":21},{"ruleId":"512","severity":1,"message":"556","line":15,"column":10,"nodeType":"514","messageId":"515","endLine":15,"endColumn":31},{"ruleId":"531","severity":1,"message":"557","line":54,"column":6,"nodeType":"558","endLine":54,"endColumn":8,"suggestions":"559"},{"ruleId":"508","replacedBy":"560"},{"ruleId":"510","replacedBy":"561"},{"ruleId":"512","severity":1,"message":"546","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":26},{"ruleId":"512","severity":1,"message":"562","line":11,"column":10,"nodeType":"514","messageId":"515","endLine":11,"endColumn":20},{"ruleId":"512","severity":1,"message":"563","line":11,"column":22,"nodeType":"514","messageId":"515","endLine":11,"endColumn":35},{"ruleId":"564","severity":1,"message":"565","line":45,"column":65,"nodeType":"566","messageId":"567","endLine":45,"endColumn":67},{"ruleId":"564","severity":1,"message":"565","line":133,"column":62,"nodeType":"566","messageId":"567","endLine":133,"endColumn":64},{"ruleId":"512","severity":1,"message":"546","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":26},{"ruleId":"512","severity":1,"message":"568","line":1,"column":28,"nodeType":"514","messageId":"515","endLine":1,"endColumn":36},{"ruleId":"512","severity":1,"message":"569","line":4,"column":10,"nodeType":"514","messageId":"515","endLine":4,"endColumn":16},{"ruleId":"512","severity":1,"message":"570","line":4,"column":24,"nodeType":"514","messageId":"515","endLine":4,"endColumn":29},{"ruleId":"512","severity":1,"message":"571","line":13,"column":9,"nodeType":"514","messageId":"515","endLine":13,"endColumn":16},{"ruleId":"512","severity":1,"message":"572","line":7,"column":10,"nodeType":"514","messageId":"515","endLine":7,"endColumn":18},{"ruleId":"512","severity":1,"message":"573","line":8,"column":22,"nodeType":"514","messageId":"515","endLine":8,"endColumn":28},{"ruleId":"512","severity":1,"message":"574","line":10,"column":7,"nodeType":"514","messageId":"515","endLine":10,"endColumn":17},{"ruleId":"531","severity":1,"message":"575","line":50,"column":6,"nodeType":"558","endLine":50,"endColumn":8,"suggestions":"576"},{"ruleId":"512","severity":1,"message":"577","line":2,"column":23,"nodeType":"514","messageId":"515","endLine":2,"endColumn":34},{"ruleId":"512","severity":1,"message":"518","line":3,"column":10,"nodeType":"514","messageId":"515","endLine":3,"endColumn":22},{"ruleId":"512","severity":1,"message":"519","line":3,"column":24,"nodeType":"514","messageId":"515","endLine":3,"endColumn":35},{"ruleId":"512","severity":1,"message":"569","line":4,"column":10,"nodeType":"514","messageId":"515","endLine":4,"endColumn":16},{"ruleId":"512","severity":1,"message":"578","line":5,"column":10,"nodeType":"514","messageId":"515","endLine":5,"endColumn":15},{"ruleId":"512","severity":1,"message":"579","line":8,"column":9,"nodeType":"514","messageId":"515","endLine":8,"endColumn":20},{"ruleId":"512","severity":1,"message":"573","line":8,"column":22,"nodeType":"514","messageId":"515","endLine":8,"endColumn":28},{"ruleId":"512","severity":1,"message":"580","line":10,"column":5,"nodeType":"514","messageId":"515","endLine":10,"endColumn":7},{"ruleId":"512","severity":1,"message":"581","line":19,"column":10,"nodeType":"514","messageId":"515","endLine":19,"endColumn":17},{"ruleId":"512","severity":1,"message":"582","line":19,"column":19,"nodeType":"514","messageId":"515","endLine":19,"endColumn":30},{"ruleId":"512","severity":1,"message":"583","line":20,"column":10,"nodeType":"514","messageId":"515","endLine":20,"endColumn":16},{"ruleId":"512","severity":1,"message":"584","line":20,"column":18,"nodeType":"514","messageId":"515","endLine":20,"endColumn":26},{"ruleId":"512","severity":1,"message":"534","line":21,"column":7,"nodeType":"514","messageId":"515","endLine":21,"endColumn":15},{"ruleId":"512","severity":1,"message":"585","line":22,"column":7,"nodeType":"514","messageId":"515","endLine":22,"endColumn":12},{"ruleId":"512","severity":1,"message":"586","line":2,"column":8,"nodeType":"514","messageId":"515","endLine":2,"endColumn":17},{"ruleId":"512","severity":1,"message":"587","line":3,"column":8,"nodeType":"514","messageId":"515","endLine":3,"endColumn":17},{"ruleId":"536","severity":1,"message":"537","line":10,"column":34,"nodeType":"538","messageId":"539","endLine":10,"endColumn":36},{"ruleId":"531","severity":1,"message":"588","line":45,"column":8,"nodeType":"558","endLine":45,"endColumn":10,"suggestions":"589"},{"ruleId":"512","severity":1,"message":"577","line":2,"column":23,"nodeType":"514","messageId":"515","endLine":2,"endColumn":34},{"ruleId":"512","severity":1,"message":"518","line":3,"column":10,"nodeType":"514","messageId":"515","endLine":3,"endColumn":22},{"ruleId":"512","severity":1,"message":"519","line":3,"column":24,"nodeType":"514","messageId":"515","endLine":3,"endColumn":35},{"ruleId":"512","severity":1,"message":"569","line":4,"column":10,"nodeType":"514","messageId":"515","endLine":4,"endColumn":16},{"ruleId":"512","severity":1,"message":"578","line":5,"column":10,"nodeType":"514","messageId":"515","endLine":5,"endColumn":15},{"ruleId":"512","severity":1,"message":"579","line":8,"column":9,"nodeType":"514","messageId":"515","endLine":8,"endColumn":20},{"ruleId":"512","severity":1,"message":"573","line":8,"column":22,"nodeType":"514","messageId":"515","endLine":8,"endColumn":28},{"ruleId":"512","severity":1,"message":"580","line":10,"column":5,"nodeType":"514","messageId":"515","endLine":10,"endColumn":7},{"ruleId":"512","severity":1,"message":"581","line":19,"column":10,"nodeType":"514","messageId":"515","endLine":19,"endColumn":17},{"ruleId":"512","severity":1,"message":"582","line":19,"column":19,"nodeType":"514","messageId":"515","endLine":19,"endColumn":30},{"ruleId":"512","severity":1,"message":"583","line":20,"column":10,"nodeType":"514","messageId":"515","endLine":20,"endColumn":16},{"ruleId":"512","severity":1,"message":"584","line":20,"column":18,"nodeType":"514","messageId":"515","endLine":20,"endColumn":26},{"ruleId":"512","severity":1,"message":"534","line":21,"column":7,"nodeType":"514","messageId":"515","endLine":21,"endColumn":15},{"ruleId":"512","severity":1,"message":"585","line":22,"column":7,"nodeType":"514","messageId":"515","endLine":22,"endColumn":12},{"ruleId":"512","severity":1,"message":"516","line":2,"column":8,"nodeType":"514","messageId":"515","endLine":2,"endColumn":13},{"ruleId":"512","severity":1,"message":"578","line":4,"column":10,"nodeType":"514","messageId":"515","endLine":4,"endColumn":15},{"ruleId":"512","severity":1,"message":"577","line":6,"column":23,"nodeType":"514","messageId":"515","endLine":6,"endColumn":34},{"ruleId":"512","severity":1,"message":"579","line":7,"column":9,"nodeType":"514","messageId":"515","endLine":7,"endColumn":20},{"ruleId":"531","severity":1,"message":"590","line":22,"column":6,"nodeType":"558","endLine":22,"endColumn":8,"suggestions":"591"},{"ruleId":"508","replacedBy":"592"},{"ruleId":"510","replacedBy":"593"},{"ruleId":"512","severity":1,"message":"519","line":1,"column":24,"nodeType":"514","messageId":"515","endLine":1,"endColumn":35},{"ruleId":"512","severity":1,"message":"594","line":5,"column":7,"nodeType":"514","messageId":"515","endLine":5,"endColumn":12},{"ruleId":"512","severity":1,"message":"595","line":6,"column":7,"nodeType":"514","messageId":"515","endLine":6,"endColumn":11},{"ruleId":"564","severity":1,"message":"596","line":23,"column":41,"nodeType":"566","messageId":"597","endLine":23,"endColumn":43},{"ruleId":"512","severity":1,"message":"542","line":2,"column":37,"nodeType":"514","messageId":"515","endLine":2,"endColumn":42},{"ruleId":"512","severity":1,"message":"598","line":8,"column":13,"nodeType":"514","messageId":"515","endLine":8,"endColumn":18},{"ruleId":"512","severity":1,"message":"599","line":24,"column":7,"nodeType":"514","messageId":"515","endLine":24,"endColumn":29},{"ruleId":"531","severity":1,"message":"600","line":56,"column":6,"nodeType":"558","endLine":56,"endColumn":8,"suggestions":"601"},{"ruleId":"512","severity":1,"message":"602","line":85,"column":9,"nodeType":"514","messageId":"515","endLine":85,"endColumn":22},{"ruleId":"512","severity":1,"message":"603","line":87,"column":9,"nodeType":"514","messageId":"515","endLine":87,"endColumn":20},{"ruleId":"536","severity":1,"message":"537","line":94,"column":16,"nodeType":"538","messageId":"539","endLine":94,"endColumn":18},{"ruleId":"512","severity":1,"message":"604","line":2,"column":8,"nodeType":"514","messageId":"515","endLine":2,"endColumn":18},{"ruleId":"512","severity":1,"message":"605","line":3,"column":8,"nodeType":"514","messageId":"515","endLine":3,"endColumn":18},{"ruleId":"512","severity":1,"message":"516","line":8,"column":8,"nodeType":"514","messageId":"515","endLine":8,"endColumn":13},{"ruleId":"512","severity":1,"message":"578","line":9,"column":10,"nodeType":"514","messageId":"515","endLine":9,"endColumn":15},{"ruleId":"536","severity":1,"message":"537","line":34,"column":27,"nodeType":"538","messageId":"539","endLine":34,"endColumn":29},{"ruleId":"536","severity":1,"message":"537","line":35,"column":28,"nodeType":"538","messageId":"539","endLine":35,"endColumn":30},{"ruleId":"536","severity":1,"message":"537","line":36,"column":27,"nodeType":"538","messageId":"539","endLine":36,"endColumn":29},{"ruleId":"536","severity":1,"message":"537","line":38,"column":31,"nodeType":"538","messageId":"539","endLine":38,"endColumn":33},{"ruleId":"536","severity":1,"message":"537","line":38,"column":55,"nodeType":"538","messageId":"539","endLine":38,"endColumn":57},{"ruleId":"536","severity":1,"message":"537","line":43,"column":32,"nodeType":"538","messageId":"539","endLine":43,"endColumn":34},{"ruleId":"536","severity":1,"message":"537","line":43,"column":57,"nodeType":"538","messageId":"539","endLine":43,"endColumn":59},{"ruleId":"536","severity":1,"message":"537","line":72,"column":19,"nodeType":"538","messageId":"539","endLine":72,"endColumn":21},{"ruleId":"536","severity":1,"message":"537","line":81,"column":18,"nodeType":"538","messageId":"539","endLine":81,"endColumn":20},{"ruleId":"536","severity":1,"message":"537","line":81,"column":38,"nodeType":"538","messageId":"539","endLine":81,"endColumn":40},{"ruleId":"536","severity":1,"message":"537","line":82,"column":18,"nodeType":"538","messageId":"539","endLine":82,"endColumn":20},{"ruleId":"536","severity":1,"message":"537","line":82,"column":38,"nodeType":"538","messageId":"539","endLine":82,"endColumn":40},{"ruleId":"536","severity":1,"message":"537","line":87,"column":19,"nodeType":"538","messageId":"539","endLine":87,"endColumn":21},{"ruleId":"536","severity":1,"message":"537","line":88,"column":21,"nodeType":"538","messageId":"539","endLine":88,"endColumn":23},{"ruleId":"536","severity":1,"message":"537","line":123,"column":18,"nodeType":"538","messageId":"539","endLine":123,"endColumn":20},{"ruleId":"536","severity":1,"message":"537","line":123,"column":38,"nodeType":"538","messageId":"539","endLine":123,"endColumn":40},{"ruleId":"536","severity":1,"message":"537","line":124,"column":18,"nodeType":"538","messageId":"539","endLine":124,"endColumn":20},{"ruleId":"536","severity":1,"message":"537","line":124,"column":38,"nodeType":"538","messageId":"539","endLine":124,"endColumn":40},{"ruleId":"536","severity":1,"message":"537","line":128,"column":19,"nodeType":"538","messageId":"539","endLine":128,"endColumn":21},{"ruleId":"512","severity":1,"message":"569","line":4,"column":17,"nodeType":"514","messageId":"515","endLine":4,"endColumn":23},{"ruleId":"512","severity":1,"message":"606","line":5,"column":10,"nodeType":"514","messageId":"515","endLine":5,"endColumn":22},{"ruleId":"512","severity":1,"message":"607","line":6,"column":8,"nodeType":"514","messageId":"515","endLine":6,"endColumn":19},{"ruleId":"512","severity":1,"message":"608","line":12,"column":9,"nodeType":"514","messageId":"515","endLine":12,"endColumn":14},{"ruleId":"512","severity":1,"message":"609","line":15,"column":10,"nodeType":"514","messageId":"515","endLine":15,"endColumn":17},{"ruleId":"512","severity":1,"message":"610","line":15,"column":19,"nodeType":"514","messageId":"515","endLine":15,"endColumn":29},{"ruleId":"512","severity":1,"message":"611","line":18,"column":9,"nodeType":"514","messageId":"515","endLine":18,"endColumn":18},{"ruleId":"512","severity":1,"message":"516","line":2,"column":8,"nodeType":"514","messageId":"515","endLine":2,"endColumn":13},{"ruleId":"512","severity":1,"message":"578","line":4,"column":10,"nodeType":"514","messageId":"515","endLine":4,"endColumn":15},{"ruleId":"512","severity":1,"message":"577","line":6,"column":23,"nodeType":"514","messageId":"515","endLine":6,"endColumn":34},{"ruleId":"512","severity":1,"message":"579","line":7,"column":9,"nodeType":"514","messageId":"515","endLine":7,"endColumn":20},{"ruleId":"512","severity":1,"message":"573","line":7,"column":22,"nodeType":"514","messageId":"515","endLine":7,"endColumn":28},{"ruleId":"531","severity":1,"message":"590","line":22,"column":6,"nodeType":"558","endLine":22,"endColumn":8,"suggestions":"612"},{"ruleId":"512","severity":1,"message":"613","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":20},{"ruleId":"512","severity":1,"message":"571","line":15,"column":7,"nodeType":"514","messageId":"515","endLine":15,"endColumn":14},{"ruleId":"536","severity":1,"message":"537","line":12,"column":21,"nodeType":"538","messageId":"539","endLine":12,"endColumn":23},{"ruleId":"536","severity":1,"message":"537","line":15,"column":21,"nodeType":"538","messageId":"539","endLine":15,"endColumn":23},{"ruleId":"536","severity":1,"message":"537","line":22,"column":21,"nodeType":"538","messageId":"539","endLine":22,"endColumn":23},{"ruleId":"536","severity":1,"message":"537","line":25,"column":21,"nodeType":"538","messageId":"539","endLine":25,"endColumn":23},{"ruleId":"536","severity":1,"message":"537","line":32,"column":21,"nodeType":"538","messageId":"539","endLine":32,"endColumn":23},{"ruleId":"512","severity":1,"message":"614","line":2,"column":18,"nodeType":"514","messageId":"515","endLine":2,"endColumn":23},{"ruleId":"512","severity":1,"message":"615","line":7,"column":8,"nodeType":"514","messageId":"515","endLine":7,"endColumn":15},{"ruleId":"512","severity":1,"message":"616","line":8,"column":10,"nodeType":"514","messageId":"515","endLine":8,"endColumn":25},{"ruleId":"512","severity":1,"message":"571","line":48,"column":9,"nodeType":"514","messageId":"515","endLine":48,"endColumn":16},{"ruleId":"531","severity":1,"message":"617","line":85,"column":6,"nodeType":"558","endLine":85,"endColumn":8,"suggestions":"618"},{"ruleId":"536","severity":1,"message":"537","line":88,"column":16,"nodeType":"538","messageId":"539","endLine":88,"endColumn":18},{"ruleId":"619","severity":1,"message":"620","line":196,"column":17,"nodeType":"621","endLine":196,"endColumn":74},{"ruleId":"512","severity":1,"message":"622","line":1,"column":27,"nodeType":"514","messageId":"515","endLine":1,"endColumn":34},{"ruleId":"508","replacedBy":"623"},{"ruleId":"510","replacedBy":"624"},{"ruleId":"536","severity":1,"message":"537","line":11,"column":22,"nodeType":"538","messageId":"539","endLine":11,"endColumn":24},{"ruleId":"536","severity":1,"message":"537","line":14,"column":22,"nodeType":"538","messageId":"539","endLine":14,"endColumn":24},{"ruleId":"536","severity":1,"message":"537","line":22,"column":22,"nodeType":"538","messageId":"539","endLine":22,"endColumn":24},{"ruleId":"536","severity":1,"message":"537","line":25,"column":22,"nodeType":"538","messageId":"539","endLine":25,"endColumn":24},{"ruleId":"536","severity":1,"message":"537","line":33,"column":22,"nodeType":"538","messageId":"539","endLine":33,"endColumn":24},{"ruleId":"512","severity":1,"message":"625","line":1,"column":15,"nodeType":"514","messageId":"515","endLine":1,"endColumn":19},{"ruleId":"508","replacedBy":"626"},{"ruleId":"510","replacedBy":"627"},{"ruleId":"508","replacedBy":"628"},{"ruleId":"510","replacedBy":"629"},{"ruleId":"512","severity":1,"message":"546","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":26},{"ruleId":"512","severity":1,"message":"614","line":4,"column":10,"nodeType":"514","messageId":"515","endLine":4,"endColumn":15},{"ruleId":"512","severity":1,"message":"562","line":9,"column":10,"nodeType":"514","messageId":"515","endLine":9,"endColumn":20},{"ruleId":"512","severity":1,"message":"563","line":9,"column":22,"nodeType":"514","messageId":"515","endLine":9,"endColumn":35},{"ruleId":"564","severity":1,"message":"565","line":38,"column":65,"nodeType":"566","messageId":"567","endLine":38,"endColumn":67},{"ruleId":"512","severity":1,"message":"577","line":3,"column":23,"nodeType":"514","messageId":"515","endLine":3,"endColumn":34},{"ruleId":"512","severity":1,"message":"519","line":4,"column":24,"nodeType":"514","messageId":"515","endLine":4,"endColumn":35},{"ruleId":"508","replacedBy":"630"},{"ruleId":"510","replacedBy":"631"},{"ruleId":"512","severity":1,"message":"632","line":2,"column":10,"nodeType":"514","messageId":"515","endLine":2,"endColumn":27},{"ruleId":"512","severity":1,"message":"614","line":3,"column":18,"nodeType":"514","messageId":"515","endLine":3,"endColumn":23},{"ruleId":"531","severity":1,"message":"600","line":17,"column":6,"nodeType":"558","endLine":17,"endColumn":8,"suggestions":"633"},{"ruleId":"508","replacedBy":"634"},{"ruleId":"510","replacedBy":"635"},{"ruleId":"512","severity":1,"message":"519","line":1,"column":24,"nodeType":"514","messageId":"515","endLine":1,"endColumn":35},{"ruleId":"636","severity":1,"message":"637","line":114,"column":42,"nodeType":"538","messageId":"638","endLine":114,"endColumn":43},{"ruleId":"636","severity":1,"message":"637","line":114,"column":68,"nodeType":"538","messageId":"638","endLine":114,"endColumn":69},{"ruleId":"636","severity":1,"message":"637","line":156,"column":42,"nodeType":"538","messageId":"638","endLine":156,"endColumn":43},{"ruleId":"636","severity":1,"message":"637","line":156,"column":68,"nodeType":"538","messageId":"638","endLine":156,"endColumn":69},{"ruleId":"531","severity":1,"message":"639","line":20,"column":6,"nodeType":"558","endLine":20,"endColumn":8,"suggestions":"640"},{"ruleId":"619","severity":1,"message":"620","line":95,"column":9,"nodeType":"621","endLine":95,"endColumn":59},{"ruleId":"619","severity":1,"message":"620","line":116,"column":9,"nodeType":"621","endLine":116,"endColumn":58},{"ruleId":"508","replacedBy":"641"},{"ruleId":"510","replacedBy":"642"},{"ruleId":"512","severity":1,"message":"516","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":13},{"ruleId":"512","severity":1,"message":"643","line":13,"column":10,"nodeType":"514","messageId":"515","endLine":13,"endColumn":18},{"ruleId":"512","severity":1,"message":"644","line":13,"column":20,"nodeType":"514","messageId":"515","endLine":13,"endColumn":31},{"ruleId":"512","severity":1,"message":"571","line":14,"column":9,"nodeType":"514","messageId":"515","endLine":14,"endColumn":16},{"ruleId":"512","severity":1,"message":"645","line":16,"column":9,"nodeType":"514","messageId":"515","endLine":16,"endColumn":18},{"ruleId":"512","severity":1,"message":"546","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":26},{"ruleId":"512","severity":1,"message":"646","line":4,"column":48,"nodeType":"514","messageId":"515","endLine":4,"endColumn":55},{"ruleId":"512","severity":1,"message":"647","line":15,"column":10,"nodeType":"514","messageId":"515","endLine":15,"endColumn":15},{"ruleId":"512","severity":1,"message":"648","line":15,"column":17,"nodeType":"514","messageId":"515","endLine":15,"endColumn":25},{"ruleId":"512","severity":1,"message":"611","line":19,"column":9,"nodeType":"514","messageId":"515","endLine":19,"endColumn":18},{"ruleId":"508","replacedBy":"649"},{"ruleId":"510","replacedBy":"650"},{"ruleId":"512","severity":1,"message":"519","line":2,"column":24,"nodeType":"514","messageId":"515","endLine":2,"endColumn":35},{"ruleId":"531","severity":1,"message":"532","line":12,"column":17,"nodeType":"533","endLine":12,"endColumn":22},{"ruleId":"536","severity":1,"message":"651","line":21,"column":15,"nodeType":"538","messageId":"539","endLine":21,"endColumn":17},{"ruleId":"512","severity":1,"message":"546","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":26},{"ruleId":"512","severity":1,"message":"568","line":1,"column":28,"nodeType":"514","messageId":"515","endLine":1,"endColumn":36},{"ruleId":"652","severity":1,"message":"653","line":136,"column":3,"nodeType":"654","messageId":"655","endLine":147,"endColumn":4},{"ruleId":"656","severity":1,"message":"657","line":139,"column":5,"nodeType":"658","messageId":"659","endLine":140,"endColumn":16},{"ruleId":"656","severity":1,"message":"657","line":141,"column":5,"nodeType":"658","messageId":"659","endLine":142,"endColumn":16},{"ruleId":"656","severity":1,"message":"657","line":143,"column":5,"nodeType":"658","messageId":"659","endLine":144,"endColumn":16},{"ruleId":"656","severity":1,"message":"657","line":145,"column":5,"nodeType":"658","messageId":"659","endLine":146,"endColumn":18},{"ruleId":"512","severity":1,"message":"546","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":26},{"ruleId":"512","severity":1,"message":"568","line":1,"column":28,"nodeType":"514","messageId":"515","endLine":1,"endColumn":36},{"ruleId":"512","severity":1,"message":"546","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":26},{"ruleId":"512","severity":1,"message":"568","line":1,"column":28,"nodeType":"514","messageId":"515","endLine":1,"endColumn":36},{"ruleId":"512","severity":1,"message":"546","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":26},{"ruleId":"512","severity":1,"message":"646","line":4,"column":48,"nodeType":"514","messageId":"515","endLine":4,"endColumn":55},{"ruleId":"512","severity":1,"message":"647","line":17,"column":10,"nodeType":"514","messageId":"515","endLine":17,"endColumn":15},{"ruleId":"512","severity":1,"message":"648","line":17,"column":17,"nodeType":"514","messageId":"515","endLine":17,"endColumn":25},{"ruleId":"512","severity":1,"message":"611","line":22,"column":9,"nodeType":"514","messageId":"515","endLine":22,"endColumn":18},{"ruleId":"508","replacedBy":"660"},{"ruleId":"510","replacedBy":"661"},{"ruleId":"512","severity":1,"message":"546","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":26},{"ruleId":"512","severity":1,"message":"568","line":1,"column":28,"nodeType":"514","messageId":"515","endLine":1,"endColumn":36},"no-native-reassign",["662"],"no-negated-in-lhs",["663"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Timer' is defined but never used.","'BreakActions' is defined but never used.","'PastActions' is defined but never used.","'s1' is defined but never used.","'s2' is defined but never used.","'s3' is defined but never used.","'s4' is defined but never used.","'s5' is defined but never used.","'s1y' is defined but never used.","'s2y' is defined but never used.","'s3y' is defined but never used.","'s4y' is defined but never used.","'s5y' is defined but never used.","'mounted' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'mounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'dispatch' is assigned a value but never used.","'getImageButton' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["662"],["663"],"'Views' is defined but never used.",["662"],["663"],"'response' is assigned a value but never used.","'useEffect' is defined but never used.","no-redeclare","'words' is already defined.","redeclared","'colors' is already defined.","'errors' is assigned a value but never used.","'successes' is assigned a value but never used.","'begin' is assigned a value but never used.","'finish' is assigned a value but never used.","'timeLimitReached' is assigned a value but never used.","'setOnboardingComplete' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'props.onboarding.awChecked', 'props.onboarding.complete', and 'props.onboarding.user'. Either include them or remove the dependency array.","ArrayExpression",["664"],["662"],["663"],"'breakArray' is assigned a value but never used.","'setBreakArray' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'history' is assigned a value but never used.","'Provider' is defined but never used.","'remote' is assigned a value but never used.","'HomeScreen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["665"],"'useSelector' is defined but never used.","'store' is defined but never used.","'ipcRenderer' is assigned a value but never used.","'s1' is assigned a value but never used.","'complte' is assigned a value but never used.","'setComplete' is assigned a value but never used.","'scores' is assigned a value but never used.","'setScore' is assigned a value but never used.","'order' is assigned a value but never used.","'ScriptTag' is defined but never used.","'InnerHTML' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["666"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.stage.scores'. Either include them or remove the dependency array.",["667"],["662"],["663"],"'isDev' is assigned a value but never used.","'path' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'dates' is defined but never used.","'ColoredDateCellWrapper' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["668"],"'onEventResize' is assigned a value but never used.","'onEventDrop' is assigned a value but never used.","'FruitNinja' is defined but never used.","'StroopTest' is defined but never used.","'PlusOutlined' is defined but never used.","'ApiCalendar' is defined but never used.","'shell' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'showModal' is assigned a value but never used.",["669"],"'BreakManager' is defined but never used.","'Input' is defined but never used.","'Loading' is defined but never used.","'AWClientService' is defined but never used.","React Hook useEffect has a missing dependency: 'emotions'. Either include it or remove the dependency array.",["670"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Reducer' is defined but never used.",["662"],["663"],"'fork' is defined but never used.",["662"],["663"],["662"],["663"],["662"],["663"],"'OnboardingActions' is defined but never used.",["671"],["662"],["663"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'awcheck'. Either include it or remove the dependency array.",["672"],["662"],["663"],"'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'loginUser' is assigned a value but never used.","'message' is defined but never used.","'sites' is assigned a value but never used.","'setSites' is assigned a value but never used.",["662"],["663"],"Expected '!==' and instead saw '!='.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case",["662"],["663"],"no-global-assign","no-unsafe-negation",{"desc":"673","fix":"674"},{"desc":"675","fix":"676"},{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"679","fix":"683"},{"desc":"684","fix":"685"},{"desc":"681","fix":"686"},{"desc":"687","fix":"688"},"Update the dependencies array to be: [history, props.onboarding.awChecked, props.onboarding.complete, props.onboarding.user]",{"range":"689","text":"690"},"Update the dependencies array to be: [dispatch, history]",{"range":"691","text":"692"},"Update the dependencies array to be: [props]",{"range":"693","text":"694"},"Update the dependencies array to be: [dispatch, props.stage.scores]",{"range":"695","text":"696"},"Update the dependencies array to be: [getData]",{"range":"697","text":"698"},{"range":"699","text":"696"},"Update the dependencies array to be: [emotions]",{"range":"700","text":"701"},{"range":"702","text":"698"},"Update the dependencies array to be: [awcheck]",{"range":"703","text":"704"},[1750,1752],"[history, props.onboarding.awChecked, props.onboarding.complete, props.onboarding.user]",[2244,2246],"[dispatch, history]",[1365,1367],"[props]",[697,699],"[dispatch, props.stage.scores]",[1591,1593],"[getData]",[701,703],[2993,2995],"[emotions]",[573,575],[743,745],"[awcheck]"]